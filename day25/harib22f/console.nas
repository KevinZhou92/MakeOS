[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_task_now
	EXTERN	_memman_alloc_4k
	EXTERN	_fifo32_init
	EXTERN	_timer_alloc
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_file_readfat
	EXTERN	_io_cli
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_io_sti
	EXTERN	_boxfill8
	EXTERN	_sheet_refresh
	EXTERN	_task_sleep
	EXTERN	_putfonts8_asc_sht
	EXTERN	_memman_total
	EXTERN	_sprintf
	EXTERN	_file_search
	EXTERN	_file_loadfile
	EXTERN	_memman_free_4k
	EXTERN	_set_segmdesc
	EXTERN	_start_app
	EXTERN	_timer_cancelall
	EXTERN	_sheet_free
	EXTERN	_io_in8
	EXTERN	_io_out8
	EXTERN	_timer_free
	EXTERN	_memman_free
	EXTERN	_memman_alloc
	EXTERN	_memman_init
	EXTERN	_putfonts8_asc
	EXTERN	_sheet_alloc
	EXTERN	_sheet_setbuf
	EXTERN	_make_window8
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
[FILE "console.c"]
[SECTION .text]
	GLOBAL	_console_task
_console_task:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	ESI,DWORD [-556+EBP]
	SUB	ESP,584
	CALL	_task_now
	PUSH	11520
	MOV	EDI,EAX
	PUSH	3932160
	LEA	EBX,DWORD [16+EDI]
	CALL	_memman_alloc_4k
	MOV	DWORD [148+EDI],ESI
	PUSH	EDI
	MOV	DWORD [-592+EBP],EAX
	MOV	EAX,DWORD [8+EBP]
	MOV	DWORD [-556+EBP],EAX
	LEA	EAX,DWORD [-524+EBP]
	PUSH	EAX
	PUSH	128
	PUSH	EBX
	MOV	DWORD [-552+EBP],8
	MOV	DWORD [-548+EBP],28
	MOV	DWORD [-544+EBP],-1
	CALL	_fifo32_init
	CALL	_timer_alloc
	PUSH	1
	PUSH	EBX
	PUSH	EAX
	MOV	DWORD [-540+EBP],EAX
	CALL	_timer_init
	ADD	ESP,36
	PUSH	50
	PUSH	DWORD [-540+EBP]
	CALL	_timer_settime
	PUSH	1049088
	PUSH	DWORD [-592+EBP]
	CALL	_file_readfat
	PUSH	1
	PUSH	62
	PUSH	ESI
	CALL	_cons_putchar
	ADD	ESP,28
L2:
	LEA	EBX,DWORD [16+EDI]
	CALL	_io_cli
	PUSH	EBX
	CALL	_fifo32_status
	POP	ESI
	TEST	EAX,EAX
	JE	L24
	PUSH	EBX
	CALL	_fifo32_get
	MOV	ESI,EAX
	CALL	_io_sti
	POP	ECX
	CMP	ESI,1
	JLE	L25
L7:
	CMP	ESI,2
	JE	L26
L12:
	CMP	ESI,3
	JE	L27
L13:
	LEA	EBX,DWORD [-256+ESI]
	MOV	DWORD [-596+EBP],EBX
	CMP	EBX,255
	JA	L14
	CMP	ESI,264
	JE	L28
	CMP	ESI,266
	JE	L29
	MOV	ECX,DWORD [-552+EBP]
	CMP	ECX,239
	JG	L14
	MOV	EAX,ECX
	MOV	EDX,8
	MOV	EBX,EDX
	PUSH	1
	CDQ
	IDIV	EBX
	MOV	ECX,EAX
	MOV	EAX,ESI
	MOV	BYTE [-590+EBP+ECX*1],AL
	LEA	EAX,DWORD [-556+EBP]
	PUSH	DWORD [-596+EBP]
	PUSH	EAX
L22:
	CALL	_cons_putchar
L23:
	ADD	ESP,12
L14:
	CMP	DWORD [-544+EBP],0
	JS	L21
	MOV	ECX,DWORD [-548+EBP]
	MOV	EDX,DWORD [-552+EBP]
	LEA	EAX,DWORD [15+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [7+EDX]
	PUSH	EAX
	PUSH	ECX
	MOV	ECX,DWORD [8+EBP]
	PUSH	EDX
	MOVZX	EAX,BYTE [-544+EBP]
	PUSH	EAX
	PUSH	DWORD [4+ECX]
	PUSH	DWORD [ECX]
	CALL	_boxfill8
	ADD	ESP,28
L21:
	MOV	ECX,DWORD [-548+EBP]
	MOV	EDX,DWORD [-552+EBP]
	LEA	EAX,DWORD [16+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [8+EDX]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L2
L29:
	PUSH	0
	LEA	EBX,DWORD [-556+EBP]
	PUSH	32
	PUSH	EBX
	CALL	_cons_putchar
	PUSH	EBX
	MOV	EAX,DWORD [-552+EBP]
	MOV	EDX,8
	MOV	ECX,EDX
	CDQ
	IDIV	ECX
	MOV	BYTE [-590+EBP+EAX*1],0
	CALL	_cons_newline
	LEA	EAX,DWORD [-588+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [-592+EBP]
	PUSH	EBX
	PUSH	EAX
	CALL	_cons_runcmd
	ADD	ESP,32
	PUSH	1
	PUSH	62
	PUSH	EBX
	JMP	L22
L28:
	CMP	DWORD [-552+EBP],16
	JLE	L14
	PUSH	0
	LEA	EAX,DWORD [-556+EBP]
	PUSH	32
	PUSH	EAX
	CALL	_cons_putchar
	SUB	DWORD [-552+EBP],8
	JMP	L23
L27:
	MOV	ECX,DWORD [-548+EBP]
	MOV	EDX,DWORD [-552+EBP]
	LEA	EAX,DWORD [15+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [7+EDX]
	PUSH	EAX
	PUSH	ECX
	MOV	ECX,DWORD [8+EBP]
	PUSH	EDX
	PUSH	0
	PUSH	DWORD [4+ECX]
	PUSH	DWORD [ECX]
	CALL	_boxfill8
	ADD	ESP,28
	MOV	DWORD [-544+EBP],-1
	JMP	L13
L26:
	MOV	DWORD [-544+EBP],7
	JMP	L12
L25:
	TEST	ESI,ESI
	JE	L8
	PUSH	0
	PUSH	EBX
	PUSH	DWORD [-540+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-544+EBP],0
	JS	L10
	MOV	DWORD [-544+EBP],7
L10:
	PUSH	50
	PUSH	DWORD [-540+EBP]
	CALL	_timer_settime
	POP	EAX
	POP	EDX
	JMP	L7
L8:
	PUSH	1
	PUSH	EBX
	PUSH	DWORD [-540+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-544+EBP],0
	JS	L10
	MOV	DWORD [-544+EBP],0
	JMP	L10
L24:
	PUSH	EDI
	CALL	_task_sleep
	CALL	_io_sti
	POP	EBX
	JMP	L2
[SECTION .data]
LC0:
	DB	" ",0x00
[SECTION .text]
	GLOBAL	_cons_putchar
_cons_putchar:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	MOV	DL,BYTE [16+EBP]
	MOV	EBX,DWORD [8+EBP]
	MOV	BYTE [-7+EBP],DL
	MOV	BYTE [-6+EBP],AL
	CMP	AL,9
	MOV	BYTE [-5+EBP],0
	JE	L32
	CMP	AL,10
	JE	L44
	CMP	AL,13
	JE	L30
	PUSH	1
	LEA	EAX,DWORD [-6+EBP]
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [8+EBX]
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	CMP	BYTE [-7+EBP],0
	JE	L30
	MOV	EAX,DWORD [4+EBX]
	ADD	EAX,8
	MOV	DWORD [4+EBX],EAX
	CMP	EAX,248
	JE	L44
L30:
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
L44:
	PUSH	EBX
	CALL	_cons_newline
	POP	EAX
	JMP	L30
L32:
	PUSH	1
	PUSH	LC0
	PUSH	0
	PUSH	7
	PUSH	DWORD [8+EBX]
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	MOV	EAX,DWORD [4+EBX]
	ADD	EAX,8
	MOV	DWORD [4+EBX],EAX
	CMP	EAX,248
	JE	L45
L35:
	MOV	EAX,DWORD [4+EBX]
	SUB	EAX,8
	AND	EAX,31
	JNE	L32
	JMP	L30
L45:
	PUSH	EBX
	CALL	_cons_newline
	POP	EAX
	JMP	L35
	GLOBAL	_cons_newline
_cons_newline:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [EAX]
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [8+EDX]
	CMP	EAX,139
	JG	L47
	ADD	EAX,16
	MOV	DWORD [8+EDX],EAX
L48:
	MOV	EAX,DWORD [8+EBP]
	MOV	DWORD [4+EAX],8
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L47:
	MOV	EDI,28
L58:
	MOV	ESI,8
L57:
	MOV	EAX,DWORD [-16+EBP]
	MOV	EDX,EDI
	MOV	ECX,DWORD [4+EAX]
	MOV	EBX,DWORD [EAX]
	LEA	EAX,DWORD [16+EDI]
	IMUL	EAX,ECX
	IMUL	EDX,ECX
	LEA	EAX,DWORD [EAX+ESI*1]
	LEA	EDX,DWORD [EDX+ESI*1]
	INC	ESI
	MOV	AL,BYTE [EAX+EBX*1]
	CMP	ESI,247
	MOV	BYTE [EDX+EBX*1],AL
	JLE	L57
	INC	EDI
	CMP	EDI,139
	JLE	L58
	MOV	EDI,140
L68:
	MOV	ESI,8
L67:
	MOV	EDX,DWORD [-16+EBP]
	MOV	EAX,EDI
	MOV	ECX,EDX
	IMUL	EAX,DWORD [4+EDX]
	MOV	EDX,DWORD [EDX]
	LEA	EAX,DWORD [EAX+ESI*1]
	INC	ESI
	CMP	ESI,247
	MOV	BYTE [EAX+EDX*1],0
	JLE	L67
	INC	EDI
	CMP	EDI,155
	JLE	L68
	PUSH	156
	PUSH	248
	PUSH	28
	PUSH	8
	PUSH	ECX
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L48
	GLOBAL	_cons_putstr0
_cons_putstr0:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	MOV	ESI,DWORD [8+EBP]
	CMP	BYTE [EBX],0
	JNE	L82
L84:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L82:
	PUSH	1
	MOVSX	EAX,BYTE [EBX]
	PUSH	EAX
	INC	EBX
	PUSH	ESI
	CALL	_cons_putchar
	ADD	ESP,12
	CMP	BYTE [EBX],0
	JNE	L82
	JMP	L84
	GLOBAL	_cons_putstr1
_cons_putstr1:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [16+EBP]
	XOR	EBX,EBX
	MOV	EDI,DWORD [12+EBP]
	CMP	EBX,ESI
	JL	L90
L92:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L90:
	PUSH	1
	MOVSX	EAX,BYTE [EBX+EDI*1]
	PUSH	EAX
	INC	EBX
	PUSH	DWORD [8+EBP]
	CALL	_cons_putchar
	ADD	ESP,12
	CMP	EBX,ESI
	JL	L90
	JMP	L92
[SECTION .data]
LC1:
	DB	"mem",0x00
LC2:
	DB	"cls",0x00
LC3:
	DB	"dir",0x00
LC4:
	DB	"type ",0x00
LC5:
	DB	"Bad command.",0x0A,0x0A,0x00
[SECTION .text]
	GLOBAL	_cons_runcmd
_cons_runcmd:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,LC1
	PUSH	EBX
	SUB	ESP,12
	MOV	EAX,DWORD [8+EBP]
	MOV	ECX,DWORD [16+EBP]
	MOV	DWORD [-24+EBP],EAX
	MOV	DWORD [-16+EBP],ECX
	MOV	EAX,DWORD [20+EBP]
	MOV	ESI,DWORD [-24+EBP]
	MOV	DWORD [-20+EBP],EAX
	MOV	EBX,DWORD [12+EBP]
	MOV	EAX,4
	CLD
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L104
	MOV	EAX,4
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC2
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L105
	MOV	EAX,4
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC3
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L106
	MOV	EAX,5
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC4
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L107
	MOV	EAX,DWORD [-24+EBP]
	CMP	BYTE [EAX],0
	JNE	L108
L93:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L108:
	PUSH	EAX
	PUSH	DWORD [-16+EBP]
	PUSH	EBX
	CALL	_cmd_app
	ADD	ESP,12
	TEST	EAX,EAX
	JNE	L93
	MOV	DWORD [12+EBP],LC5
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_putstr0
L107:
	MOV	EAX,DWORD [-24+EBP]
	MOV	ECX,DWORD [-16+EBP]
	MOV	DWORD [16+EBP],EAX
	MOV	DWORD [12+EBP],ECX
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_type
L106:
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_dir
L105:
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_cls
L104:
	MOV	EAX,DWORD [-20+EBP]
	MOV	DWORD [8+EBP],EBX
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_mem
[SECTION .data]
LC6:
	DB	"total   %dMB",0x0A,"free %dKB",0x0A,0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_mem
_cmd_mem:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	SUB	ESP,64
	PUSH	3932160
	CALL	_memman_total
	MOV	EDX,1048576
	SHR	EAX,10
	MOV	EBX,EDX
	MOV	DWORD [ESP],EAX
	MOV	EAX,DWORD [12+EBP]
	CDQ
	IDIV	EBX
	PUSH	EAX
	LEA	EBX,DWORD [-68+EBP]
	PUSH	LC6
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_cons_putstr0
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
	GLOBAL	_cmd_cls
_cmd_cls:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,28
	MOV	EDI,DWORD [8+EBP]
	PUSH	EBX
	MOV	EBX,DWORD [EDI]
L120:
	MOV	ECX,8
L119:
	MOV	EAX,ESI
	MOV	EDX,DWORD [EBX]
	IMUL	EAX,DWORD [4+EBX]
	LEA	EAX,DWORD [EAX+ECX*1]
	INC	ECX
	CMP	ECX,247
	MOV	BYTE [EAX+EDX*1],0
	JLE	L119
	INC	ESI
	CMP	ESI,155
	JLE	L120
	PUSH	156
	PUSH	248
	PUSH	28
	PUSH	8
	PUSH	EBX
	CALL	_sheet_refresh
	MOV	DWORD [8+EDI],28
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC7:
	DB	"filename.ext   %7d",0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_dir
_cmd_dir:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	SUB	ESP,32
	MOV	EDI,DWORD [8+EBP]
L138:
	MOV	AL,BYTE [1058304+EBX]
	TEST	AL,AL
	JE	L127
	CMP	AL,-27
	JE	L128
	TEST	BYTE [1058315+EBX],24
	JE	L142
L128:
	INC	ESI
	ADD	EBX,32
	CMP	ESI,223
	JLE	L138
L127:
	PUSH	EDI
	CALL	_cons_newline
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L142:
	PUSH	DWORD [1058332+EBX]
	PUSH	LC7
	LEA	EAX,DWORD [-44+EBP]
	PUSH	EAX
	CALL	_sprintf
	LEA	EDX,DWORD [1058304+EBX]
	XOR	ECX,ECX
	ADD	ESP,12
L137:
	MOV	AL,BYTE [EDX]
	INC	EDX
	MOV	BYTE [-44+EBP+ECX*1],AL
	INC	ECX
	CMP	ECX,7
	JLE	L137
	MOV	AL,BYTE [1058312+EBX]
	MOV	BYTE [-35+EBP],AL
	MOV	AL,BYTE [1058313+EBX]
	MOV	BYTE [-34+EBP],AL
	MOV	AL,BYTE [1058314+EBX]
	MOV	BYTE [-33+EBP],AL
	LEA	EAX,DWORD [-44+EBP]
	PUSH	EAX
	PUSH	EDI
	CALL	_cons_putstr0
	POP	EAX
	POP	EDX
	JMP	L128
[SECTION .data]
LC8:
	DB	"File not found.",0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_type
_cmd_type:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ESI
	MOV	EAX,DWORD [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	DWORD [-16+EBP],EAX
	PUSH	224
	PUSH	1058304
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,5
	PUSH	EAX
	CALL	_file_search
	ADD	ESP,12
	MOV	ESI,EAX
	TEST	EAX,EAX
	JE	L144
	PUSH	DWORD [28+EAX]
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	1064448
	PUSH	DWORD [-16+EBP]
	PUSH	EAX
	MOV	EBX,EAX
	PUSH	DWORD [28+ESI]
	MOVZX	EAX,WORD [26+ESI]
	PUSH	EAX
	CALL	_file_loadfile
	PUSH	DWORD [28+ESI]
	PUSH	EBX
	PUSH	EDI
	CALL	_cons_putstr1
	ADD	ESP,40
	PUSH	DWORD [28+ESI]
	PUSH	EBX
	PUSH	3932160
	CALL	_memman_free_4k
	ADD	ESP,12
L145:
	MOV	DWORD [8+EBP],EDI
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_newline
L144:
	PUSH	LC8
	PUSH	EDI
	CALL	_cons_putstr0
	POP	ECX
	POP	EBX
	JMP	L145
[SECTION .data]
LC9:
	DB	"Hari",0x00
LC10:
	DB	".hrb file format error.",0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_app
_cmd_app:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	XOR	EBX,EBX
	SUB	ESP,56
	MOV	ESI,DWORD [16+EBP]
	CALL	_task_now
	MOV	DWORD [-56+EBP],EAX
L152:
	MOV	AL,BYTE [EBX+ESI*1]
	CMP	AL,32
	JLE	L148
	MOV	BYTE [-44+EBP+EBX*1],AL
	INC	EBX
	CMP	EBX,12
	JLE	L152
L148:
	PUSH	224
	LEA	ESI,DWORD [-44+EBP]
	PUSH	1058304
	PUSH	ESI
	MOV	BYTE [-44+EBP+EBX*1],0
	CALL	_file_search
	ADD	ESP,12
	TEST	EAX,EAX
	MOV	DWORD [-48+EBP],EAX
	JE	L174
L173:
	MOV	EAX,DWORD [-48+EBP]
	PUSH	DWORD [28+EAX]
	PUSH	3932160
	CALL	_memman_alloc_4k
	MOV	EDX,DWORD [-48+EBP]
	PUSH	1064448
	PUSH	DWORD [12+EBP]
	PUSH	EAX
	MOV	DWORD [-68+EBP],EAX
	PUSH	DWORD [28+EDX]
	MOVZX	EAX,WORD [26+EDX]
	PUSH	EAX
	CALL	_file_loadfile
	MOV	EDI,DWORD [-48+EBP]
	ADD	ESP,28
	CMP	DWORD [28+EDI],35
	JBE	L155
	MOV	ESI,DWORD [-68+EBP]
	MOV	EAX,LC9
	CLD
	ADD	ESI,4
	MOV	ECX,4
	MOV	EDI,EAX
	REPE
	CMPSB
	JNE	L155
	MOV	EAX,DWORD [-68+EBP]
	CMP	BYTE [EAX],0
	JE	L175
L155:
	PUSH	LC10
	PUSH	DWORD [8+EBP]
	CALL	_cons_putstr0
	POP	EDI
	POP	EAX
L167:
	MOV	EDI,DWORD [-48+EBP]
	PUSH	DWORD [28+EDI]
	PUSH	DWORD [-68+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	DWORD [8+EBP]
	CALL	_cons_newline
	MOV	EAX,1
L146:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L175:
	MOV	EDX,DWORD [EAX]
	MOV	EDI,DWORD [12+EAX]
	MOV	EBX,DWORD [16+EAX]
	MOV	ESI,DWORD [20+EAX]
	PUSH	EDX
	MOV	DWORD [-60+EBP],EDX
	PUSH	3932160
	MOV	DWORD [-64+EBP],EDI
	CALL	_memman_alloc_4k
	MOV	EDI,DWORD [-48+EBP]
	MOV	EDX,DWORD [-56+EBP]
	MOV	DWORD [-52+EBP],EAX
	MOV	DWORD [152+EDX],EAX
	PUSH	16634
	PUSH	DWORD [-68+EBP]
	MOV	EAX,DWORD [28+EDI]
	DEC	EAX
	PUSH	EAX
	PUSH	2563928
	CALL	_set_segmdesc
	MOV	EAX,DWORD [-60+EBP]
	PUSH	16626
	DEC	EAX
	PUSH	DWORD [-52+EBP]
	PUSH	EAX
	PUSH	2563936
	CALL	_set_segmdesc
	ADD	ESP,40
	TEST	EBX,EBX
	JLE	L170
	MOV	ECX,DWORD [-64+EBP]
	MOV	EAX,DWORD [-68+EBP]
	ADD	ECX,DWORD [-52+EBP]
	LEA	EDX,DWORD [EAX+ESI*1]
L160:
	MOV	AL,BYTE [EDX]
	INC	EDX
	MOV	BYTE [ECX],AL
	INC	ECX
	DEC	EBX
	JNE	L160
L170:
	MOV	EAX,DWORD [-56+EBP]
	MOV	EBX,255
	ADD	EAX,48
	PUSH	EAX
	PUSH	8032
	PUSH	DWORD [-64+EBP]
	PUSH	8024
	PUSH	27
	CALL	_start_app
	MOV	ESI,DWORD [4068]
	ADD	ESP,20
	ADD	ESI,1044
L166:
	MOV	EAX,DWORD [28+ESI]
	AND	EAX,17
	CMP	EAX,17
	JE	L176
L163:
	ADD	ESI,40
	DEC	EBX
	JNS	L166
	MOV	EAX,DWORD [-56+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_timer_cancelall
	PUSH	DWORD [-60+EBP]
	PUSH	DWORD [-52+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	ADD	ESP,16
	JMP	L167
L176:
	MOV	EDX,DWORD [-56+EBP]
	CMP	DWORD [36+ESI],EDX
	JNE	L163
	PUSH	ESI
	CALL	_sheet_free
	POP	EAX
	JMP	L163
L174:
	CMP	BYTE [-45+EBP+EBX*1],46
	JE	L153
	PUSH	224
	PUSH	1058304
	PUSH	ESI
	MOV	BYTE [-44+EBP+EBX*1],46
	MOV	BYTE [-43+EBP+EBX*1],72
	MOV	BYTE [-42+EBP+EBX*1],82
	MOV	BYTE [-41+EBP+EBX*1],66
	MOV	BYTE [-40+EBP+EBX*1],0
	CALL	_file_search
	ADD	ESP,12
	MOV	DWORD [-48+EBP],EAX
L153:
	CMP	DWORD [-48+EBP],0
	JNE	L173
	XOR	EAX,EAX
	JMP	L146
	GLOBAL	_hrb_api
_hrb_api:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,16
	MOV	EBX,DWORD [28+EBP]
	CALL	_task_now
	MOV	EDX,DWORD [4068]
	CMP	EBX,1
	MOV	DWORD [-16+EBP],EAX
	MOV	EDI,DWORD [152+EAX]
	MOV	EAX,DWORD [148+EAX]
	MOV	DWORD [-24+EBP],EDX
	MOV	DWORD [-20+EBP],EAX
	JE	L241
	CMP	EBX,2
	JE	L242
	CMP	EBX,3
	JE	L243
	CMP	EBX,4
	JE	L244
	CMP	EBX,5
	JE	L245
	CMP	EBX,6
	JE	L246
	CMP	EBX,7
	JE	L247
	CMP	EBX,8
	JE	L248
	CMP	EBX,9
	JE	L249
	CMP	EBX,10
	JE	L250
	CMP	EBX,11
	JE	L251
	CMP	EBX,12
	JE	L252
	CMP	EBX,13
	JE	L253
	CMP	EBX,14
	JE	L254
	CMP	EBX,15
	JE	L211
	CMP	EBX,16
	JE	L255
	CMP	EBX,17
	JE	L256
	CMP	EBX,18
	JE	L257
	CMP	EBX,19
	JE	L258
	CMP	EBX,20
	JE	L259
L179:
	XOR	EAX,EAX
L177:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L259:
	MOV	EDX,DWORD [36+EBP]
	TEST	EDX,EDX
	JNE	L231
	PUSH	97
	CALL	_io_in8
	MOV	EBX,EAX
	AND	EBX,13
	PUSH	EBX
	PUSH	97
	CALL	_io_out8
L233:
	ADD	ESP,12
	JMP	L179
L231:
	MOV	ECX,1193180000
	MOV	ESI,EDX
	MOV	EAX,ECX
	PUSH	182
	CDQ
	IDIV	ESI
	PUSH	67
	MOV	EBX,EAX
	CALL	_io_out8
	MOVZX	EAX,BL
	SAR	EBX,8
	PUSH	EAX
	PUSH	66
	CALL	_io_out8
	PUSH	EBX
	PUSH	66
	CALL	_io_out8
	PUSH	97
	CALL	_io_in8
	MOV	EBX,EAX
	OR	EBX,3
	AND	EBX,15
	PUSH	EBX
	PUSH	97
	CALL	_io_out8
	ADD	ESP,36
	JMP	L179
L258:
	PUSH	DWORD [24+EBP]
	CALL	_timer_free
L234:
	POP	EAX
	JMP	L179
L257:
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [24+EBP]
	CALL	_timer_settime
L236:
	POP	EAX
	POP	EDX
	JMP	L179
L256:
	MOV	EAX,DWORD [36+EBP]
	ADD	EAX,256
	PUSH	EAX
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,16
	PUSH	EAX
	PUSH	DWORD [24+EBP]
	CALL	_timer_init
	JMP	L233
L255:
	CALL	_timer_alloc
	MOV	DWORD [68+EBP],EAX
	MOV	BYTE [9+EAX],1
	JMP	L179
L211:
	CALL	_io_cli
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_status
	POP	ESI
	TEST	EAX,EAX
	JNE	L214
	CMP	DWORD [36+EBP],0
	JE	L215
	PUSH	DWORD [-16+EBP]
	CALL	_task_sleep
	POP	EBX
L214:
	MOV	ESI,DWORD [-16+EBP]
	ADD	ESI,16
	PUSH	ESI
	CALL	_fifo32_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	ECX
	CMP	EBX,1
	JLE	L260
L217:
	CMP	EBX,2
	JE	L261
L218:
	CMP	EBX,3
	JE	L262
L219:
	CMP	EBX,255
	JLE	L211
	LEA	EAX,DWORD [-256+EBX]
	MOV	DWORD [68+EBP],EAX
	JMP	L179
L262:
	MOV	EDX,DWORD [-20+EBP]
	MOV	DWORD [12+EDX],-1
	JMP	L219
L261:
	MOV	EAX,DWORD [-20+EBP]
	MOV	DWORD [12+EAX],7
	JMP	L218
L260:
	PUSH	1
	PUSH	ESI
	MOV	ESI,DWORD [-20+EBP]
	PUSH	DWORD [16+ESI]
	CALL	_timer_init
	PUSH	50
	PUSH	DWORD [16+ESI]
	CALL	_timer_settime
	ADD	ESP,20
	JMP	L217
L215:
	CALL	_io_sti
	MOV	DWORD [68+EBP],-1
	JMP	L179
L254:
	PUSH	DWORD [24+EBP]
	CALL	_sheet_free
	JMP	L234
L253:
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	MOV	ESI,DWORD [24+EBP]
	PUSH	DWORD [36+EBP]
	AND	ESI,-2
	PUSH	ESI
	CALL	_hrb_api_linewin
	ADD	ESP,24
L240:
	TEST	DWORD [24+EBP],1
	JNE	L179
	MOV	EAX,DWORD [8+EBP]
	INC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	INC	EAX
	PUSH	EAX
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
L238:
	PUSH	ESI
L235:
	CALL	_sheet_refresh
L237:
	ADD	ESP,20
	JMP	L179
L252:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [24+EBP]
	JMP	L235
L251:
	MOV	ESI,DWORD [24+EBP]
	MOV	EAX,DWORD [8+EBP]
	AND	ESI,-2
	MOV	DL,BYTE [36+EBP]
	IMUL	EAX,DWORD [4+ESI]
	ADD	EAX,DWORD [12+EBP]
	MOV	ECX,DWORD [ESI]
	MOV	BYTE [EAX+ECX*1],DL
	TEST	DWORD [24+EBP],1
	JNE	L179
	MOV	EAX,DWORD [8+EBP]
	INC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	INC	EAX
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	JMP	L238
L250:
	MOV	EAX,DWORD [32+EBP]
	ADD	EAX,15
	AND	EAX,-16
	PUSH	EAX
	MOV	EAX,DWORD [24+EBP]
	PUSH	DWORD [36+EBP]
	ADD	EAX,EDI
	PUSH	EAX
	CALL	_memman_free
	JMP	L233
L249:
	MOV	EAX,DWORD [32+EBP]
	ADD	EAX,15
	AND	EAX,-16
	PUSH	EAX
	MOV	EAX,DWORD [24+EBP]
	ADD	EAX,EDI
	PUSH	EAX
	CALL	_memman_alloc
	MOV	DWORD [68+EBP],EAX
	JMP	L236
L248:
	MOV	EBX,DWORD [24+EBP]
	ADD	EBX,EDI
	PUSH	EBX
	CALL	_memman_init
	AND	DWORD [32+EBP],-16
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
	PUSH	EBX
	CALL	_memman_free
	ADD	ESP,16
	JMP	L179
L247:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	MOV	ESI,DWORD [24+EBP]
	PUSH	DWORD [36+EBP]
	AND	ESI,-2
	MOVZX	EAX,BYTE [16+EBP]
	PUSH	EAX
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_boxfill8
	ADD	ESP,28
	JMP	L240
L246:
	MOV	EAX,DWORD [16+EBP]
	MOV	ESI,DWORD [24+EBP]
	ADD	EAX,EDI
	AND	ESI,-2
	PUSH	EAX
	MOVSX	EAX,BYTE [36+EBP]
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_putfonts8_asc
	ADD	ESP,24
	TEST	DWORD [24+EBP],1
	JNE	L179
	MOV	ECX,DWORD [12+EBP]
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [32+EBP]
	ADD	EAX,16
	PUSH	EAX
	LEA	EAX,DWORD [ECX+EDX*8]
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	ECX
	JMP	L238
L245:
	PUSH	DWORD [-24+EBP]
	CALL	_sheet_alloc
	MOV	EBX,DWORD [24+EBP]
	MOV	ECX,DWORD [-16+EBP]
	ADD	EBX,EDI
	MOV	DWORD [36+EAX],ECX
	MOV	ESI,EAX
	OR	DWORD [28+EAX],16
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	EBX
	PUSH	EAX
	CALL	_sheet_setbuf
	MOV	EAX,DWORD [32+EBP]
	PUSH	0
	ADD	EAX,EDI
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	EBX
	MOV	EBX,2
	CALL	_make_window8
	MOV	ECX,DWORD [-24+EBP]
	MOV	EDX,DWORD [-24+EBP]
	ADD	ESP,44
	MOV	EAX,DWORD [12+EDX]
	SUB	EAX,DWORD [8+EBP]
	CDQ
	IDIV	EBX
	PUSH	EAX
	MOV	EAX,DWORD [8+ECX]
	SUB	EAX,DWORD [12+EBP]
	CDQ
	IDIV	EBX
	PUSH	EAX
	PUSH	ESI
	CALL	_sheet_slide
	MOV	EAX,DWORD [-24+EBP]
	PUSH	DWORD [16+EAX]
	PUSH	ESI
	CALL	_sheet_updown
	MOV	DWORD [68+EBP],ESI
	JMP	L237
L244:
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,48
	JMP	L177
L243:
	MOV	EAX,DWORD [24+EBP]
	PUSH	DWORD [32+EBP]
	ADD	EAX,EDI
	PUSH	EAX
	PUSH	DWORD [-20+EBP]
	CALL	_cons_putstr1
	JMP	L233
L242:
	MOV	EAX,DWORD [24+EBP]
	ADD	EAX,EDI
	PUSH	EAX
	PUSH	DWORD [-20+EBP]
	CALL	_cons_putstr0
	JMP	L236
L241:
	PUSH	1
	MOVZX	EAX,BYTE [36+EBP]
	PUSH	EAX
	PUSH	DWORD [-20+EBP]
	CALL	_cons_putchar
	JMP	L233
[SECTION .data]
LC11:
	DB	0x0A,"INT 0C :",0x0A," Stack Exception.",0x0A,0x00
LC12:
	DB	"EIP = %08X",0x0A,0x00
[SECTION .text]
	GLOBAL	_inthandler0c
_inthandler0c:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-44+EBP]
	SUB	ESP,32
	CALL	_task_now
	MOV	ESI,EAX
	MOV	EDI,DWORD [148+EAX]
	ADD	ESI,48
	PUSH	LC11
	PUSH	EDI
	CALL	_cons_putstr0
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [44+EAX]
	PUSH	LC12
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	EDI
	CALL	_cons_putstr0
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	MOV	EAX,ESI
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC13:
	DB	0x0A,"INT 0D :",0x0A," General Protected Exception.",0x0A,0x00
[SECTION .text]
	GLOBAL	_inthandler0d
_inthandler0d:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-44+EBP]
	SUB	ESP,32
	CALL	_task_now
	MOV	ESI,EAX
	MOV	EDI,DWORD [148+EAX]
	ADD	ESI,48
	PUSH	LC13
	PUSH	EDI
	CALL	_cons_putstr0
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [44+EAX]
	PUSH	LC12
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	EDI
	CALL	_cons_putstr0
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	MOV	EAX,ESI
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_hrb_api_linewin
_hrb_api_linewin:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,12
	MOV	EBX,DWORD [12+EBP]
	MOV	EAX,DWORD [20+EBP]
	MOV	ECX,EBX
	MOV	EDX,DWORD [24+EBP]
	SAL	ECX,10
	MOV	EDI,EDX
	MOV	DWORD [-16+EBP],ECX
	MOV	ESI,EAX
	MOV	ECX,DWORD [16+EBP]
	SUB	EDI,DWORD [16+EBP]
	SAL	ECX,10
	SUB	ESI,EBX
	MOV	DWORD [-20+EBP],ECX
	JS	L287
L266:
	TEST	EDI,EDI
	JS	L288
L267:
	CMP	ESI,EDI
	JL	L268
	LEA	ECX,DWORD [1+ESI]
	CMP	EBX,EAX
	MOV	ESI,-1024
	JG	L270
	MOV	ESI,1024
L270:
	CMP	DWORD [16+EBP],EDX
	JG	L271
	SUB	EDX,DWORD [16+EBP]
	INC	EDX
L286:
	SAL	EDX,10
	MOV	EAX,EDX
	CDQ
	IDIV	ECX
	MOV	EDI,EAX
L273:
	TEST	ECX,ECX
	JLE	L284
	MOV	EBX,ECX
L282:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [-20+EBP]
	SAR	EAX,10
	MOV	ECX,DWORD [-16+EBP]
	IMUL	EAX,DWORD [4+EDX]
	SAR	ECX,10
	MOV	DWORD [-24+EBP],ECX
	MOV	ECX,DWORD [EDX]
	ADD	EAX,DWORD [-24+EBP]
	MOV	DL,BYTE [28+EBP]
	MOV	BYTE [EAX+ECX*1],DL
	ADD	DWORD [-16+EBP],ESI
	ADD	DWORD [-20+EBP],EDI
	DEC	EBX
	JNE	L282
L284:
	ADD	ESP,12
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L271:
	SUB	EDX,DWORD [16+EBP]
	DEC	EDX
	JMP	L286
L268:
	LEA	ECX,DWORD [1+EDI]
	CMP	DWORD [16+EBP],EDX
	MOV	EDI,-1024
	JG	L275
	MOV	EDI,1024
L275:
	CMP	EBX,EAX
	JG	L276
	SUB	EAX,EBX
	LEA	EDX,DWORD [1+EAX]
L285:
	SAL	EDX,10
	MOV	EAX,EDX
	CDQ
	IDIV	ECX
	MOV	ESI,EAX
	JMP	L273
L276:
	SUB	EAX,EBX
	LEA	EDX,DWORD [-1+EAX]
	JMP	L285
L288:
	NEG	EDI
	JMP	L267
L287:
	NEG	ESI
	JMP	L266
