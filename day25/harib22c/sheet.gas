	.file	"sheet.c"
	.text
	.balign 2
.globl _shtctl_init
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
_shtctl_init:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	8(%ebp), %esi
	pushl	$11284
	movl	16(%ebp), %edi
	pushl	%esi
	call	_memman_alloc_4k
	movl	%eax, %ebx
	popl	%eax
	popl	%edx
	testl	%ebx, %ebx
	je	L3
	movl	20(%ebp), %eax
	imull	%edi, %eax
	pushl	%eax
	pushl	%esi
	call	_memman_alloc_4k
	testl	%eax, %eax
	movl	%eax, 4(%ebx)
	popl	%edx
	popl	%ecx
	je	L11
	movl	12(%ebp), %eax
	movl	%edi, 8(%ebx)
	movl	%eax, (%ebx)
	leal	10200(%ebx), %edx
	movl	20(%ebp), %eax
	movl	%eax, 12(%ebx)
	movl	%ebx, %eax
	movl	$-1, 16(%ebx)
L9:
	movl	$0, 1072(%eax)
	movl	%ebx, 1076(%eax)
	addl	$40, %eax
	cmpl	%edx, %eax
	jle	L9
L3:
	leal	-12(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L11:
	pushl	$11284
	pushl	%ebx
	pushl	%esi
	call	_memman_free_4k
	addl	$12, %esp
	jmp	L3
	.balign 2
.globl _sheet_alloc
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
_sheet_alloc:
	pushl	%ebp
	xorl	%edx, %edx
	movl	%esp, %ebp
	movl	8(%ebp), %eax
	addl	$1044, %eax
L18:
	cmpl	$0, 28(%eax)
	je	L21
	incl	%edx
	addl	$40, %eax
	cmpl	$255, %edx
	jle	L18
	xorl	%eax, %eax
L12:
	popl	%ebp
	ret
L21:
	movl	$1, 28(%eax)
	movl	$-1, 24(%eax)
	movl	$0, 36(%eax)
	jmp	L12
	.balign 2
.globl _sheet_setbuf
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
_sheet_setbuf:
	pushl	%ebp
	movl	%esp, %ebp
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, (%edx)
	movl	16(%ebp), %eax
	movl	%eax, 4(%edx)
	movl	20(%ebp), %eax
	movl	%eax, 8(%edx)
	movl	24(%ebp), %eax
	movl	%eax, 20(%edx)
	popl	%ebp
	ret
	.balign 2
.globl _sheet_refreshmap
	.def	_sheet_refreshmap;	.scl	2;	.type	32;	.endef
_sheet_refreshmap:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$40, %esp
	movl	8(%ebp), %eax
	cmpl	$0, 12(%ebp)
	movl	4(%eax), %eax
	movl	%eax, -40(%ebp)
	js	L54
L24:
	cmpl	$0, 16(%ebp)
	js	L55
L25:
	movl	8(%ebp), %edx
	movl	8(%edx), %eax
	cmpl	%eax, 20(%ebp)
	jle	L26
	movl	%eax, 20(%ebp)
L26:
	movl	8(%ebp), %esi
	movl	12(%esi), %eax
	cmpl	%eax, 24(%ebp)
	jle	L27
	movl	%eax, 24(%ebp)
L27:
	movl	8(%ebp), %eax
	movl	28(%ebp), %edi
	movl	%edi, -16(%ebp)
	cmpl	16(%eax), %edi
	jg	L49
L47:
	movl	8(%ebp), %esi
	movl	-16(%ebp), %edx
	movl	16(%ebp), %ebx
	movl	20(%esi,%edx,4), %ecx
	movl	%ecx, %eax
	subl	%esi, %eax
	movl	(%ecx), %edi
	subl	$1044, %eax
	movl	16(%ecx), %edx
	sarl	$3, %eax
	movl	%edi, -32(%ebp)
	imull	$-858993459, %eax, %eax
	movl	24(%ebp), %edi
	subl	%edx, %ebx
	subl	%edx, %edi
	movb	%al, -33(%ebp)
	movl	20(%ebp), %esi
	movl	12(%ebp), %edx
	movl	12(%ecx), %eax
	movl	%edi, -44(%ebp)
	subl	%eax, %esi
	subl	%eax, %edx
	movl	%esi, -52(%ebp)
	movl	%edx, -28(%ebp)
	js	L56
L32:
	testl	%ebx, %ebx
	js	L57
L33:
	movl	4(%ecx), %eax
	cmpl	%eax, -52(%ebp)
	jle	L34
	movl	%eax, -52(%ebp)
L34:
	movl	8(%ecx), %eax
	cmpl	%eax, -44(%ebp)
	jle	L35
	movl	%eax, -44(%ebp)
L35:
	cmpl	-44(%ebp), %ebx
	jge	L51
L46:
	movl	16(%ecx), %esi
	movl	-28(%ebp), %edx
	addl	%ebx, %esi
	cmpl	-52(%ebp), %edx
	movl	%esi, -24(%ebp)
	jge	L53
L45:
	movl	%ebx, %eax
	movl	12(%ecx), %edi
	imull	4(%ecx), %eax
	addl	%edx, %edi
	movl	-32(%ebp), %esi
	addl	%edx, %eax
	movl	%edi, -20(%ebp)
	movzbl	(%eax,%esi), %esi
	cmpl	20(%ecx), %esi
	je	L42
	movl	8(%ebp), %edi
	movl	-24(%ebp), %eax
	movl	-40(%ebp), %esi
	imull	8(%edi), %eax
	addl	-20(%ebp), %eax
	movl	%eax, -48(%ebp)
	movb	-33(%ebp), %al
	movl	-48(%ebp), %edi
	movb	%al, (%edi,%esi)
L42:
	incl	%edx
	cmpl	-52(%ebp), %edx
	jl	L45
L53:
	incl	%ebx
	cmpl	-44(%ebp), %ebx
	jl	L46
L51:
	movl	8(%ebp), %edx
	incl	-16(%ebp)
	movl	-16(%ebp), %eax
	cmpl	16(%edx), %eax
	jle	L47
L49:
	addl	$40, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L57:
	xorl	%ebx, %ebx
	jmp	L33
L56:
	movl	$0, -28(%ebp)
	jmp	L32
L55:
	movl	$0, 16(%ebp)
	jmp	L25
L54:
	movl	$0, 12(%ebp)
	jmp	L24
	.balign 2
.globl _sheet_refreshsub
	.def	_sheet_refreshsub;	.scl	2;	.type	32;	.endef
_sheet_refreshsub:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$44, %esp
	movl	8(%ebp), %eax
	movl	8(%ebp), %edx
	cmpl	$0, 12(%ebp)
	movl	(%eax), %eax
	movl	4(%edx), %edx
	movl	%eax, -36(%ebp)
	movl	%edx, -40(%ebp)
	js	L89
L59:
	cmpl	$0, 16(%ebp)
	js	L90
L60:
	movl	8(%ebp), %esi
	movl	8(%esi), %eax
	cmpl	%eax, 20(%ebp)
	jle	L61
	movl	%eax, 20(%ebp)
L61:
	movl	8(%ebp), %edi
	movl	12(%edi), %eax
	cmpl	%eax, 24(%ebp)
	jle	L62
	movl	%eax, 24(%ebp)
L62:
	movl	28(%ebp), %eax
	movl	32(%ebp), %edx
	movl	%eax, -16(%ebp)
	cmpl	%edx, %eax
	jg	L84
L82:
	movl	8(%ebp), %edi
	movl	-16(%ebp), %esi
	movl	16(%ebp), %ecx
	movl	20(%edi,%esi,4), %ebx
	movl	20(%ebp), %esi
	movl	(%ebx), %eax
	movl	16(%ebx), %edx
	movl	%eax, -32(%ebp)
	subl	%edx, %ecx
	movl	%ebx, %eax
	subl	%edi, %eax
	movl	24(%ebp), %edi
	subl	$1044, %eax
	subl	%edx, %edi
	sarl	$3, %eax
	movl	12(%ebp), %edx
	imull	$-858993459, %eax, %eax
	movb	%al, -41(%ebp)
	movl	%edi, -56(%ebp)
	movl	12(%ebx), %eax
	subl	%eax, %esi
	subl	%eax, %edx
	movl	%esi, -28(%ebp)
	movl	%edx, -24(%ebp)
	js	L91
L67:
	testl	%ecx, %ecx
	js	L92
L68:
	movl	4(%ebx), %eax
	cmpl	%eax, -28(%ebp)
	jle	L69
	movl	%eax, -28(%ebp)
L69:
	movl	8(%ebx), %eax
	cmpl	%eax, -56(%ebp)
	jle	L70
	movl	%eax, -56(%ebp)
L70:
	movl	%ecx, %esi
	cmpl	-56(%ebp), %ecx
	jge	L86
L81:
	movl	16(%ebx), %edi
	movl	-24(%ebp), %ecx
	addl	%esi, %edi
	cmpl	-28(%ebp), %ecx
	movl	%edi, -20(%ebp)
	jge	L88
L80:
	movl	8(%ebp), %edx
	movl	-20(%ebp), %edi
	movl	12(%ebx), %eax
	imull	8(%edx), %edi
	addl	%ecx, %eax
	movb	-41(%ebp), %dl
	addl	%edi, %eax
	movl	-40(%ebp), %edi
	movl	%eax, -52(%ebp)
	cmpb	%dl, (%eax,%edi)
	je	L93
L77:
	incl	%ecx
	cmpl	-28(%ebp), %ecx
	jl	L80
L88:
	incl	%esi
	cmpl	-56(%ebp), %esi
	jl	L81
L86:
	movl	32(%ebp), %esi
	incl	-16(%ebp)
	cmpl	%esi, -16(%ebp)
	jle	L82
L84:
	addl	$44, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L93:
	movl	%esi, %eax
	movl	-32(%ebp), %edx
	imull	4(%ebx), %eax
	addl	%ecx, %eax
	movl	-36(%ebp), %edi
	movb	(%eax,%edx), %al
	movl	-52(%ebp), %edx
	movb	%al, (%edx,%edi)
	jmp	L77
L92:
	xorl	%ecx, %ecx
	jmp	L68
L91:
	movl	$0, -24(%ebp)
	jmp	L67
L90:
	movl	$0, 16(%ebp)
	jmp	L60
L89:
	movl	$0, 12(%ebp)
	jmp	L59
	.balign 2
.globl _sheet_updown
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
_sheet_updown:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	movl	8(%ebp), %edi
	movl	12(%ebp), %ebx
	movl	32(%edi), %esi
	movl	24(%edi), %eax
	movl	%eax, -16(%ebp)
	movl	16(%esi), %eax
	incl	%eax
	cmpl	%eax, %ebx
	jle	L95
	movl	%eax, %ebx
L95:
	cmpl	$-1, %ebx
	jge	L96
	orl	$-1, %ebx
L96:
	movl	%ebx, 24(%edi)
	cmpl	%ebx, -16(%ebp)
	jle	L97
	testl	%ebx, %ebx
	js	L98
	movl	-16(%ebp), %ecx
L103:
	movl	16(%esi,%ecx,4), %eax
	movl	%eax, 20(%esi,%ecx,4)
	movl	%ecx, 24(%eax)
	decl	%ecx
	cmpl	%ebx, %ecx
	jg	L103
	movl	%edi, 20(%esi,%ebx,4)
	incl	%ebx
	pushl	%ebx
	movl	16(%edi), %ecx
	movl	%ecx, %eax
	addl	8(%edi), %eax
	pushl	%eax
	movl	12(%edi), %edx
	movl	%edx, %eax
	addl	4(%edi), %eax
	pushl	%eax
	pushl	%ecx
	pushl	%edx
	pushl	%esi
	call	_sheet_refreshmap
	pushl	-16(%ebp)
L133:
	pushl	%ebx
L132:
	movl	16(%edi), %ecx
	movl	%ecx, %eax
	addl	8(%edi), %eax
	pushl	%eax
	movl	12(%edi), %edx
	movl	%edx, %eax
	addl	4(%edi), %eax
	pushl	%eax
	pushl	%ecx
	pushl	%edx
	pushl	%esi
	call	_sheet_refreshsub
	addl	$52, %esp
L94:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L98:
	movl	16(%esi), %eax
	cmpl	-16(%ebp), %eax
	jle	L105
	movl	-16(%ebp), %ecx
	cmpl	%eax, %ecx
	jge	L105
L110:
	movl	24(%esi,%ecx,4), %eax
	movl	%eax, 20(%esi,%ecx,4)
	movl	%ecx, 24(%eax)
	incl	%ecx
	cmpl	16(%esi), %ecx
	jl	L110
L105:
	decl	16(%esi)
	pushl	$0
	movl	16(%edi), %ecx
	movl	%ecx, %eax
	addl	8(%edi), %eax
	pushl	%eax
	movl	12(%edi), %edx
	movl	%edx, %eax
	addl	4(%edi), %eax
	pushl	%eax
	pushl	%ecx
	pushl	%edx
	pushl	%esi
	call	_sheet_refreshmap
	movl	-16(%ebp), %eax
	decl	%eax
	pushl	%eax
	pushl	$0
	jmp	L132
L97:
	cmpl	%ebx, -16(%ebp)
	jge	L94
	cmpl	$0, -16(%ebp)
	js	L113
	movl	-16(%ebp), %ecx
	cmpl	%ebx, %ecx
	jge	L129
L118:
	movl	24(%esi,%ecx,4), %eax
	movl	%eax, 20(%esi,%ecx,4)
	movl	%ecx, 24(%eax)
	incl	%ecx
	cmpl	%ebx, %ecx
	jl	L118
L129:
	movl	%edi, 20(%esi,%ebx,4)
L119:
	pushl	%ebx
	movl	16(%edi), %ecx
	movl	%ecx, %eax
	addl	8(%edi), %eax
	pushl	%eax
	movl	12(%edi), %edx
	movl	%edx, %eax
	addl	4(%edi), %eax
	pushl	%eax
	pushl	%ecx
	pushl	%edx
	pushl	%esi
	call	_sheet_refreshmap
	pushl	%ebx
	jmp	L133
L113:
	movl	16(%esi), %ecx
	cmpl	%ebx, %ecx
	jl	L131
L124:
	movl	20(%esi,%ecx,4), %edx
	leal	1(%ecx), %eax
	movl	%edx, 24(%esi,%ecx,4)
	decl	%ecx
	movl	%eax, 24(%edx)
	cmpl	%ebx, %ecx
	jge	L124
L131:
	movl	%edi, 20(%esi,%ebx,4)
	incl	16(%esi)
	jmp	L119
	.balign 2
.globl _sheet_refresh
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
_sheet_refresh:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	movl	24(%ebx), %eax
	testl	%eax, %eax
	js	L134
	pushl	%eax
	pushl	%eax
	movl	16(%ebx), %ecx
	movl	%ecx, %eax
	addl	16(%ebp), %ecx
	addl	24(%ebp), %eax
	pushl	%eax
	movl	12(%ebx), %edx
	movl	%edx, %eax
	addl	12(%ebp), %edx
	addl	20(%ebp), %eax
	pushl	%eax
	pushl	%ecx
	pushl	%edx
	pushl	32(%ebx)
	call	_sheet_refreshsub
	addl	$28, %esp
L134:
	movl	-4(%ebp), %ebx
	leave
	ret
	.balign 2
.globl _sheet_slide
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
_sheet_slide:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ebx
	movl	8(%ebp), %ebx
	movl	32(%ebx), %eax
	movl	12(%ebx), %edi
	movl	%eax, -16(%ebp)
	movl	16(%ebx), %esi
	movl	12(%ebp), %eax
	movl	%eax, 12(%ebx)
	movl	16(%ebp), %eax
	movl	%eax, 16(%ebx)
	cmpl	$0, 24(%ebx)
	js	L136
	pushl	$0
	movl	%esi, %eax
	addl	8(%ebx), %eax
	pushl	%eax
	movl	%edi, %eax
	addl	4(%ebx), %eax
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	-16(%ebp)
	call	_sheet_refreshmap
	movl	16(%ebp), %eax
	pushl	24(%ebx)
	addl	8(%ebx), %eax
	pushl	%eax
	movl	12(%ebp), %eax
	addl	4(%ebx), %eax
	pushl	%eax
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	-16(%ebp)
	call	_sheet_refreshmap
	movl	24(%ebx), %eax
	addl	$48, %esp
	decl	%eax
	pushl	%eax
	movl	%esi, %eax
	pushl	$0
	addl	8(%ebx), %eax
	pushl	%eax
	movl	%edi, %eax
	addl	4(%ebx), %eax
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	-16(%ebp)
	call	_sheet_refreshsub
	movl	16(%ebp), %eax
	pushl	24(%ebx)
	pushl	24(%ebx)
	addl	8(%ebx), %eax
	pushl	%eax
	movl	12(%ebp), %eax
	addl	4(%ebx), %eax
	pushl	%eax
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	-16(%ebp)
	call	_sheet_refreshsub
	addl	$56, %esp
L136:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _sheet_free
	.def	_sheet_free;	.scl	2;	.type	32;	.endef
_sheet_free:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	cmpl	$0, 24(%ebx)
	js	L139
	pushl	$-1
	pushl	%ebx
	call	_sheet_updown
	popl	%eax
	popl	%edx
L139:
	movl	$0, 28(%ebx)
	movl	-4(%ebp), %ebx
	leave
	ret
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
