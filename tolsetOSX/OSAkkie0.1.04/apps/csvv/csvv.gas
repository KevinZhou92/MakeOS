	.file	"csvv.c"
	.data
	.balign 4
_maxell_x:
	.long	7
	.balign 4
_maxell_y:
	.long	16
LC0:
	.ascii "File not found.\12\0"
LC1:
	.ascii "Filesize is too big.\12\0"
LC2:
	.ascii "CSV-Viewer\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	$366464, %eax
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	call	__alloca
	imull	$82, _maxell_x, %ebx
	imull	$18, _maxell_y, %eax
	addl	$12, %ebx
	addl	$52, %eax
	imull	%eax, %ebx
	call	_osak_getbuflen
	leal	-204860(%ebp), %edx
	imull	%eax, %ebx
	leal	16(%ebx), %eax
	call	__alloca
	leal	15(%esp), %eax
	andl	$-16, %eax
	movl	%eax, -366464(%ebp)
	leal	-366460(%ebp), %eax
	cmpl	%edx, %eax
	ja	L76
L6:
	movl	$-1, (%eax)
	addl	$4, %eax
	cmpl	%edx, %eax
	jbe	L6
L76:
	pushl	$30
	leal	-44(%ebp), %ebx
	pushl	%ebx
	movl	$0, -204848(%ebp)
	movl	$0, -204852(%ebp)
	movl	$0, -204856(%ebp)
	call	_api_cmdline
	popl	%edx
	movl	%ebx, %eax
	popl	%ecx
	cmpb	$32, -44(%ebp)
	jle	L78
L11:
	incl	%eax
	cmpb	$32, (%eax)
	jg	L11
L78:
	cmpb	$32, (%eax)
	je	L16
L80:
	pushl	%eax
	call	_api_fopen
	movl	%eax, %ebx
	popl	%eax
	testl	%ebx, %ebx
	jne	L17
	pushl	$LC0
	call	_api_putstr0
	call	_api_end
	popl	%edi
L17:
	pushl	$0
	pushl	%ebx
	call	_api_fsize
	popl	%ecx
	popl	%esi
	cmpl	$204798, %eax
	movl	%eax, -204848(%ebp)
	jle	L18
	pushl	$LC1
	call	_api_putstr0
	call	_api_end
	popl	%edx
L18:
	pushl	%ebx
	leal	-204844(%ebp), %eax
	pushl	-204848(%ebp)
	pushl	%eax
	call	_api_fread
	pushl	%ebx
	xorl	%ebx, %ebx
	call	_api_fclose
	xorl	%ecx, %ecx
	addl	$16, %esp
	movl	$0, -366468(%ebp)
	cmpb	$44, -204844(%ebp)
	je	L19
	movl	$0, -366460(%ebp)
L19:
	movl	-366468(%ebp), %edx
	cmpl	-204848(%ebp), %edx
	jge	L21
	leal	-366460(%ebp), %edi
	xorl	%esi, %esi
L38:
	movb	-204844(%ebp,%ebx), %dl
	incl	%ebx
	cmpb	$34, %dl
	je	L92
L23:
	testl	%ecx, %ecx
	jne	L28
	cmpb	$44, %dl
	je	L93
L28:
	cmpb	$13, %dl
	je	L94
L32:
	cmpb	$10, %dl
	je	L95
L20:
	cmpl	-204848(%ebp), %ebx
	jl	L38
L21:
	imull	$18, _maxell_y, %eax
	pushl	$LC2
	addl	$52, %eax
	pushl	$-1
	incl	-204856(%ebp)
	pushl	%eax
	incl	-204852(%ebp)
	imull	$82, _maxell_x, %eax
	addl	$12, %eax
	xorl	%ebx, %ebx
	pushl	%eax
	pushl	-366464(%ebp)
	call	_api_openwin
	pushl	$7
	imull	$18, _maxell_y, %edx
	addl	$42, %edx
	movl	%eax, _win
	pushl	%edx
	imull	$82, _maxell_x, %edx
	addl	$6, %edx
	pushl	%edx
	pushl	$42
	pushl	$6
	pushl	%eax
	call	_api_boxfilwin
	addl	$44, %esp
	imull	$82, _maxell_x, %eax
	cmpl	%eax, %ebx
	jg	L83
L43:
	imull	$18, _maxell_y, %eax
	pushl	$15
	addl	$42, %eax
	pushl	%eax
	leal	6(%ebx), %eax
	pushl	%eax
	addl	$82, %ebx
	pushl	$42
	pushl	%eax
	pushl	_win
	call	_api_linewin
	addl	$24, %esp
	imull	$82, _maxell_x, %eax
	cmpl	%eax, %ebx
	jle	L43
L83:
	imull	$18, _maxell_y, %eax
	xorl	%ebx, %ebx
	cmpl	%eax, %ebx
	jg	L85
L48:
	imull	$82, _maxell_x, %edx
	pushl	$15
	leal	42(%ebx), %eax
	pushl	%eax
	addl	$6, %edx
	pushl	%edx
	addl	$18, %ebx
	pushl	%eax
	pushl	$6
	pushl	_win
	call	_api_linewin
	addl	$24, %esp
	imull	$18, _maxell_y, %eax
	cmpl	%eax, %ebx
	jle	L48
L85:
	leal	-366460(%ebp), %ebx
	movl	$1, %esi
	pushl	%ebx
	movl	$1, %edi
	pushl	$1
	pushl	$1
	movl	$1, -366472(%ebp)
	movl	$1, -366468(%ebp)
	call	_PutCell
	pushl	$1
	pushl	$1
	pushl	$4
	call	_my_drawboxId
	pushl	%ebx
	pushl	$0
	pushl	$0
	call	_Putcellinfo
	addl	$36, %esp
L49:
	pushl	$1
	call	_api_getkey
	movl	%eax, %edx
	popl	%eax
	cmpl	$180, %edx
	je	L96
L52:
	cmpl	$182, %edx
	je	L97
L56:
	cmpl	$184, %edx
	je	L98
L60:
	cmpl	$178, %edx
	je	L99
L64:
	cmpl	$185, %edx
	je	L100
L68:
	cmpl	$179, %edx
	je	L101
L71:
	testl	%edx, %edx
	jne	L49
	pushl	%edi
	pushl	-366468(%ebp)
	pushl	$4
	call	_my_drawboxId
	movl	-366468(%ebp), %edx
	leal	-366460(%ebp), %eax
	movl	-366472(%ebp), %ecx
	pushl	%eax
	leal	-2(%edi,%esi), %eax
	pushl	%eax
	leal	-2(%edx,%ecx), %eax
	pushl	%eax
	call	_Putcellinfo
	addl	$24, %esp
	jmp	L49
L101:
	movl	_maxell_y, %ecx
	movl	$201, %eax
	subl	%ecx, %eax
	cmpl	%eax, %esi
	jg	L71
	leal	-1(%ecx,%esi), %esi
	cmpl	%eax, %esi
	jle	L73
	pushl	%edi
	movl	$202, %esi
	pushl	-366468(%ebp)
	pushl	$15
	call	_my_drawboxId
	addl	$12, %esp
	movl	_maxell_y, %eax
	subl	%eax, %esi
	leal	-1(%eax), %edi
L73:
	leal	-366460(%ebp), %eax
	pushl	%eax
	pushl	%esi
	pushl	-366472(%ebp)
	call	_PutCell
	addl	$12, %esp
	xorl	%edx, %edx
	jmp	L71
L100:
	cmpl	$1, %esi
	jle	L68
	movl	%esi, %eax
	subl	_maxell_y, %eax
	leal	1(%eax), %esi
	testl	%esi, %esi
	jle	L102
L70:
	leal	-366460(%ebp), %eax
	pushl	%eax
	pushl	%esi
	pushl	-366472(%ebp)
	call	_PutCell
	addl	$12, %esp
	xorl	%edx, %edx
	jmp	L68
L102:
	pushl	%edi
	movl	$1, %esi
	pushl	-366468(%ebp)
	pushl	$15
	movl	$1, %edi
	call	_my_drawboxId
	addl	$12, %esp
	jmp	L70
L99:
	movl	_maxell_y, %eax
	decl	%eax
	cmpl	%eax, %edi
	jge	L65
	pushl	%edi
	incl	%edi
	pushl	-366468(%ebp)
	pushl	$15
	call	_my_drawboxId
L91:
	xorl	%edx, %edx
	addl	$12, %esp
	jmp	L64
L65:
	leal	(%edi,%esi), %eax
	cmpl	$200, %eax
	jg	L64
	leal	-366460(%ebp), %eax
	incl	%esi
	pushl	%eax
	pushl	%esi
	pushl	-366472(%ebp)
	call	_PutCell
	jmp	L91
L98:
	cmpl	$1, %edi
	jle	L61
	pushl	%edi
	decl	%edi
	pushl	-366468(%ebp)
	pushl	$15
	call	_my_drawboxId
L90:
	xorl	%edx, %edx
	addl	$12, %esp
	jmp	L60
L61:
	cmpl	$1, %esi
	jle	L60
	leal	-366460(%ebp), %eax
	decl	%esi
	pushl	%eax
	pushl	%esi
	pushl	-366472(%ebp)
	call	_PutCell
	jmp	L90
L97:
	movl	_maxell_x, %eax
	decl	%eax
	cmpl	%eax, -366468(%ebp)
	jge	L57
	pushl	%edi
	pushl	-366468(%ebp)
	pushl	$15
	call	_my_drawboxId
	incl	-366468(%ebp)
L89:
	xorl	%edx, %edx
	addl	$12, %esp
	jmp	L56
L57:
	movl	-366472(%ebp), %eax
	addl	-366468(%ebp), %eax
	cmpl	$200, %eax
	jg	L56
	leal	-366460(%ebp), %eax
	incl	-366472(%ebp)
	pushl	%eax
	pushl	%esi
	pushl	-366472(%ebp)
	call	_PutCell
	jmp	L89
L96:
	cmpl	$1, -366468(%ebp)
	jle	L53
	pushl	%edi
	pushl	-366468(%ebp)
	pushl	$15
	call	_my_drawboxId
	decl	-366468(%ebp)
L88:
	xorl	%edx, %edx
	addl	$12, %esp
	jmp	L52
L53:
	cmpl	$1, -366472(%ebp)
	jle	L52
	leal	-366460(%ebp), %eax
	decl	-366472(%ebp)
	pushl	%eax
	pushl	%esi
	pushl	-366472(%ebp)
	call	_PutCell
	jmp	L88
L95:
	cmpb	$13, -204844(%ebp,%ebx)
	jne	L20
L31:
	movl	-204848(%ebp), %eax
	cmpl	%eax, %ebx
	jge	L20
	movl	-366468(%ebp), %edx
	cmpl	%edx, -204856(%ebp)
	jge	L34
	movl	%edx, -204856(%ebp)
L34:
	incl	%ebx
	addl	$804, %edi
	addl	$201, %esi
	cmpl	%eax, %ebx
	movl	$0, -366468(%ebp)
	jge	L21
	movb	-204844(%ebp,%ebx), %al
	incl	-204852(%ebp)
	cmpb	$44, %al
	je	L36
	cmpb	$10, %al
	je	L36
	cmpb	$13, %al
	je	L36
	movl	%ebx, (%edi)
L36:
	cmpb	$34, %al
	jne	L20
L87:
	incl	%ecx
	jmp	L20
L94:
	cmpb	$10, -204844(%ebp,%ebx)
	jne	L32
	jmp	L31
L93:
	incl	-366468(%ebp)
	movb	-204844(%ebp,%ebx), %al
	cmpb	$44, %al
	je	L28
	cmpb	$10, %al
	je	L28
	cmpb	$13, %al
	je	L28
	movl	-366468(%ebp), %eax
	addl	%esi, %eax
	movl	%ebx, -366460(%ebp,%eax,4)
	jmp	L28
L92:
	cmpl	$1, %ebx
	je	L87
	testl	%ecx, %ecx
	je	L87
	movb	-204844(%ebp,%ebx), %al
	cmpb	$44, %al
	je	L27
	cmpb	$10, %al
	je	L27
	cmpb	$13, %al
	jne	L23
L27:
	decl	%ecx
	jmp	L23
L16:
	incl	%eax
	cmpb	$32, (%eax)
	je	L16
	jmp	L80
	.balign 2
.globl _setdec
	.def	_setdec;	.scl	2;	.type	32;	.endef
_setdec:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	8(%ebp), %edx
	movl	16(%ebp), %ecx
	movl	12(%ebp), %ebx
L104:
	movl	%edx, %eax
	movl	$10, %esi
	cltd
	idivl	%esi
	addl	$48, %edx
	movb	%dl, (%ecx,%ebx)
	movl	%eax, %edx
	decl	%ecx
	testl	%eax, %eax
	je	L105
	testl	%ecx, %ecx
	jns	L104
L105:
	popl	%ebx
	movl	%ecx, %eax
	popl	%esi
	popl	%ebp
	ret
	.balign 2
.globl _GetCellData
	.def	_GetCellData;	.scl	2;	.type	32;	.endef
_GetCellData:
	pushl	%ebp
	orl	$-1, %eax
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	movl	16(%ebp), %edx
	pushl	%ebx
	movl	12(%ebp), %esi
	xorl	%ebx, %ebx
	testl	%edx, %edx
	js	L109
	cmpb	$34, 161616(%edx,%esi)
	je	L126
L112:
	movb	161616(%esi,%edx), %cl
	incl	%edx
	cmpl	161612(%esi), %edx
	jg	L113
	cmpb	$13, %cl
	je	L113
	cmpb	$10, %cl
	je	L113
	testl	%edi, %edi
	jne	L125
	cmpb	$44, %cl
	je	L113
L118:
	cmpl	20(%ebp), %ebx
	jge	L112
	cmpb	$9, %cl
	je	L127
	movl	8(%ebp), %eax
	movb	%cl, (%ebx,%eax)
L124:
	incl	%ebx
	jmp	L112
L127:
	addl	$3, %ebx
	jmp	L124
L113:
	movl	%ebx, %eax
L109:
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L125:
	cmpb	$34, %cl
	jne	L118
	movb	161616(%edx,%esi), %al
	cmpb	$44, %al
	je	L113
	cmpb	$10, %al
	je	L113
	cmpb	$13, %al
	je	L113
	cmpb	$34, %al
	jne	L118
	movb	161617(%edx,%esi), %al
	cmpb	$44, %al
	je	L118
	cmpb	$10, %al
	je	L118
	cmpb	$13, %al
	je	L118
	incl	%edx
	jmp	L118
L126:
	incl	%edx
	movl	$1, %edi
	jmp	L112
	.balign 2
.globl _PutCell
	.def	_PutCell;	.scl	2;	.type	32;	.endef
_PutCell:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	subl	$48, %esp
	movl	12(%ebp), %edi
	movb	$0, -18(%ebp)
L133:
	movb	$32, -28(%ebp,%esi)
	incl	%esi
	cmpl	$9, %esi
	jle	L133
	movl	$1, %esi
	cmpl	_maxell_y, %esi
	jge	L168
	movl	$20, -52(%ebp)
L138:
	pushl	$5
	leal	-28(%ebp), %ebx
	pushl	%ebx
	incl	%esi
	pushl	%edi
	incl	%edi
	call	_setdec
	pushl	%ebx
	pushl	$10
	pushl	$12
	pushl	$7
	pushl	-52(%ebp)
	pushl	$2
	call	_putstr
	addl	$36, %esp
	addl	$18, -52(%ebp)
	cmpl	_maxell_y, %esi
	jl	L138
L168:
	xorl	%esi, %esi
L143:
	movb	$32, -28(%ebp,%esi)
	incl	%esi
	cmpl	$9, %esi
	jle	L143
	movl	8(%ebp), %eax
	movl	$1, %esi
	movl	$84, %edi
	decl	%eax
L144:
	movl	%eax, %ebx
	cmpl	$25, %eax
	jle	L147
	movl	$26, %edx
	movl	%edx, %ecx
	cltd
	idivl	%ecx
	movl	%eax, -60(%ebp)
	movb	-60(%ebp), %al
	addl	$64, %eax
	movb	%al, -24(%ebp)
L147:
	movl	$26, %edx
	movl	%ebx, %eax
	movl	%edx, %ecx
	incl	%esi
	cltd
	idivl	%ecx
	leal	65(%edx), %eax
	movb	%al, -23(%ebp)
	leal	-28(%ebp), %eax
	pushl	%eax
	pushl	$10
	pushl	$12
	pushl	$7
	pushl	$2
	pushl	%edi
	addl	$82, %edi
	call	_putstr
	addl	$24, %esp
	leal	1(%ebx), %eax
	cmpl	_maxell_x, %esi
	jl	L144
	movl	$1, %eax
	movl	$1, -32(%ebp)
	cmpl	_maxell_y, %eax
	jge	L172
	movl	$20, -48(%ebp)
L164:
	movl	$1, %edx
	movl	$1, -36(%ebp)
	cmpl	_maxell_x, %edx
	jge	L174
	movl	8(%ebp), %ecx
	decl	%ecx
	movl	$84, -40(%ebp)
	movl	%ecx, -44(%ebp)
L163:
	movl	12(%ebp), %eax
	movl	-32(%ebp), %edx
	movl	-44(%ebp), %ebx
	xorl	%esi, %esi
	leal	-2(%edx,%eax), %edi
L161:
	movb	$32, -28(%ebp,%esi)
	incl	%esi
	cmpl	$9, %esi
	jle	L161
	imull	$201, %edi, %edi
	leal	-28(%ebp), %ecx
	pushl	%ecx
	pushl	$10
	pushl	$7
	pushl	$0
	pushl	-48(%ebp)
	pushl	-40(%ebp)
	call	_putstr
	leal	-28(%ebp), %ecx
	movl	16(%ebp), %edx
	leal	(%ebx,%edi), %eax
	pushl	$10
	pushl	(%edx,%eax,4)
	pushl	%edx
	pushl	%ecx
	call	_GetCellData
	addl	$40, %esp
	testl	%eax, %eax
	js	L155
	leal	-28(%ebp), %eax
	pushl	%eax
	pushl	$10
	pushl	$7
	pushl	$0
	pushl	-48(%ebp)
	pushl	-40(%ebp)
	call	_putstr
	addl	$24, %esp
L155:
	incl	-36(%ebp)
	incl	-44(%ebp)
	movl	-36(%ebp), %edx
	addl	$82, -40(%ebp)
	cmpl	_maxell_x, %edx
	jl	L163
L174:
	incl	-32(%ebp)
	movl	-32(%ebp), %ecx
	addl	$18, -48(%ebp)
	cmpl	_maxell_y, %ecx
	jl	L164
L172:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _Putcellinfo
	.def	_Putcellinfo;	.scl	2;	.type	32;	.endef
_Putcellinfo:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$8, %edi
	pushl	%ebx
	movl	$8, %esi
	subl	$12, %esp
	xorl	%ebx, %ebx
	imull	$82, _maxell_x, %ecx
	movl	%ecx, %eax
	movl	%esp, -16(%ebp)
	cltd
	idivl	%esi
	leal	19(%eax), %eax
	andl	$-4, %eax
	call	__alloca
	movl	%ecx, %eax
	cltd
	idivl	%edi
	leal	15(%esp), %esi
	andl	$-16, %esi
	cmpl	%eax, %ebx
	jge	L186
L182:
	movb	$32, (%esi,%ebx)
	movl	$8, %ecx
	imull	$82, _maxell_x, %edx
	movl	%edx, %eax
	incl	%ebx
	cltd
	idivl	%ecx
	cmpl	%eax, %ebx
	jl	L182
L186:
	movb	$40, (%esi)
	movl	$8, %edi
	movb	$41, 9(%esi)
	imull	$82, _maxell_x, %eax
	cltd
	idivl	%edi
	movb	$0, (%esi,%eax)
	pushl	$7
	pushl	%esi
	movl	12(%ebp), %eax
	incl	%eax
	pushl	%eax
	call	_setdec
	addl	$12, %esp
	movl	%eax, %ebx
	movl	$26, %edx
	movl	8(%ebp), %eax
	movl	%edx, %ecx
	cltd
	idivl	%ecx
	movl	%eax, -24(%ebp)
	leal	65(%edx), %eax
	movb	%al, (%esi,%ebx)
	decl	%ebx
	cmpl	$25, 8(%ebp)
	jle	L183
	movb	-24(%ebp), %al
	addl	$64, %eax
	movb	%al, (%esi,%ebx)
L183:
	pushl	$8
	pushl	$41
	imull	$82, _maxell_x, %eax
	cltd
	idivl	%edi
	leal	6(,%eax,8), %eax
	pushl	%eax
	pushl	$26
	pushl	$6
	pushl	_win
	call	_api_boxfilwin
	pushl	%esi
	imull	$82, _maxell_x, %eax
	cltd
	idivl	%edi
	pushl	%eax
	pushl	$0
	pushl	$26
	pushl	$6
	pushl	_win
	call	_api_putstrwin
	addl	$48, %esp
	imull	$82, _maxell_x, %eax
	cltd
	idivl	%edi
	subl	$12, %eax
	pushl	%eax
	movl	12(%ebp), %edi
	movl	16(%ebp), %edx
	imull	$201, %edi, %edi
	movl	%edi, %eax
	addl	8(%ebp), %eax
	pushl	(%edx,%eax,4)
	pushl	%edx
	pushl	%esi
	call	_GetCellData
	addl	$16, %esp
	testl	%eax, %eax
	js	L184
	movb	$0, (%esi,%eax)
	pushl	%esi
	pushl	%eax
	pushl	$0
	pushl	$26
	pushl	$86
	pushl	_win
	call	_api_putstrwin
	addl	$24, %esp
L184:
	movl	-16(%ebp), %esp
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _my_drawboxId
	.def	_my_drawboxId;	.scl	2;	.type	32;	.endef
_my_drawboxId:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ebx
	imull	$18, 16(%ebp), %esi
	imull	$82, 12(%ebp), %ebx
	pushl	8(%ebp)
	leal	42(%esi), %eax
	leal	88(%ebx), %edi
	pushl	%eax
	addl	$6, %ebx
	pushl	%edi
	movl	%eax, -16(%ebp)
	pushl	%eax
	addl	$60, %esi
	pushl	%ebx
	pushl	_win
	call	_api_linewin
	pushl	8(%ebp)
	pushl	%esi
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	_win
	call	_api_linewin
	addl	$48, %esp
	pushl	8(%ebp)
	pushl	%esi
	pushl	%ebx
	pushl	-16(%ebp)
	pushl	%ebx
	pushl	_win
	call	_api_linewin
	pushl	8(%ebp)
	pushl	%esi
	pushl	%edi
	pushl	-16(%ebp)
	pushl	%edi
	pushl	_win
	call	_api_linewin
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putstr
	.def	_putstr;	.scl	2;	.type	32;	.endef
_putstr:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%esi
	pushl	%esi
	movl	16(%ebp), %eax
	movl	28(%ebp), %edx
	movl	%eax, -16(%ebp)
	movl	8(%ebp), %esi
	movl	20(%ebp), %eax
	movl	12(%ebp), %ebx
	movl	24(%ebp), %edi
	movl	%edx, -20(%ebp)
	cmpl	$7, %eax
	je	L189
	pushl	%eax
	leal	58(%ebx), %eax
	pushl	%eax
	leal	6(%esi,%edi,8), %eax
L191:
	pushl	%eax
	leal	42(%ebx), %eax
	pushl	%eax
	leal	6(%esi), %eax
	pushl	%eax
	pushl	_win
	call	_api_boxfilwin
	movl	-16(%ebp), %edx
	movl	-20(%ebp), %eax
	movl	%edi, 24(%ebp)
	movl	%eax, 28(%ebp)
	movl	%edx, 20(%ebp)
	leal	42(%ebx), %eax
	addl	$24, %esp
	movl	%eax, 16(%ebp)
	leal	6(%esi), %eax
	movl	%eax, 12(%ebp)
	movl	_win, %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_api_putstrwin
L189:
	leal	57(%ebx), %eax
	pushl	$7
	pushl	%eax
	leal	5(%esi,%edi,8), %eax
	jmp	L191
	.data
	.balign 4
_win:
	.space 4
	.def	_api_putstrwin;	.scl	2;	.type	32;	.endef
	.def	_putstr;	.scl	2;	.type	32;	.endef
	.def	_api_getkey;	.scl	2;	.type	32;	.endef
	.def	_Putcellinfo;	.scl	2;	.type	32;	.endef
	.def	_my_drawboxId;	.scl	2;	.type	32;	.endef
	.def	_PutCell;	.scl	2;	.type	32;	.endef
	.def	_api_linewin;	.scl	2;	.type	32;	.endef
	.def	_api_boxfilwin;	.scl	2;	.type	32;	.endef
	.def	_api_openwin;	.scl	2;	.type	32;	.endef
	.def	_api_fclose;	.scl	2;	.type	32;	.endef
	.def	_api_fread;	.scl	2;	.type	32;	.endef
	.def	_api_fsize;	.scl	2;	.type	32;	.endef
	.def	_api_end;	.scl	2;	.type	32;	.endef
	.def	_api_putstr0;	.scl	2;	.type	32;	.endef
	.def	_api_fopen;	.scl	2;	.type	32;	.endef
	.def	_api_cmdline;	.scl	2;	.type	32;	.endef
	.def	_osak_getbuflen;	.scl	2;	.type	32;	.endef
