[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_io_out8
	EXTERN	_io_in8
	EXTERN	_fifo32_put
	EXTERN	_wait_KBC_sendready
[FILE "mouse.c"]
[SECTION .text]
	GLOBAL	_inthandler2c
_inthandler2c:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	100
	PUSH	160
	CALL	_io_out8
	PUSH	98
	PUSH	32
	CALL	_io_out8
	PUSH	96
	CALL	_io_in8
	ADD	EAX,DWORD [_mousedata0]
	PUSH	EAX
	PUSH	DWORD [_mousefifo]
	CALL	_fifo32_put
	LEAVE
	RET
	GLOBAL	_enable_mouse
_enable_mouse:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EAX,DWORD [8+EBP]
	MOV	DWORD [_mousefifo],EAX
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [_mousedata0],EAX
	CALL	_wait_KBC_sendready
	PUSH	212
	PUSH	100
	CALL	_io_out8
	CALL	_wait_KBC_sendready
	PUSH	244
	PUSH	96
	CALL	_io_out8
	MOV	EAX,DWORD [16+EBP]
	MOV	BYTE [3+EAX],0
	LEAVE
	RET
	GLOBAL	_mouse_decode
_mouse_decode:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	MOV	ECX,DWORD [8+EBP]
	MOV	EBX,DWORD [12+EBP]
	MOV	DL,BYTE [3+ECX]
	TEST	DL,DL
	JNE	L4
	CMP	BL,-6
	JE	L12
L6:
	XOR	EAX,EAX
L3:
	POP	EBX
	POP	EBP
	RET
L12:
	MOV	BYTE [3+ECX],1
	JMP	L6
L4:
	MOVZX	EAX,DL
	DEC	DL
	MOV	BYTE [-1+EAX+ECX*1],BL
	JE	L13
L7:
	MOV	AL,BYTE [3+ECX]
	CMP	AL,3
	JE	L14
	INC	EAX
	MOV	BYTE [3+ECX],AL
	JMP	L6
L14:
	MOV	BL,BYTE [ECX]
	MOV	EAX,EBX
	AND	EAX,7
	MOV	DWORD [12+ECX],EAX
	MOVZX	EAX,BYTE [2+ECX]
	MOV	DWORD [8+ECX],EAX
	MOV	AL,BL
	MOVZX	EDX,BYTE [1+ECX]
	AND	EAX,16
	MOV	DWORD [4+ECX],EDX
	MOV	BYTE [3+ECX],1
	TEST	AL,AL
	JE	L10
	OR	EDX,-256
	MOV	DWORD [4+ECX],EDX
L10:
	AND	EBX,32
	TEST	BL,BL
	JE	L11
	OR	DWORD [8+ECX],-256
L11:
	NEG	DWORD [8+ECX]
	MOV	EAX,1
	JMP	L3
L13:
	MOV	AL,BYTE [ECX]
	AND	EAX,-56
	CMP	AL,8
	JE	L7
	MOV	BYTE [3+ECX],0
	JMP	L7
	GLOBAL	_mousefifo
[SECTION .data]
	ALIGNB	4
_mousefifo:
	RESB	4
	GLOBAL	_mousedata0
[SECTION .data]
	ALIGNB	4
_mousedata0:
	RESB	4
