	.file	"graphic.c"
	.data
_table_rgb:
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-58
	.byte	-58
	.byte	-58
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
_table_rgb_osakkie:
	.byte	58
	.byte	110
	.byte	-91
	.byte	0
	.byte	-128
	.byte	-1
	.text
	.balign 2
.globl _init_palette
	.def	_init_palette;	.scl	2;	.type	32;	.endef
_init_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$676, %esp
	call	_get_bpp
	cmpl	$8, %eax
	je	L24
L1:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L24:
	movl	$0, -672(%ebp)
	movl	$0, -676(%ebp)
	movl	$0, -680(%ebp)
L17:
	xorl	%edi, %edi
	xorl	%esi, %esi
	xorl	%ebx, %ebx
L16:
	xorl	%edx, %edx
	movl	$0, -688(%ebp)
L15:
	movl	-680(%ebp), %eax
	movb	-688(%ebp), %cl
	addl	%ebx, %eax
	movl	%eax, -684(%ebp)
	addl	%edx, %eax
	imull	$3, %eax, %eax
	incl	%edx
	movb	%cl, -668(%ebp,%eax)
	movl	%esi, %ecx
	movb	%cl, -667(%ebp,%eax)
	movb	-676(%ebp), %cl
	movb	%cl, -666(%ebp,%eax)
	addl	$51, -688(%ebp)
	cmpl	$5, %edx
	jle	L15
	incl	%edi
	addl	$51, %esi
	addl	$6, %ebx
	cmpl	$5, %edi
	jle	L16
	incl	-672(%ebp)
	addl	$51, -676(%ebp)
	addl	$36, -680(%ebp)
	cmpl	$5, -672(%ebp)
	jle	L17
	pushl	$_table_rgb
	pushl	$15
	pushl	$0
	call	_set_palette
	leal	-668(%ebp), %eax
	pushl	%eax
	pushl	$231
	pushl	$16
	call	_set_palette
	pushl	$_table_rgb_osakkie
	pushl	$241
	pushl	$240
	call	_set_palette
	jmp	L1
	.balign 2
.globl _set_palette
	.def	_set_palette;	.scl	2;	.type	32;	.endef
_set_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	movl	8(%ebp), %ebx
	movl	12(%ebp), %edi
	movl	16(%ebp), %esi
	call	_io_load_eflags
	movl	%eax, -16(%ebp)
	call	_io_cli
	pushl	%ebx
	pushl	$968
	call	_io_out8
	cmpl	%edi, %ebx
	popl	%eax
	popl	%edx
	jle	L30
L32:
	movl	-16(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_io_store_eflags
L30:
	movb	(%esi), %al
	incl	%ebx
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	1(%esi), %al
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	2(%esi), %al
	shrb	$2, %al
	addl	$3, %esi
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	addl	$24, %esp
	cmpl	%edi, %ebx
	jle	L30
	jmp	L32
	.balign 2
.globl _get_bpp
	.def	_get_bpp;	.scl	2;	.type	32;	.endef
_get_bpp:
	pushl	%ebp
	movsbl	4082,%eax
	movl	%esp, %ebp
	popl	%ebp
	ret
	.data
_pallet.0:
	.long	0
	.long	16711680
	.long	65280
	.long	16776960
	.long	255
	.long	16711935
	.long	65535
	.long	16777215
	.long	13027014
	.long	8650752
	.long	33792
	.long	8684544
	.long	132
	.long	8650884
	.long	33924
	.long	8684676
	.text
	.balign 2
.globl _get_color
	.def	_get_color;	.scl	2;	.type	32;	.endef
_get_color:
	pushl	%ebp
	xorl	%ecx, %ecx
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	movl	8(%ebp), %eax
	movl	12(%ebp), %ebx
	testl	%eax, %eax
	jne	L35
	movsbl	4082,%eax
L35:
	cmpl	$1, %eax
	je	L91
	cmpl	$8, %eax
	je	L74
	cmpl	$16, %eax
	je	L92
L59:
	addl	$16, %esp
	movl	%ecx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L92:
	movl	%ebx, %ecx
	movl	%ebx, %eax
	sarl	$8, %ecx
	shrl	$5, %eax
	andl	$63488, %ecx
	andl	$2016, %eax
	orl	%eax, %ecx
	movzbl	%bl,%eax
	sarl	$3, %eax
	orl	%eax, %ecx
	jmp	L59
L74:
	cmpl	_pallet.0(,%ecx,4), %ebx
	je	L59
	incl	%ecx
	cmpl	$15, %ecx
	jle	L74
	movl	$240, %ecx
	cmpl	$3829413, %ebx
	je	L59
	movl	$241, %ecx
	cmpl	$33023, %ebx
	je	L59
	movl	%ebx, %edx
	movl	$51, %ecx
	movzbl	%bh, %eax
	sarl	$16, %edx
	addl	%eax, %edx
	movzbl	%bl,%eax
	addl	%eax, %edx
	movl	%edx, %eax
	cltd
	idivl	%ecx
	movl	%eax, %ecx
	jmp	L59
L91:
	cmpl	$15, %ebx
	ja	L37
L43:
	cmpl	%ecx, %ebx
	je	L89
	incl	%ecx
	cmpl	$15, %ecx
	jle	L43
	jmp	L59
L89:
	movl	_pallet.0(,%ecx,4), %ecx
	jmp	L59
L37:
	leal	-16(%ebx), %eax
	cmpl	$215, %eax
	ja	L45
	movl	$0, -16(%ebp)
	movl	$0, -20(%ebp)
L62:
	xorl	%esi, %esi
	movl	$0, -28(%ebp)
L61:
	xorl	%edx, %edx
L60:
	movl	-28(%ebp), %eax
	movl	-20(%ebp), %edi
	addl	%edx, %eax
	leal	16(%edi,%eax), %edi
	cmpl	%ebx, %edi
	je	L90
	incl	%edx
	cmpl	$5, %edx
	jle	L60
	incl	%esi
	addl	$6, -28(%ebp)
	cmpl	$5, %esi
	jle	L61
	incl	-16(%ebp)
	addl	$36, -20(%ebp)
	cmpl	$5, -16(%ebp)
	jle	L62
	jmp	L59
L90:
	sall	$8, %esi
	movl	%edx, %ecx
	sall	$16, %ecx
	orl	%esi, %ecx
	orl	-16(%ebp), %ecx
	jmp	L59
L45:
	cmpl	$240, %ebx
	je	L93
	cmpl	$241, %ebx
	jne	L59
	movl	$33023, %ecx
	jmp	L59
L93:
	movl	$3829413, %ecx
	jmp	L59
	.balign 2
.globl _boxfill
	.def	_boxfill;	.scl	2;	.type	32;	.endef
_boxfill:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	%ecx
	movl	24(%ebp), %esi
	call	_get_bpp
	pushl	16(%ebp)
	pushl	%eax
	movl	%eax, %ebx
	call	_get_color
	cmpl	$8, %ebx
	movl	%eax, %edi
	popl	%eax
	popl	%edx
	je	L139
	cmpl	$16, %ebx
	je	L140
	cmpl	$24, %ebx
	je	L141
L94:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L141:
	movl	%esi, %ecx
	cmpl	32(%ebp), %esi
	jg	L94
	movl	12(%ebp), %ebx
	imull	%esi, %ebx
L129:
	movl	20(%ebp), %edx
	cmpl	28(%ebp), %edx
	jg	L138
	leal	(%edx,%ebx), %eax
	movl	8(%ebp), %esi
	leal	(%esi,%eax,4), %eax
L128:
	movl	%edi, (%eax)
	incl	%edx
	addl	$4, %eax
	cmpl	28(%ebp), %edx
	jle	L128
L138:
	incl	%ecx
	addl	12(%ebp), %ebx
	cmpl	32(%ebp), %ecx
	jle	L129
	jmp	L94
L140:
	movl	%esi, %ecx
	cmpl	32(%ebp), %esi
	jg	L94
	movl	12(%ebp), %ebx
	imull	%esi, %ebx
L117:
	movl	20(%ebp), %edx
	cmpl	28(%ebp), %edx
	jg	L135
L116:
	leal	(%edx,%ebx), %eax
	movl	8(%ebp), %esi
	incl	%edx
	movw	%di, (%esi,%eax,2)
	cmpl	28(%ebp), %edx
	jle	L116
L135:
	incl	%ecx
	addl	12(%ebp), %ebx
	cmpl	32(%ebp), %ecx
	jle	L117
	jmp	L94
L139:
	movl	%esi, %ecx
	cmpl	32(%ebp), %esi
	jg	L94
	movl	12(%ebp), %eax
	imull	%esi, %eax
	movl	%eax, -20(%ebp)
L105:
	movl	20(%ebp), %edx
	cmpl	28(%ebp), %edx
	jg	L132
L104:
	movl	-20(%ebp), %ebx
	movl	8(%ebp), %esi
	addl	%edx, %ebx
	movl	%edi, %eax
	incl	%edx
	movb	%al, (%ebx,%esi)
	cmpl	28(%ebp), %edx
	jle	L104
L132:
	movl	12(%ebp), %eax
	incl	%ecx
	addl	%eax, -20(%ebp)
	cmpl	32(%ebp), %ecx
	jle	L105
	jmp	L94
	.balign 2
.globl _init_screen
	.def	_init_screen;	.scl	2;	.type	32;	.endef
_init_screen:
	pushl	%ebp
	movl	%esp, %ebp
	movl	12(%ebp), %eax
	movl	16(%ebp), %edx
	decl	%edx
	pushl	%edx
	leal	-1(%eax), %edx
	pushl	%edx
	pushl	$0
	pushl	$0
	pushl	$3829413
	pushl	%eax
	pushl	8(%ebp)
	call	_boxfill
	leave
	ret
	.balign 2
.globl _putfont
	.def	_putfont;	.scl	2;	.type	32;	.endef
_putfont:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	28(%ebp), %edi
	call	_get_bpp
	pushl	24(%ebp)
	pushl	%eax
	movl	%eax, %ebx
	call	_get_color
	cmpl	$8, %ebx
	movl	%eax, %esi
	popl	%eax
	popl	%edx
	je	L191
	cmpl	$16, %ebx
	je	L192
	cmpl	$24, %ebx
	je	L193
L143:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L193:
	xorl	%ebx, %ebx
L187:
	movl	20(%ebp), %eax
	movl	8(%ebp), %edx
	addl	%ebx, %eax
	imull	12(%ebp), %eax
	addl	16(%ebp), %eax
	leal	(%edx,%eax,4), %ecx
	movb	(%ebx,%edi), %dl
	testb	%dl, %dl
	jns	L179
	movl	%esi, (%ecx)
L179:
	movb	%dl, %al
	andl	$64, %eax
	testb	%al, %al
	je	L180
	movl	%esi, 4(%ecx)
L180:
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L181
	movl	%esi, 8(%ecx)
L181:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L182
	movl	%esi, 12(%ecx)
L182:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L183
	movl	%esi, 16(%ecx)
L183:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L184
	movl	%esi, 20(%ecx)
L184:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L185
	movl	%esi, 24(%ecx)
L185:
	andl	$1, %edx
	testb	%dl, %dl
	je	L177
	movl	%esi, 28(%ecx)
L177:
	incl	%ebx
	cmpl	$15, %ebx
	jle	L187
	jmp	L143
L192:
	xorl	%ebx, %ebx
L172:
	movl	20(%ebp), %eax
	movl	8(%ebp), %edx
	addl	%ebx, %eax
	imull	12(%ebp), %eax
	addl	16(%ebp), %eax
	leal	(%edx,%eax,2), %ecx
	movb	(%ebx,%edi), %dl
	testb	%dl, %dl
	jns	L164
	movw	%si, (%ecx)
L164:
	movb	%dl, %al
	andl	$64, %eax
	testb	%al, %al
	je	L165
	movw	%si, 2(%ecx)
L165:
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L166
	movw	%si, 4(%ecx)
L166:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L167
	movw	%si, 6(%ecx)
L167:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L168
	movw	%si, 8(%ecx)
L168:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L169
	movw	%si, 10(%ecx)
L169:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L170
	movw	%si, 12(%ecx)
L170:
	andl	$1, %edx
	testb	%dl, %dl
	je	L162
	movw	%si, 14(%ecx)
L162:
	incl	%ebx
	cmpl	$15, %ebx
	jle	L172
	jmp	L143
L191:
	xorl	%ebx, %ebx
L157:
	movl	20(%ebp), %eax
	movl	16(%ebp), %edx
	addl	%ebx, %eax
	imull	12(%ebp), %eax
	addl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movb	(%ebx,%edi), %dl
	testb	%dl, %dl
	jns	L149
	movl	%esi, %eax
	movb	%al, (%ecx)
L149:
	movb	%dl, %al
	andl	$64, %eax
	testb	%al, %al
	je	L150
	movl	%esi, %eax
	movb	%al, 1(%ecx)
L150:
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L151
	movl	%esi, %eax
	movb	%al, 2(%ecx)
L151:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L152
	movl	%esi, %eax
	movb	%al, 3(%ecx)
L152:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L153
	movl	%esi, %eax
	movb	%al, 4(%ecx)
L153:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L154
	movl	%esi, %eax
	movb	%al, 5(%ecx)
L154:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L155
	movl	%esi, %eax
	movb	%al, 6(%ecx)
L155:
	andl	$1, %edx
	testb	%dl, %dl
	je	L147
	movl	%esi, %edx
	movb	%dl, 7(%ecx)
L147:
	incl	%ebx
	cmpl	$15, %ebx
	jle	L157
	jmp	L143
	.balign 2
.globl _putfonts
	.def	_putfonts;	.scl	2;	.type	32;	.endef
_putfonts:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	%ecx
	movl	16(%ebp), %edi
	movl	28(%ebp), %esi
	call	_task_now
	movl	%eax, -16(%ebp)
	movl	4072, %eax
	movl	-16(%ebp), %edx
	movl	%eax, -20(%ebp)
	cmpb	$0, 189(%edx)
	jne	L195
	cmpb	$0, (%esi)
	jne	L200
L195:
	movl	-16(%ebp), %eax
	cmpb	$1, 189(%eax)
	je	L231
L201:
	movl	-16(%ebp), %eax
	cmpb	$2, 189(%eax)
	je	L232
L194:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L232:
	cmpb	$0, (%esi)
	je	L194
L227:
	movl	-16(%ebp), %edx
	movb	190(%edx), %al
	testb	%al, %al
	jne	L223
	movb	(%esi), %dl
	leal	127(%edx), %eax
	cmpb	$125, %al
	ja	L224
	movl	-16(%ebp), %eax
	movb	%dl, 190(%eax)
L226:
	incl	%esi
	addl	$8, %edi
	cmpb	$0, (%esi)
	jne	L227
	jmp	L194
L224:
	movzbl	%dl, %eax
	sall	$4, %eax
	addl	-20(%ebp), %eax
	pushl	%eax
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	%edi
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont
	addl	$24, %esp
	jmp	L226
L223:
	movzbl	%al, %ebx
	imull	$94, %ebx, %ebx
	movzbl	(%esi), %eax
	movl	-16(%ebp), %edx
	leal	-15295(%eax,%ebx), %ebx
	movb	$0, 190(%edx)
	sall	$5, %ebx
	addl	-20(%ebp), %ebx
	leal	4096(%ebx), %eax
	addl	$4112, %ebx
	pushl	%eax
	leal	-8(%edi), %eax
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	%eax
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont
	pushl	%ebx
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	%edi
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont
	addl	$48, %esp
	jmp	L226
L231:
	cmpb	$0, (%esi)
	je	L201
L217:
	movl	-16(%ebp), %eax
	movb	190(%eax), %dl
	testb	%dl, %dl
	jne	L206
	movb	(%esi), %dl
	leal	127(%edx), %eax
	cmpb	$30, %al
	jbe	L208
	leal	32(%edx), %eax
	cmpb	$28, %al
	ja	L207
L208:
	movl	-16(%ebp), %eax
	movb	%dl, 190(%eax)
L210:
	incl	%esi
	addl	$8, %edi
	cmpb	$0, (%esi)
	jne	L217
	jmp	L201
L207:
	movzbl	%dl, %eax
	sall	$4, %eax
	addl	-20(%ebp), %eax
	pushl	%eax
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	%edi
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont
	addl	$24, %esp
	jmp	L210
L206:
	leal	127(%edx), %eax
	cmpb	$30, %al
	ja	L211
	movzbl	%dl, %eax
	leal	-258(%eax,%eax), %ecx
L212:
	movb	(%esi), %dl
	leal	-64(%edx), %eax
	cmpb	$62, %al
	ja	L213
	movzbl	%dl, %eax
	subl	$64, %eax
L214:
	imull	$94, %ecx, %ebx
	movl	-16(%ebp), %edx
	addl	%eax, %ebx
	sall	$5, %ebx
	movb	$0, 190(%edx)
	addl	-20(%ebp), %ebx
	leal	4096(%ebx), %eax
	addl	$4112, %ebx
	pushl	%eax
	leal	-8(%edi), %eax
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	%eax
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont
	pushl	%ebx
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	%edi
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont
	addl	$48, %esp
	jmp	L210
L213:
	leal	-128(%edx), %eax
	cmpb	$30, %al
	ja	L215
	movzbl	%dl, %eax
	subl	$65, %eax
	jmp	L214
L215:
	movzbl	%dl, %eax
	subl	$159, %eax
	incl	%ecx
	jmp	L214
L211:
	movzbl	%dl, %eax
	leal	-386(%eax,%eax), %ecx
	jmp	L212
L200:
	movzbl	(%esi), %eax
	sall	$4, %eax
	incl	%esi
	addl	$_hankaku, %eax
	pushl	%eax
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	%edi
	addl	$8, %edi
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont
	addl	$24, %esp
	cmpb	$0, (%esi)
	jne	L200
	jmp	L195
	.data
_data.1:
	.ascii "ah.....hahahah.."
	.ascii "hah....haaaaah.."
	.ascii ".hah..hahhhhhah."
	.ascii "..hahhahaahaahah"
	.ascii "...haaahahhahhah"
	.ascii "....hhaaahahhhah"
	.ascii "......hahaaahah."
	.ascii "......hhahahah.."
	.ascii ".....hahahhhahah"
	.ascii "....hahaahhhaaha"
	.ascii ".....hahahhhahah"
	.ascii "......haahhhaah."
	.ascii ".....haaaaaaaaah"
	.ascii ".....hahahahahah"
	.ascii "......hahahahah."
	.ascii ".......haaaaah.."
	.text
	.balign 2
.globl _init_mouse_cursor
	.def	_init_mouse_cursor;	.scl	2;	.type	32;	.endef
_init_mouse_cursor:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	12(%ebp)
	pushl	$16
	pushl	$16
	pushl	$_data.1
	pushl	$0
	pushl	$0
	pushl	$16
	pushl	8(%ebp)
	call	_picdata
	leave
	ret
	.balign 2
.globl _putminifont
	.def	_putminifont;	.scl	2;	.type	32;	.endef
_putminifont:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	28(%ebp), %edi
	call	_get_bpp
	pushl	24(%ebp)
	pushl	%eax
	movl	%eax, %ebx
	call	_get_color
	cmpl	$8, %ebx
	popl	%esi
	movl	%eax, %ecx
	popl	%eax
	je	L277
	cmpl	$16, %ebx
	je	L278
	cmpl	$24, %ebx
	je	L279
L234:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L279:
	xorl	%esi, %esi
L272:
	movl	20(%ebp), %eax
	movl	8(%ebp), %edx
	addl	%esi, %eax
	imull	12(%ebp), %eax
	addl	16(%ebp), %eax
	leal	(%edx,%eax,4), %ebx
	movb	(%esi,%edi), %dl
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L266
	movl	%ecx, (%ebx)
L266:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L267
	movl	%ecx, 4(%ebx)
L267:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L268
	movl	%ecx, 8(%ebx)
L268:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L269
	movl	%ecx, 12(%ebx)
L269:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L270
	movl	%ecx, 16(%ebx)
L270:
	andl	$1, %edx
	testb	%dl, %dl
	je	L264
	movl	%ecx, 20(%ebx)
L264:
	incl	%esi
	cmpl	$11, %esi
	jle	L272
	jmp	L234
L278:
	xorl	%esi, %esi
L259:
	movl	20(%ebp), %eax
	movl	8(%ebp), %edx
	addl	%esi, %eax
	imull	12(%ebp), %eax
	addl	16(%ebp), %eax
	leal	(%edx,%eax,2), %ebx
	movb	(%esi,%edi), %dl
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L253
	movw	%cx, (%ebx)
L253:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L254
	movw	%cx, 2(%ebx)
L254:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L255
	movw	%cx, 4(%ebx)
L255:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L256
	movw	%cx, 6(%ebx)
L256:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L257
	movw	%cx, 8(%ebx)
L257:
	andl	$1, %edx
	testb	%dl, %dl
	je	L251
	movw	%cx, 10(%ebx)
L251:
	incl	%esi
	cmpl	$11, %esi
	jle	L259
	jmp	L234
L277:
	xorl	%esi, %esi
L246:
	movl	20(%ebp), %eax
	movl	16(%ebp), %edx
	addl	%esi, %eax
	imull	12(%ebp), %eax
	addl	8(%ebp), %eax
	leal	(%edx,%eax), %ebx
	movb	(%esi,%edi), %dl
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L240
	movb	%cl, (%ebx)
L240:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L241
	movb	%cl, 1(%ebx)
L241:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L242
	movb	%cl, 2(%ebx)
L242:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L243
	movb	%cl, 3(%ebx)
L243:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L244
	movb	%cl, 4(%ebx)
L244:
	andl	$1, %edx
	testb	%dl, %dl
	je	L238
	movb	%cl, 5(%ebx)
L238:
	incl	%esi
	cmpl	$11, %esi
	jle	L246
	jmp	L234
	.balign 2
.globl _putminifonts
	.def	_putminifonts;	.scl	2;	.type	32;	.endef
_putminifonts:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	24(%ebp), %edi
	movl	28(%ebp), %ebx
	movl	16(%ebp), %esi
	cmpb	$0, (%ebx)
	jne	L285
L287:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L285:
	movzbl	(%ebx), %eax
	imull	$12, %eax, %eax
	addl	$_minifnt, %eax
	incl	%ebx
	pushl	%eax
	pushl	%edi
	pushl	20(%ebp)
	pushl	%esi
	addl	$6, %esi
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putminifont
	addl	$24, %esp
	cmpb	$0, (%ebx)
	jne	L285
	jmp	L287
	.data
_naomi.2:
	.ascii "ooooooooooooaaaaoooooooooooo"
	.ascii "oooooooooaaaddddaaaooooooooo"
	.ascii "ooooooooaddddddddddaoooooooo"
	.ascii "oooooooaddddddddddddaooooooo"
	.ascii "ooooooaddddddddddddddaoooooo"
	.ascii "aooooadaaaaaaddaaaaaadaooooa"
	.ascii "aoooaddaddddaddaddddaddaoooa"
	.ascii "aoooaddaaaaaaddaaaaaaddaoooa"
	.ascii "oaooaddaddddaddaddddaddaoooa"
	.ascii "oaoadddaaaaaaddaaaaaadddaoao"
	.ascii "oaoaddddddddddddddddddddaoao"
	.ascii "ooaadddddaaddddddaadddddaaoo"
	.ascii "oooadddddaaddddddaadddddaooo"
	.ascii "oooadddddddddaadddddddddaooo"
	.ascii "ooooaddddddaabbaaddddddaoooo"
	.ascii "ooooaddddddabaabaddddddaoooo"
	.ascii "ooooadddddabahhabadddddaoooo"
	.ascii "oooooaddddabahhabaddddaooooo"
	.ascii "ooooooaddddabaabaddddaoooooo"
	.ascii "oooooooadddaabbaadddaooooooo"
	.ascii "ooooooooaddddaaddddaoooooooo"
	.ascii "oooooooooaaaddddaaaooooooooo"
	.ascii "ooooooooaaooaaaaooaaoooooooo"
	.ascii "oooooooaooooooooooooaooooooo"
	.ascii "ooooooaooooooooooooooaoooooo"
	.ascii "oooooaooooooooooooooooaooooo"
	.text
	.balign 2
.globl _put_naomi
	.def	_put_naomi;	.scl	2;	.type	32;	.endef
_put_naomi:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$-1
	pushl	$26
	pushl	$28
	pushl	$_naomi.2
	pushl	$0
	pushl	$0
	pushl	$28
	pushl	8(%ebp)
	call	_picdata
	leave
	ret
	.balign 2
.globl _picdata
	.def	_picdata;	.scl	2;	.type	32;	.endef
_picdata:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	call	_get_bpp
	movl	%eax, %edi
	cmpl	$8, %eax
	je	L352
	cmpl	$16, %eax
	je	L353
	cmpl	$24, %eax
	je	L354
L289:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L354:
	xorl	%esi, %esi
	cmpl	32(%ebp), %esi
	jge	L289
	movl	$0, -24(%ebp)
L339:
	movl	20(%ebp), %eax
	movl	8(%ebp), %edx
	addl	%esi, %eax
	xorl	%ebx, %ebx
	imull	12(%ebp), %eax
	addl	16(%ebp), %eax
	cmpl	28(%ebp), %ebx
	leal	(%edx,%eax,4), %eax
	movl	%eax, -20(%ebp)
	jge	L348
L338:
	movl	-24(%ebp), %eax
	movl	24(%ebp), %ecx
	addl	%ebx, %eax
	movb	(%eax,%ecx), %dl
	leal	-97(%edx), %eax
	cmpb	$15, %al
	jbe	L355
	leal	-114(%edx), %eax
	cmpb	$1, %al
	jbe	L356
	cmpb	$46, %dl
	je	L357
L331:
	incl	%ebx
	cmpl	28(%ebp), %ebx
	jl	L338
L348:
	movl	28(%ebp), %ecx
	incl	%esi
	addl	%ecx, -24(%ebp)
	cmpl	32(%ebp), %esi
	jl	L339
	jmp	L289
L357:
	movl	-20(%ebp), %edx
	movl	36(%ebp), %eax
	movl	%eax, (%edx,%ebx,4)
	jmp	L331
L356:
	movzbl	%dl, %eax
	addl	$113, %eax
	pushl	%eax
	pushl	$1
	call	_get_color
	pushl	%eax
	pushl	%edi
	call	_get_color
	movl	-20(%ebp), %ecx
	movl	%eax, (%ecx,%ebx,4)
L351:
	addl	$16, %esp
	jmp	L331
L355:
	movzbl	%dl, %eax
	subl	$97, %eax
	pushl	%eax
	pushl	$1
	call	_get_color
	pushl	%eax
	pushl	%edi
	call	_get_color
	movl	-20(%ebp), %edx
	movl	%eax, (%edx,%ebx,4)
	jmp	L351
L353:
	xorl	%esi, %esi
	cmpl	32(%ebp), %esi
	jge	L289
	movl	$0, -28(%ebp)
L322:
	movl	20(%ebp), %eax
	movl	8(%ebp), %ecx
	addl	%esi, %eax
	xorl	%ebx, %ebx
	imull	12(%ebp), %eax
	addl	16(%ebp), %eax
	cmpl	28(%ebp), %ebx
	leal	(%ecx,%eax,2), %eax
	movl	%eax, -16(%ebp)
	jge	L345
L321:
	movl	-28(%ebp), %eax
	movl	24(%ebp), %ecx
	addl	%ebx, %eax
	movb	(%eax,%ecx), %dl
	leal	-97(%edx), %eax
	cmpb	$15, %al
	jbe	L358
	leal	-114(%edx), %eax
	cmpb	$1, %al
	jbe	L359
	cmpb	$46, %dl
	je	L360
L314:
	incl	%ebx
	cmpl	28(%ebp), %ebx
	jl	L321
L345:
	movl	28(%ebp), %ecx
	incl	%esi
	addl	%ecx, -28(%ebp)
	cmpl	32(%ebp), %esi
	jl	L322
	jmp	L289
L360:
	movl	-16(%ebp), %eax
	movl	36(%ebp), %edx
	movw	%dx, (%eax,%ebx,2)
	jmp	L314
L359:
	movzbl	%dl, %eax
	addl	$113, %eax
	pushl	%eax
	pushl	$1
	call	_get_color
	pushl	%eax
	pushl	%edi
	call	_get_color
	movl	-16(%ebp), %ecx
	movw	%ax, (%ecx,%ebx,2)
L350:
	addl	$16, %esp
	jmp	L314
L358:
	movzbl	%dl, %eax
	subl	$97, %eax
	pushl	%eax
	pushl	$1
	call	_get_color
	pushl	%eax
	pushl	%edi
	call	_get_color
	movl	-16(%ebp), %edx
	movw	%ax, (%edx,%ebx,2)
	jmp	L350
L352:
	xorl	%esi, %esi
	cmpl	32(%ebp), %esi
	jge	L289
	xorl	%edi, %edi
L305:
	movl	20(%ebp), %eax
	movl	16(%ebp), %edx
	addl	%esi, %eax
	xorl	%ebx, %ebx
	imull	12(%ebp), %eax
	addl	8(%ebp), %eax
	cmpl	28(%ebp), %ebx
	leal	(%edx,%eax), %ecx
	jge	L342
L304:
	movl	24(%ebp), %eax
	leal	(%ebx,%edi), %edx
	movb	(%edx,%eax), %dl
	leal	-97(%edx), %eax
	cmpb	$15, %al
	jbe	L349
	leal	-113(%edx), %eax
	cmpb	$1, %al
	ja	L301
	leal	127(%edx), %eax
L349:
	movb	%al, (%ebx,%ecx)
L297:
	incl	%ebx
	cmpl	28(%ebp), %ebx
	jl	L304
L342:
	incl	%esi
	addl	28(%ebp), %edi
	cmpl	32(%ebp), %esi
	jl	L305
	jmp	L289
L301:
	cmpb	$46, %dl
	jne	L297
	movb	36(%ebp), %dl
	movb	%dl, (%ebx,%ecx)
	jmp	L297
	.def	_picdata;	.scl	2;	.type	32;	.endef
	.def	_task_now;	.scl	2;	.type	32;	.endef
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
	.def	_set_palette;	.scl	2;	.type	32;	.endef
	.def	_get_bpp;	.scl	2;	.type	32;	.endef
