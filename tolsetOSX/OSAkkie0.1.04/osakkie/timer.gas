	.file	"timer.c"
	.text
	.balign 2
.globl _init_pit
	.def	_init_pit;	.scl	2;	.type	32;	.endef
_init_pit:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$52
	pushl	$67
	call	_io_out8
	pushl	$156
	pushl	$64
	call	_io_out8
	pushl	$46
	pushl	$64
	call	_io_out8
	movl	$0, _timerctl
	movl	$-1, _timerctl+4
	leave
	ret
	.balign 2
.globl _init_timerctl
	.def	_init_timerctl;	.scl	2;	.type	32;	.endef
_init_timerctl:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$10000
	pushl	$3932160
	call	_memman_alloc_4k
	xorl	%ecx, %ecx
	movl	%eax, _timerctl+12
	popl	%eax
	popl	%edx
	movl	$499, %edx
L7:
	movl	_timerctl+12, %eax
	movb	$0, 8(%eax,%ecx)
	addl	$20, %ecx
	decl	%edx
	jns	L7
	call	_timer_alloc
	movb	$2, 8(%eax)
	movl	$0, (%eax)
	movl	%eax, _timerctl+8
	movl	$-1, 4(%eax)
	leave
	ret
	.balign 2
.globl _timer_alloc
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
_timer_alloc:
	pushl	%ebp
	xorl	%ecx, %ecx
	movl	%esp, %ebp
	xorl	%edx, %edx
L16:
	movl	_timerctl+12, %eax
	cmpb	$0, 8(%eax,%edx)
	je	L19
	incl	%ecx
	addl	$20, %edx
	cmpl	$499, %ecx
	jle	L16
	xorl	%eax, %eax
L10:
	popl	%ebp
	ret
L19:
	movb	$1, 8(%eax,%edx)
	movl	_timerctl+12, %eax
	movb	$0, 9(%eax,%edx)
	movl	_timerctl+12, %eax
	addl	%edx, %eax
	jmp	L10
	.balign 2
.globl _timer_free
	.def	_timer_free;	.scl	2;	.type	32;	.endef
_timer_free:
	pushl	%ebp
	movl	%esp, %ebp
	movl	8(%ebp), %eax
	movb	$0, 8(%eax)
	popl	%ebp
	ret
	.balign 2
.globl _timer_init
	.def	_timer_init;	.scl	2;	.type	32;	.endef
_timer_init:
	pushl	%ebp
	movl	%esp, %ebp
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 12(%eax)
	movl	16(%ebp), %edx
	movl	%edx, 16(%eax)
	popl	%ebp
	ret
	.balign 2
.globl _timer_settime
	.def	_timer_settime;	.scl	2;	.type	32;	.endef
_timer_settime:
	pushl	%ebp
	movl	_timerctl, %eax
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	8(%ebp), %ebx
	addl	12(%ebp), %eax
	movb	$2, 8(%ebx)
	movl	%eax, 4(%ebx)
	call	_io_load_eflags
	movl	%eax, %esi
	call	_io_cli
	movl	_timerctl+8, %eax
	movl	4(%ebx), %edx
	cmpl	4(%eax), %edx
	ja	L25
	movl	%ebx, _timerctl+8
	movl	%edx, _timerctl+4
	movl	%eax, (%ebx)
L24:
	movl	%esi, 8(%ebp)
	popl	%ebx
	popl	%esi
	popl	%ebp
	jmp	_io_store_eflags
L25:
	movl	%eax, %ecx
	movl	(%eax), %eax
	cmpl	4(%eax), %edx
	ja	L25
	movl	%ebx, (%ecx)
	movl	%eax, (%ebx)
	jmp	L24
	.balign 2
.globl _timer_cancel
	.def	_timer_cancel;	.scl	2;	.type	32;	.endef
_timer_cancel:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	8(%ebp), %ebx
	call	_io_load_eflags
	movl	%eax, %esi
	call	_io_cli
	cmpb	$2, 8(%ebx)
	je	L37
	pushl	%esi
	call	_io_store_eflags
	xorl	%eax, %eax
L29:
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
L37:
	movl	_timerctl+8, %eax
	cmpl	%eax, %ebx
	je	L38
L31:
	movl	%eax, %edx
	movl	(%eax), %eax
	cmpl	%ebx, %eax
	jne	L31
	movl	(%ebx), %eax
	movl	%eax, (%edx)
L32:
	movb	$1, 8(%ebx)
	pushl	%esi
	call	_io_store_eflags
	movl	$1, %eax
	jmp	L29
L38:
	movl	(%ebx), %edx
	movl	%edx, _timerctl+8
	movl	4(%edx), %eax
	movl	%eax, _timerctl+4
	jmp	L32
	.balign 2
.globl _timer_cancelall
	.def	_timer_cancelall;	.scl	2;	.type	32;	.endef
_timer_cancelall:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	pushl	%esi
	pushl	%esi
	movl	$499, %esi
	movl	8(%ebp), %eax
	movl	%eax, -16(%ebp)
	call	_io_load_eflags
	movl	%eax, -20(%ebp)
	call	_io_cli
L45:
	movl	_timerctl+12, %ebx
	addl	%edi, %ebx
	cmpb	$0, 8(%ebx)
	je	L42
	cmpb	$0, 9(%ebx)
	je	L42
	movl	-16(%ebp), %eax
	cmpl	%eax, 12(%ebx)
	je	L48
L42:
	addl	$20, %edi
	decl	%esi
	jns	L45
	movl	-20(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_io_store_eflags
L48:
	pushl	%ebx
	call	_timer_cancel
	pushl	%ebx
	call	_timer_free
	popl	%ecx
	popl	%ebx
	jmp	L42
	.balign 2
.globl _inthandler20
	.def	_inthandler20;	.scl	2;	.type	32;	.endef
_inthandler20:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	xorl	%esi, %esi
	pushl	$96
	pushl	$32
	call	_io_out8
	movl	_timerctl, %eax
	incl	%eax
	movl	%eax, _timerctl
	cmpl	%eax, _timerctl+4
	popl	%ecx
	popl	%ebx
	ja	L49
	movl	_timerctl+8, %ebx
L51:
	movl	4(%ebx), %eax
	cmpl	_timerctl, %eax
	ja	L52
	movb	$1, 8(%ebx)
	cmpl	_task_timer, %ebx
	je	L55
	pushl	16(%ebx)
	pushl	12(%ebx)
	call	_fifo32_put
	popl	%eax
	popl	%edx
L56:
	movl	(%ebx), %ebx
	jmp	L51
L55:
	movl	$1, %esi
	jmp	L56
L52:
	movl	%eax, _timerctl+4
	movl	%ebx, _timerctl+8
	movl	%esi, %eax
	testb	%al, %al
	jne	L58
L49:
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
L58:
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	jmp	_task_switch
.globl _timerctl
	.data
	.balign 16
_timerctl:
	.space 16
	.def	_task_switch;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
