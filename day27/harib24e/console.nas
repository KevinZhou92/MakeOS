[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_task_now
	EXTERN	_memman_alloc_4k
	EXTERN	_timer_alloc
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_file_readfat
	EXTERN	_io_cli
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_io_sti
	EXTERN	_boxfill8
	EXTERN	_sheet_refresh
	EXTERN	_task_sleep
	EXTERN	_putfonts8_asc_sht
	EXTERN	_memman_total
	EXTERN	_sprintf
	EXTERN	_file_search
	EXTERN	_file_loadfile
	EXTERN	_memman_free_4k
	EXTERN	_timer_cancel
	EXTERN	_fifo32_put
	EXTERN	_taskctl
	EXTERN	_open_console
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
	EXTERN	_open_constask
	EXTERN	_set_segmdesc
	EXTERN	_start_app
	EXTERN	_timer_cancelall
	EXTERN	_sheet_free
	EXTERN	_io_in8
	EXTERN	_io_out8
	EXTERN	_timer_free
	EXTERN	_memman_free
	EXTERN	_memman_alloc
	EXTERN	_memman_init
	EXTERN	_putfonts8_asc
	EXTERN	_sheet_alloc
	EXTERN	_sheet_setbuf
	EXTERN	_make_window8
[FILE "console.c"]
[SECTION .text]
	GLOBAL	_console_task
_console_task:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	ESI,DWORD [-44+EBP]
	SUB	ESP,72
	MOV	EBX,DWORD [8+EBP]
	CALL	_task_now
	PUSH	11520
	PUSH	3932160
	MOV	DWORD [-80+EBP],EAX
	CALL	_memman_alloc_4k
	TEST	EBX,EBX
	MOV	EDI,EAX
	MOV	DWORD [-44+EBP],EBX
	MOV	EAX,DWORD [-80+EBP]
	MOV	DWORD [-40+EBP],8
	MOV	DWORD [164+EAX],ESI
	POP	EAX
	MOV	DWORD [-36+EBP],28
	MOV	DWORD [-32+EBP],-1
	POP	EDX
	JE	L2
	CALL	_timer_alloc
	MOV	EDX,DWORD [-80+EBP]
	PUSH	1
	ADD	EDX,16
	PUSH	EDX
	MOV	DWORD [-28+EBP],EAX
	PUSH	EAX
	CALL	_timer_init
	PUSH	50
	PUSH	DWORD [-28+EBP]
	CALL	_timer_settime
	ADD	ESP,20
L2:
	PUSH	1049088
	PUSH	EDI
	CALL	_file_readfat
	PUSH	1
	PUSH	62
	PUSH	ESI
	CALL	_cons_putchar
L27:
	ADD	ESP,20
L3:
	CALL	_io_cli
	MOV	EBX,DWORD [-80+EBP]
	ADD	EBX,16
	PUSH	EBX
	CALL	_fifo32_status
	POP	ESI
	TEST	EAX,EAX
	JE	L30
	PUSH	EBX
	CALL	_fifo32_get
	MOV	ESI,EAX
	CALL	_io_sti
	POP	ECX
	CMP	ESI,1
	JLE	L31
L8:
	CMP	ESI,2
	JE	L32
L13:
	CMP	ESI,3
	JE	L33
L14:
	CMP	ESI,4
	JE	L34
L16:
	LEA	ECX,DWORD [-256+ESI]
	MOV	DWORD [-84+EBP],ECX
	CMP	ECX,255
	JA	L17
	CMP	ESI,264
	JE	L35
	CMP	ESI,266
	JE	L36
	MOV	ECX,DWORD [-40+EBP]
	CMP	ECX,239
	JG	L17
	MOV	EAX,ECX
	MOV	EDX,8
	MOV	EBX,EDX
	PUSH	1
	CDQ
	IDIV	EBX
	MOV	ECX,EAX
	MOV	EAX,ESI
	MOV	BYTE [-78+EBP+ECX*1],AL
	LEA	EAX,DWORD [-44+EBP]
	PUSH	DWORD [-84+EBP]
	PUSH	EAX
L28:
	CALL	_cons_putchar
L29:
	ADD	ESP,12
L17:
	MOV	EBX,DWORD [-44+EBP]
	TEST	EBX,EBX
	JE	L3
	CMP	DWORD [-32+EBP],0
	JS	L26
	MOV	ECX,DWORD [-36+EBP]
	MOV	EDX,DWORD [-40+EBP]
	LEA	EAX,DWORD [15+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [7+EDX]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	MOVZX	EAX,BYTE [-32+EBP]
	PUSH	EAX
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	CALL	_boxfill8
	ADD	ESP,28
L26:
	MOV	ECX,DWORD [-36+EBP]
	MOV	EDX,DWORD [-40+EBP]
	LEA	EAX,DWORD [16+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [8+EDX]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [-44+EBP]
	CALL	_sheet_refresh
	JMP	L27
L36:
	PUSH	0
	LEA	EBX,DWORD [-44+EBP]
	PUSH	32
	PUSH	EBX
	CALL	_cons_putchar
	PUSH	EBX
	MOV	EAX,DWORD [-40+EBP]
	MOV	EDX,8
	MOV	ECX,EDX
	CDQ
	IDIV	ECX
	MOV	BYTE [-78+EBP+EAX*1],0
	CALL	_cons_newline
	LEA	EAX,DWORD [-76+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	EDI
	PUSH	EBX
	PUSH	EAX
	CALL	_cons_runcmd
	ADD	ESP,32
	CMP	DWORD [-44+EBP],0
	JNE	L22
	PUSH	EDI
	PUSH	EBX
	CALL	_cmd_exit
	POP	EAX
	POP	EDX
L22:
	PUSH	1
	PUSH	62
	PUSH	EBX
	JMP	L28
L35:
	CMP	DWORD [-40+EBP],16
	JLE	L17
	PUSH	0
	LEA	EAX,DWORD [-44+EBP]
	PUSH	32
	PUSH	EAX
	CALL	_cons_putchar
	SUB	DWORD [-40+EBP],8
	JMP	L29
L34:
	PUSH	EDI
	LEA	EAX,DWORD [-44+EBP]
	PUSH	EAX
	CALL	_cmd_exit
	POP	ECX
	POP	EBX
	JMP	L16
L33:
	MOV	EBX,DWORD [-44+EBP]
	TEST	EBX,EBX
	JE	L15
	MOV	ECX,DWORD [-36+EBP]
	MOV	EDX,DWORD [-40+EBP]
	LEA	EAX,DWORD [15+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [7+EDX]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	0
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	CALL	_boxfill8
	ADD	ESP,28
L15:
	MOV	DWORD [-32+EBP],-1
	JMP	L14
L32:
	MOV	DWORD [-32+EBP],7
	JMP	L13
L31:
	CMP	DWORD [-44+EBP],0
	JE	L8
	TEST	ESI,ESI
	JE	L9
	PUSH	0
	PUSH	EBX
	PUSH	DWORD [-28+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-32+EBP],0
	JS	L11
	MOV	DWORD [-32+EBP],7
L11:
	PUSH	50
	PUSH	DWORD [-28+EBP]
	CALL	_timer_settime
	POP	EAX
	POP	EDX
	JMP	L8
L9:
	PUSH	1
	PUSH	EBX
	PUSH	DWORD [-28+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-32+EBP],0
	JS	L11
	MOV	DWORD [-32+EBP],0
	JMP	L11
L30:
	PUSH	DWORD [-80+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	POP	EBX
	JMP	L3
[SECTION .data]
LC0:
	DB	" ",0x00
[SECTION .text]
	GLOBAL	_cons_putchar
_cons_putchar:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	MOV	DL,BYTE [16+EBP]
	MOV	EBX,DWORD [8+EBP]
	MOV	BYTE [-7+EBP],DL
	MOV	BYTE [-6+EBP],AL
	CMP	AL,9
	MOV	BYTE [-5+EBP],0
	JE	L39
	CMP	AL,10
	JE	L53
	CMP	AL,13
	JE	L37
	MOV	EDX,DWORD [EBX]
	TEST	EDX,EDX
	JNE	L54
L50:
	CMP	BYTE [-7+EBP],0
	JE	L37
	MOV	EAX,DWORD [4+EBX]
	ADD	EAX,8
	MOV	DWORD [4+EBX],EAX
	CMP	EAX,248
	JE	L53
L37:
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
L53:
	PUSH	EBX
	CALL	_cons_newline
	POP	ECX
	JMP	L37
L54:
	PUSH	1
	LEA	EAX,DWORD [-6+EBP]
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [8+EBX]
	PUSH	DWORD [4+EBX]
	PUSH	EDX
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	JMP	L50
L39:
	MOV	EAX,DWORD [EBX]
	TEST	EAX,EAX
	JNE	L55
L42:
	MOV	EAX,DWORD [4+EBX]
	ADD	EAX,8
	MOV	DWORD [4+EBX],EAX
	CMP	EAX,248
	JE	L56
L43:
	MOV	EAX,DWORD [4+EBX]
	SUB	EAX,8
	AND	EAX,31
	JNE	L39
	JMP	L37
L56:
	PUSH	EBX
	CALL	_cons_newline
	POP	EAX
	JMP	L43
L55:
	PUSH	1
	PUSH	LC0
	PUSH	0
	PUSH	7
	PUSH	DWORD [8+EBX]
	PUSH	DWORD [4+EBX]
	PUSH	EAX
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	JMP	L42
	GLOBAL	_cons_newline
_cons_newline:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [EAX]
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [8+EDX]
	CMP	EAX,139
	JG	L58
	ADD	EAX,16
	MOV	DWORD [8+EDX],EAX
L59:
	MOV	EAX,DWORD [8+EBP]
	MOV	DWORD [4+EAX],8
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L58:
	CMP	DWORD [-16+EBP],0
	JE	L59
	MOV	EDI,28
L70:
	MOV	ESI,8
L69:
	MOV	EAX,DWORD [-16+EBP]
	MOV	EDX,EDI
	MOV	ECX,DWORD [4+EAX]
	MOV	EBX,DWORD [EAX]
	LEA	EAX,DWORD [16+EDI]
	IMUL	EAX,ECX
	IMUL	EDX,ECX
	LEA	EAX,DWORD [EAX+ESI*1]
	LEA	EDX,DWORD [EDX+ESI*1]
	INC	ESI
	MOV	AL,BYTE [EAX+EBX*1]
	CMP	ESI,247
	MOV	BYTE [EDX+EBX*1],AL
	JLE	L69
	INC	EDI
	CMP	EDI,139
	JLE	L70
	MOV	EDI,140
L80:
	MOV	ESI,8
L79:
	MOV	EDX,DWORD [-16+EBP]
	MOV	EAX,EDI
	MOV	ECX,EDX
	IMUL	EAX,DWORD [4+EDX]
	MOV	EDX,DWORD [EDX]
	LEA	EAX,DWORD [EAX+ESI*1]
	INC	ESI
	CMP	ESI,247
	MOV	BYTE [EAX+EDX*1],0
	JLE	L79
	INC	EDI
	CMP	EDI,155
	JLE	L80
	PUSH	156
	PUSH	248
	PUSH	28
	PUSH	8
	PUSH	ECX
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L59
	GLOBAL	_cons_putstr0
_cons_putstr0:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	MOV	ESI,DWORD [8+EBP]
	CMP	BYTE [EBX],0
	JNE	L94
L96:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L94:
	PUSH	1
	MOVSX	EAX,BYTE [EBX]
	PUSH	EAX
	INC	EBX
	PUSH	ESI
	CALL	_cons_putchar
	ADD	ESP,12
	CMP	BYTE [EBX],0
	JNE	L94
	JMP	L96
	GLOBAL	_cons_putstr1
_cons_putstr1:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [16+EBP]
	XOR	EBX,EBX
	MOV	EDI,DWORD [12+EBP]
	CMP	EBX,ESI
	JL	L102
L104:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L102:
	PUSH	1
	MOVSX	EAX,BYTE [EBX+EDI*1]
	PUSH	EAX
	INC	EBX
	PUSH	DWORD [8+EBP]
	CALL	_cons_putchar
	ADD	ESP,12
	CMP	EBX,ESI
	JL	L102
	JMP	L104
[SECTION .data]
LC1:
	DB	"mem",0x00
LC2:
	DB	"cls",0x00
LC3:
	DB	"dir",0x00
LC4:
	DB	"type ",0x00
LC5:
	DB	"exit",0x00
LC6:
	DB	"start ",0x00
LC7:
	DB	"ncst ",0x00
LC8:
	DB	"Bad command.",0x0A,0x0A,0x00
[SECTION .text]
	GLOBAL	_cons_runcmd
_cons_runcmd:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,LC1
	PUSH	EBX
	SUB	ESP,12
	MOV	EAX,DWORD [8+EBP]
	MOV	ECX,DWORD [16+EBP]
	MOV	DWORD [-24+EBP],EAX
	MOV	DWORD [-16+EBP],ECX
	MOV	EAX,DWORD [20+EBP]
	MOV	ESI,DWORD [-24+EBP]
	MOV	DWORD [-20+EBP],EAX
	MOV	EBX,DWORD [12+EBP]
	MOV	EAX,4
	CLD
	MOV	ECX,EAX
	REPE
	CMPSB
	JNE	L106
	CMP	DWORD [EBX],0
	JNE	L122
L106:
	MOV	EAX,4
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC2
	MOV	ECX,EAX
	REPE
	CMPSB
	JNE	L108
	CMP	DWORD [EBX],0
	JNE	L123
L108:
	MOV	EAX,4
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC3
	MOV	ECX,EAX
	REPE
	CMPSB
	JNE	L110
	CMP	DWORD [EBX],0
	JNE	L124
L110:
	MOV	EAX,5
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC4
	MOV	ECX,EAX
	REPE
	CMPSB
	JNE	L112
	CMP	DWORD [EBX],0
	JNE	L125
L112:
	MOV	EAX,5
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC5
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L126
	MOV	EAX,6
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC6
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L127
	MOV	EAX,5
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC7
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L128
	MOV	EAX,DWORD [-24+EBP]
	CMP	BYTE [EAX],0
	JNE	L129
L105:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L129:
	PUSH	EAX
	PUSH	DWORD [-16+EBP]
	PUSH	EBX
	CALL	_cmd_app
	ADD	ESP,12
	TEST	EAX,EAX
	JNE	L105
	MOV	DWORD [12+EBP],LC8
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_putstr0
L128:
	MOV	EAX,DWORD [-20+EBP]
	MOV	ECX,DWORD [-24+EBP]
	MOV	DWORD [16+EBP],EAX
	MOV	DWORD [12+EBP],ECX
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_ncst
L127:
	MOV	EAX,DWORD [-20+EBP]
	MOV	ECX,DWORD [-24+EBP]
	MOV	DWORD [16+EBP],EAX
	MOV	DWORD [12+EBP],ECX
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_start
L126:
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [8+EBP],EBX
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_exit
L125:
	MOV	EAX,DWORD [-24+EBP]
	MOV	ECX,DWORD [-16+EBP]
	MOV	DWORD [16+EBP],EAX
	MOV	DWORD [12+EBP],ECX
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_type
L124:
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_dir
L123:
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_cls
L122:
	MOV	EAX,DWORD [-20+EBP]
	MOV	DWORD [8+EBP],EBX
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_mem
[SECTION .data]
LC9:
	DB	"total   %dMB",0x0A,"free %dKB",0x0A,0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_mem
_cmd_mem:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	SUB	ESP,64
	PUSH	3932160
	CALL	_memman_total
	MOV	EDX,1048576
	SHR	EAX,10
	MOV	EBX,EDX
	MOV	DWORD [ESP],EAX
	MOV	EAX,DWORD [12+EBP]
	CDQ
	IDIV	EBX
	PUSH	EAX
	LEA	EBX,DWORD [-68+EBP]
	PUSH	LC9
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_cons_putstr0
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
	GLOBAL	_cmd_cls
_cmd_cls:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,28
	MOV	EDI,DWORD [8+EBP]
	PUSH	EBX
	MOV	EBX,DWORD [EDI]
L141:
	MOV	ECX,8
L140:
	MOV	EAX,ESI
	MOV	EDX,DWORD [EBX]
	IMUL	EAX,DWORD [4+EBX]
	LEA	EAX,DWORD [EAX+ECX*1]
	INC	ECX
	CMP	ECX,247
	MOV	BYTE [EAX+EDX*1],0
	JLE	L140
	INC	ESI
	CMP	ESI,155
	JLE	L141
	PUSH	156
	PUSH	248
	PUSH	28
	PUSH	8
	PUSH	EBX
	CALL	_sheet_refresh
	MOV	DWORD [8+EDI],28
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC10:
	DB	"filename.ext   %7d",0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_dir
_cmd_dir:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	SUB	ESP,32
	MOV	EDI,DWORD [8+EBP]
L159:
	MOV	AL,BYTE [1058304+EBX]
	TEST	AL,AL
	JE	L148
	CMP	AL,-27
	JE	L149
	TEST	BYTE [1058315+EBX],24
	JE	L163
L149:
	INC	ESI
	ADD	EBX,32
	CMP	ESI,223
	JLE	L159
L148:
	PUSH	EDI
	CALL	_cons_newline
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L163:
	PUSH	DWORD [1058332+EBX]
	PUSH	LC10
	LEA	EAX,DWORD [-44+EBP]
	PUSH	EAX
	CALL	_sprintf
	LEA	EDX,DWORD [1058304+EBX]
	XOR	ECX,ECX
	ADD	ESP,12
L158:
	MOV	AL,BYTE [EDX]
	INC	EDX
	MOV	BYTE [-44+EBP+ECX*1],AL
	INC	ECX
	CMP	ECX,7
	JLE	L158
	MOV	AL,BYTE [1058312+EBX]
	MOV	BYTE [-35+EBP],AL
	MOV	AL,BYTE [1058313+EBX]
	MOV	BYTE [-34+EBP],AL
	MOV	AL,BYTE [1058314+EBX]
	MOV	BYTE [-33+EBP],AL
	LEA	EAX,DWORD [-44+EBP]
	PUSH	EAX
	PUSH	EDI
	CALL	_cons_putstr0
	POP	EAX
	POP	EDX
	JMP	L149
[SECTION .data]
LC11:
	DB	"File not found.",0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_type
_cmd_type:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ESI
	MOV	EAX,DWORD [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	DWORD [-16+EBP],EAX
	PUSH	224
	PUSH	1058304
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,5
	PUSH	EAX
	CALL	_file_search
	ADD	ESP,12
	MOV	ESI,EAX
	TEST	EAX,EAX
	JE	L165
	PUSH	DWORD [28+EAX]
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	1064448
	PUSH	DWORD [-16+EBP]
	PUSH	EAX
	MOV	EBX,EAX
	PUSH	DWORD [28+ESI]
	MOVZX	EAX,WORD [26+ESI]
	PUSH	EAX
	CALL	_file_loadfile
	PUSH	DWORD [28+ESI]
	PUSH	EBX
	PUSH	EDI
	CALL	_cons_putstr1
	ADD	ESP,40
	PUSH	DWORD [28+ESI]
	PUSH	EBX
	PUSH	3932160
	CALL	_memman_free_4k
	ADD	ESP,12
L166:
	MOV	DWORD [8+EBP],EDI
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_newline
L165:
	PUSH	LC11
	PUSH	EDI
	CALL	_cons_putstr0
	POP	ECX
	POP	EBX
	JMP	L166
	GLOBAL	_cmd_exit
_cmd_exit:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EBX
	MOV	EBX,DWORD [8+EBP]
	CALL	_task_now
	MOV	ESI,DWORD [4068]
	MOV	EDI,DWORD [4076]
	MOV	DWORD [-16+EBP],EAX
	CMP	DWORD [EBX],0
	JE	L168
	PUSH	DWORD [16+EBX]
	CALL	_timer_cancel
	POP	ECX
L168:
	PUSH	11520
	PUSH	DWORD [12+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	CALL	_io_cli
	MOV	EAX,DWORD [EBX]
	ADD	ESP,12
	TEST	EAX,EAX
	JE	L169
	SUB	EAX,ESI
	SUB	EAX,1044
	SAR	EAX,3
	IMUL	EAX,EAX,-858993459
	ADD	EAX,768
L174:
	PUSH	EAX
	PUSH	EDI
	CALL	_fifo32_put
	POP	EAX
	POP	EDX
	CALL	_io_sti
L171:
	PUSH	DWORD [-16+EBP]
	CALL	_task_sleep
	POP	EDI
	JMP	L171
L169:
	MOV	EAX,DWORD [-16+EBP]
	SUB	EAX,DWORD [_taskctl]
	SUB	EAX,4088
	SAR	EAX,4
	IMUL	EAX,EAX,-1171354717
	ADD	EAX,1024
	JMP	L174
	GLOBAL	_cmd_start
_cmd_start:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ECX
	PUSH	ECX
	MOV	EAX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	ESI,DWORD [4068]
	MOV	DWORD [-16+EBP],EAX
	PUSH	DWORD [16+EBP]
	PUSH	ESI
	CALL	_open_console
	MOV	EBX,EAX
	MOV	EAX,DWORD [36+EAX]
	ADD	EAX,16
	MOV	DWORD [-20+EBP],EAX
	PUSH	4
	PUSH	32
	PUSH	EBX
	CALL	_sheet_slide
	PUSH	DWORD [16+ESI]
	PUSH	EBX
	MOV	EBX,6
	CALL	_sheet_updown
	ADD	ESP,28
	CMP	BYTE [6+EDI],0
	JNE	L180
L182:
	PUSH	266
	PUSH	DWORD [-20+EBP]
	CALL	_fifo32_put
	MOV	EAX,DWORD [-16+EBP]
	POP	ESI
	POP	EDI
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_newline
L180:
	MOVSX	EAX,BYTE [EBX+EDI*1]
	ADD	EAX,256
	INC	EBX
	PUSH	EAX
	PUSH	DWORD [-20+EBP]
	CALL	_fifo32_put
	CMP	BYTE [EBX+EDI*1],0
	POP	EAX
	POP	EDX
	JNE	L180
	JMP	L182
	GLOBAL	_cmd_ncst
_cmd_ncst:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,5
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	MOV	EBX,DWORD [12+EBP]
	MOV	DWORD [-16+EBP],EAX
	PUSH	DWORD [16+EBP]
	PUSH	0
	CALL	_open_constask
	POP	ECX
	CMP	BYTE [5+EBX],0
	LEA	EDI,DWORD [16+EAX]
	POP	EAX
	JNE	L188
L190:
	PUSH	266
	PUSH	EDI
	CALL	_fifo32_put
	MOV	EAX,DWORD [-16+EBP]
	POP	EBX
	POP	ESI
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_newline
L188:
	MOVSX	EAX,BYTE [ESI+EBX*1]
	ADD	EAX,256
	INC	ESI
	PUSH	EAX
	PUSH	EDI
	CALL	_fifo32_put
	CMP	BYTE [ESI+EBX*1],0
	POP	EAX
	POP	EDX
	JNE	L188
	JMP	L190
[SECTION .data]
LC12:
	DB	"Hari",0x00
LC13:
	DB	".hrb file format error.",0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_app
_cmd_app:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	XOR	EBX,EBX
	SUB	ESP,56
	MOV	ESI,DWORD [16+EBP]
	CALL	_task_now
	MOV	DWORD [-56+EBP],EAX
L197:
	MOV	AL,BYTE [EBX+ESI*1]
	CMP	AL,32
	JLE	L193
	MOV	BYTE [-44+EBP+EBX*1],AL
	INC	EBX
	CMP	EBX,12
	JLE	L197
L193:
	PUSH	224
	LEA	ESI,DWORD [-44+EBP]
	PUSH	1058304
	PUSH	ESI
	MOV	BYTE [-44+EBP+EBX*1],0
	CALL	_file_search
	ADD	ESP,12
	TEST	EAX,EAX
	MOV	DWORD [-48+EBP],EAX
	JE	L219
L218:
	MOV	EAX,DWORD [-48+EBP]
	PUSH	DWORD [28+EAX]
	PUSH	3932160
	CALL	_memman_alloc_4k
	MOV	EDX,DWORD [-48+EBP]
	PUSH	1064448
	PUSH	DWORD [12+EBP]
	PUSH	EAX
	MOV	DWORD [-68+EBP],EAX
	PUSH	DWORD [28+EDX]
	MOVZX	EAX,WORD [26+EDX]
	PUSH	EAX
	CALL	_file_loadfile
	MOV	EDI,DWORD [-48+EBP]
	ADD	ESP,28
	CMP	DWORD [28+EDI],35
	JBE	L200
	MOV	ESI,DWORD [-68+EBP]
	MOV	EAX,LC12
	CLD
	ADD	ESI,4
	MOV	ECX,4
	MOV	EDI,EAX
	REPE
	CMPSB
	JNE	L200
	MOV	EAX,DWORD [-68+EBP]
	CMP	BYTE [EAX],0
	JE	L220
L200:
	PUSH	LC13
	PUSH	DWORD [8+EBP]
	CALL	_cons_putstr0
	POP	EAX
	POP	EDX
L212:
	MOV	EDI,DWORD [-48+EBP]
	PUSH	DWORD [28+EDI]
	PUSH	DWORD [-68+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	DWORD [8+EBP]
	CALL	_cons_newline
	MOV	EAX,1
L191:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L220:
	MOV	EDX,DWORD [EAX]
	MOV	EDI,DWORD [12+EAX]
	MOV	EBX,DWORD [16+EAX]
	MOV	ESI,DWORD [20+EAX]
	PUSH	EDX
	MOV	DWORD [-60+EBP],EDX
	PUSH	3932160
	MOV	DWORD [-64+EBP],EDI
	CALL	_memman_alloc_4k
	MOV	EDI,DWORD [-48+EBP]
	MOV	EDX,DWORD [-56+EBP]
	MOV	DWORD [-52+EBP],EAX
	MOV	DWORD [168+EDX],EAX
	PUSH	16634
	PUSH	DWORD [-68+EBP]
	MOV	EAX,DWORD [28+EDI]
	DEC	EAX
	PUSH	EAX
	MOV	EAX,EDX
	ADD	EAX,148
	PUSH	EAX
	CALL	_set_segmdesc
	MOV	EAX,DWORD [-60+EBP]
	PUSH	16626
	DEC	EAX
	PUSH	DWORD [-52+EBP]
	PUSH	EAX
	MOV	EAX,DWORD [-56+EBP]
	ADD	EAX,156
	PUSH	EAX
	CALL	_set_segmdesc
	ADD	ESP,40
	TEST	EBX,EBX
	JLE	L215
	MOV	ECX,DWORD [-64+EBP]
	MOV	EAX,DWORD [-68+EBP]
	ADD	ECX,DWORD [-52+EBP]
	LEA	EDX,DWORD [EAX+ESI*1]
L205:
	MOV	AL,BYTE [EDX]
	INC	EDX
	MOV	BYTE [ECX],AL
	INC	ECX
	DEC	EBX
	JNE	L205
L215:
	MOV	EAX,DWORD [-56+EBP]
	MOV	EBX,255
	ADD	EAX,48
	PUSH	EAX
	PUSH	12
	PUSH	DWORD [-64+EBP]
	PUSH	4
	PUSH	27
	CALL	_start_app
	MOV	ESI,DWORD [4068]
	ADD	ESP,20
	ADD	ESI,1044
L211:
	MOV	EAX,DWORD [28+ESI]
	AND	EAX,17
	CMP	EAX,17
	JE	L221
L208:
	ADD	ESI,40
	DEC	EBX
	JNS	L211
	MOV	EAX,DWORD [-56+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_timer_cancelall
	PUSH	DWORD [-60+EBP]
	PUSH	DWORD [-52+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	ADD	ESP,16
	JMP	L212
L221:
	MOV	EDX,DWORD [-56+EBP]
	CMP	DWORD [36+ESI],EDX
	JNE	L208
	PUSH	ESI
	CALL	_sheet_free
	POP	ECX
	JMP	L208
L219:
	CMP	BYTE [-45+EBP+EBX*1],46
	JE	L198
	PUSH	224
	PUSH	1058304
	PUSH	ESI
	MOV	BYTE [-44+EBP+EBX*1],46
	MOV	BYTE [-43+EBP+EBX*1],72
	MOV	BYTE [-42+EBP+EBX*1],82
	MOV	BYTE [-41+EBP+EBX*1],66
	MOV	BYTE [-40+EBP+EBX*1],0
	CALL	_file_search
	ADD	ESP,12
	MOV	DWORD [-48+EBP],EAX
L198:
	CMP	DWORD [-48+EBP],0
	JNE	L218
	XOR	EAX,EAX
	JMP	L191
	GLOBAL	_hrb_api
_hrb_api:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,16
	MOV	EBX,DWORD [28+EBP]
	CALL	_task_now
	MOV	EDX,DWORD [4076]
	CMP	EBX,1
	MOV	DWORD [-16+EBP],EAX
	MOV	EDI,DWORD [168+EAX]
	MOV	ESI,DWORD [164+EAX]
	MOV	DWORD [-24+EBP],EDX
	MOV	EAX,DWORD [4068]
	MOV	DWORD [-20+EBP],EAX
	JE	L287
	CMP	EBX,2
	JE	L288
	CMP	EBX,3
	JE	L289
	CMP	EBX,4
	JE	L290
	CMP	EBX,5
	JE	L291
	CMP	EBX,6
	JE	L292
	CMP	EBX,7
	JE	L293
	CMP	EBX,8
	JE	L294
	CMP	EBX,9
	JE	L295
	CMP	EBX,10
	JE	L296
	CMP	EBX,11
	JE	L297
	CMP	EBX,12
	JE	L298
	CMP	EBX,13
	JE	L299
	CMP	EBX,14
	JE	L300
	CMP	EBX,15
	JE	L256
	CMP	EBX,16
	JE	L301
	CMP	EBX,17
	JE	L302
	CMP	EBX,18
	JE	L303
	CMP	EBX,19
	JE	L304
	CMP	EBX,20
	JE	L305
L224:
	XOR	EAX,EAX
L222:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L305:
	MOV	EDX,DWORD [36+EBP]
	TEST	EDX,EDX
	JNE	L277
	PUSH	97
	CALL	_io_in8
	MOV	EBX,EAX
	AND	EBX,13
	PUSH	EBX
	PUSH	97
	CALL	_io_out8
L279:
	ADD	ESP,12
	JMP	L224
L277:
	MOV	ECX,1193180000
	MOV	ESI,EDX
	MOV	EAX,ECX
	PUSH	182
	CDQ
	IDIV	ESI
	PUSH	67
	MOV	EBX,EAX
	CALL	_io_out8
	MOVZX	EAX,BL
	SAR	EBX,8
	PUSH	EAX
	PUSH	66
	CALL	_io_out8
	PUSH	EBX
	PUSH	66
	CALL	_io_out8
	PUSH	97
	CALL	_io_in8
	MOV	EBX,EAX
	OR	EBX,3
	AND	EBX,15
	PUSH	EBX
	PUSH	97
	CALL	_io_out8
	ADD	ESP,36
	JMP	L224
L304:
	PUSH	DWORD [24+EBP]
	CALL	_timer_free
L280:
	POP	EBX
	JMP	L224
L303:
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [24+EBP]
	CALL	_timer_settime
L282:
	POP	ESI
	POP	EDI
	JMP	L224
L302:
	MOV	EAX,DWORD [36+EBP]
	ADD	EAX,256
	PUSH	EAX
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,16
	PUSH	EAX
	PUSH	DWORD [24+EBP]
	CALL	_timer_init
	JMP	L279
L301:
	CALL	_timer_alloc
	MOV	DWORD [68+EBP],EAX
	MOV	BYTE [9+EAX],1
	JMP	L224
L256:
	CALL	_io_cli
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JNE	L259
	CMP	DWORD [36+EBP],0
	JE	L260
	PUSH	DWORD [-16+EBP]
	CALL	_task_sleep
	POP	EAX
L259:
	MOV	EDI,DWORD [-16+EBP]
	ADD	EDI,16
	PUSH	EDI
	CALL	_fifo32_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	EAX
	CMP	EBX,1
	JLE	L306
L262:
	CMP	EBX,2
	JE	L307
L263:
	CMP	EBX,3
	JE	L308
L264:
	CMP	EBX,4
	JE	L309
L265:
	CMP	EBX,255
	JLE	L256
	LEA	EAX,DWORD [-256+EBX]
	MOV	DWORD [68+EBP],EAX
	JMP	L224
L309:
	PUSH	DWORD [16+ESI]
	CALL	_timer_cancel
	CALL	_io_cli
	MOV	EAX,DWORD [ESI]
	SUB	EAX,DWORD [-20+EBP]
	SUB	EAX,1044
	SAR	EAX,3
	IMUL	EAX,EAX,-858993459
	ADD	EAX,2024
	PUSH	EAX
	PUSH	DWORD [-24+EBP]
	CALL	_fifo32_put
	MOV	DWORD [ESI],0
	CALL	_io_sti
	ADD	ESP,12
	JMP	L265
L308:
	MOV	DWORD [12+ESI],-1
	JMP	L264
L307:
	MOV	DWORD [12+ESI],7
	JMP	L263
L306:
	CMP	DWORD [ESI],0
	JE	L262
	PUSH	1
	PUSH	EDI
	PUSH	DWORD [16+ESI]
	CALL	_timer_init
	PUSH	50
	PUSH	DWORD [16+ESI]
	CALL	_timer_settime
	ADD	ESP,20
	JMP	L262
L260:
	CALL	_io_sti
	MOV	DWORD [68+EBP],-1
	JMP	L224
L300:
	PUSH	DWORD [24+EBP]
	CALL	_sheet_free
	JMP	L280
L299:
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	MOV	ESI,DWORD [24+EBP]
	PUSH	DWORD [36+EBP]
	AND	ESI,-2
	PUSH	ESI
	CALL	_hrb_api_linewin
	ADD	ESP,24
L286:
	TEST	DWORD [24+EBP],1
	JNE	L224
	MOV	EAX,DWORD [8+EBP]
	INC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	INC	EAX
	PUSH	EAX
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
L284:
	PUSH	ESI
L281:
	CALL	_sheet_refresh
L283:
	ADD	ESP,20
	JMP	L224
L298:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [24+EBP]
	JMP	L281
L297:
	MOV	ESI,DWORD [24+EBP]
	MOV	EAX,DWORD [8+EBP]
	AND	ESI,-2
	MOV	DL,BYTE [36+EBP]
	IMUL	EAX,DWORD [4+ESI]
	ADD	EAX,DWORD [12+EBP]
	MOV	ECX,DWORD [ESI]
	MOV	BYTE [EAX+ECX*1],DL
	TEST	DWORD [24+EBP],1
	JNE	L224
	MOV	EAX,DWORD [8+EBP]
	INC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	INC	EAX
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	JMP	L284
L296:
	MOV	EAX,DWORD [32+EBP]
	ADD	EAX,15
	AND	EAX,-16
	PUSH	EAX
	MOV	EAX,DWORD [24+EBP]
	PUSH	DWORD [36+EBP]
	ADD	EAX,EDI
	PUSH	EAX
	CALL	_memman_free
	JMP	L279
L295:
	MOV	EAX,DWORD [32+EBP]
	ADD	EAX,15
	AND	EAX,-16
	PUSH	EAX
	MOV	EAX,DWORD [24+EBP]
	ADD	EAX,EDI
	PUSH	EAX
	CALL	_memman_alloc
	MOV	DWORD [68+EBP],EAX
	JMP	L282
L294:
	MOV	EBX,DWORD [24+EBP]
	ADD	EBX,EDI
	PUSH	EBX
	CALL	_memman_init
	AND	DWORD [32+EBP],-16
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
	PUSH	EBX
	CALL	_memman_free
	ADD	ESP,16
	JMP	L224
L293:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	MOV	ESI,DWORD [24+EBP]
	PUSH	DWORD [36+EBP]
	AND	ESI,-2
	MOVZX	EAX,BYTE [16+EBP]
	PUSH	EAX
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_boxfill8
	ADD	ESP,28
	JMP	L286
L292:
	MOV	EAX,DWORD [16+EBP]
	MOV	ESI,DWORD [24+EBP]
	ADD	EAX,EDI
	AND	ESI,-2
	PUSH	EAX
	MOVSX	EAX,BYTE [36+EBP]
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_putfonts8_asc
	ADD	ESP,24
	TEST	DWORD [24+EBP],1
	JNE	L224
	MOV	ECX,DWORD [12+EBP]
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [32+EBP]
	ADD	EAX,16
	PUSH	EAX
	LEA	EAX,DWORD [ECX+EDX*8]
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	ECX
	JMP	L284
L291:
	PUSH	DWORD [-20+EBP]
	CALL	_sheet_alloc
	MOV	EBX,DWORD [24+EBP]
	MOV	ECX,DWORD [-16+EBP]
	ADD	EBX,EDI
	MOV	DWORD [36+EAX],ECX
	MOV	ESI,EAX
	OR	DWORD [28+EAX],16
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	EBX
	PUSH	EAX
	CALL	_sheet_setbuf
	MOV	EAX,DWORD [32+EBP]
	PUSH	0
	ADD	EAX,EDI
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	EBX
	MOV	EBX,2
	CALL	_make_window8
	MOV	ECX,DWORD [-20+EBP]
	MOV	EDX,DWORD [-20+EBP]
	ADD	ESP,44
	MOV	EAX,DWORD [12+EDX]
	SUB	EAX,DWORD [8+EBP]
	CDQ
	IDIV	EBX
	PUSH	EAX
	MOV	EAX,DWORD [8+ECX]
	SUB	EAX,DWORD [12+EBP]
	CDQ
	IDIV	EBX
	AND	EAX,-4
	PUSH	EAX
	PUSH	ESI
	CALL	_sheet_slide
	MOV	EAX,DWORD [-20+EBP]
	PUSH	DWORD [16+EAX]
	PUSH	ESI
	CALL	_sheet_updown
	MOV	DWORD [68+EBP],ESI
	JMP	L283
L290:
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,48
	JMP	L222
L289:
	MOV	EAX,DWORD [24+EBP]
	PUSH	DWORD [32+EBP]
	ADD	EAX,EDI
	PUSH	EAX
	PUSH	ESI
	CALL	_cons_putstr1
	JMP	L279
L288:
	MOV	EAX,DWORD [24+EBP]
	ADD	EAX,EDI
	PUSH	EAX
	PUSH	ESI
	CALL	_cons_putstr0
	JMP	L282
L287:
	PUSH	1
	MOVZX	EAX,BYTE [36+EBP]
	PUSH	EAX
	PUSH	ESI
	CALL	_cons_putchar
	JMP	L279
[SECTION .data]
LC14:
	DB	0x0A,"INT 0C :",0x0A," Stack Exception.",0x0A,0x00
LC15:
	DB	"EIP = %08X",0x0A,0x00
[SECTION .text]
	GLOBAL	_inthandler0c
_inthandler0c:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-44+EBP]
	SUB	ESP,32
	CALL	_task_now
	MOV	ESI,EAX
	MOV	EDI,DWORD [164+EAX]
	ADD	ESI,48
	PUSH	LC14
	PUSH	EDI
	CALL	_cons_putstr0
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [44+EAX]
	PUSH	LC15
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	EDI
	CALL	_cons_putstr0
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	MOV	EAX,ESI
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC16:
	DB	0x0A,"INT 0D :",0x0A," General Protected Exception.",0x0A,0x00
[SECTION .text]
	GLOBAL	_inthandler0d
_inthandler0d:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-44+EBP]
	SUB	ESP,32
	CALL	_task_now
	MOV	ESI,EAX
	MOV	EDI,DWORD [164+EAX]
	ADD	ESI,48
	PUSH	LC16
	PUSH	EDI
	CALL	_cons_putstr0
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [44+EAX]
	PUSH	LC15
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	EDI
	CALL	_cons_putstr0
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	MOV	EAX,ESI
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_hrb_api_linewin
_hrb_api_linewin:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,12
	MOV	EBX,DWORD [12+EBP]
	MOV	EAX,DWORD [20+EBP]
	MOV	ECX,EBX
	MOV	EDX,DWORD [24+EBP]
	SAL	ECX,10
	MOV	EDI,EDX
	MOV	DWORD [-16+EBP],ECX
	MOV	ESI,EAX
	MOV	ECX,DWORD [16+EBP]
	SUB	EDI,DWORD [16+EBP]
	SAL	ECX,10
	SUB	ESI,EBX
	MOV	DWORD [-20+EBP],ECX
	JS	L334
L313:
	TEST	EDI,EDI
	JS	L335
L314:
	CMP	ESI,EDI
	JL	L315
	LEA	ECX,DWORD [1+ESI]
	CMP	EBX,EAX
	MOV	ESI,-1024
	JG	L317
	MOV	ESI,1024
L317:
	CMP	DWORD [16+EBP],EDX
	JG	L318
	SUB	EDX,DWORD [16+EBP]
	INC	EDX
L333:
	SAL	EDX,10
	MOV	EAX,EDX
	CDQ
	IDIV	ECX
	MOV	EDI,EAX
L320:
	TEST	ECX,ECX
	JLE	L331
	MOV	EBX,ECX
L329:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [-20+EBP]
	SAR	EAX,10
	MOV	ECX,DWORD [-16+EBP]
	IMUL	EAX,DWORD [4+EDX]
	SAR	ECX,10
	MOV	DWORD [-24+EBP],ECX
	MOV	ECX,DWORD [EDX]
	ADD	EAX,DWORD [-24+EBP]
	MOV	DL,BYTE [28+EBP]
	MOV	BYTE [EAX+ECX*1],DL
	ADD	DWORD [-16+EBP],ESI
	ADD	DWORD [-20+EBP],EDI
	DEC	EBX
	JNE	L329
L331:
	ADD	ESP,12
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L318:
	SUB	EDX,DWORD [16+EBP]
	DEC	EDX
	JMP	L333
L315:
	LEA	ECX,DWORD [1+EDI]
	CMP	DWORD [16+EBP],EDX
	MOV	EDI,-1024
	JG	L322
	MOV	EDI,1024
L322:
	CMP	EBX,EAX
	JG	L323
	SUB	EAX,EBX
	LEA	EDX,DWORD [1+EAX]
L332:
	SAL	EDX,10
	MOV	EAX,EDX
	CDQ
	IDIV	ECX
	MOV	ESI,EAX
	JMP	L320
L323:
	SUB	EAX,EBX
	LEA	EDX,DWORD [-1+EAX]
	JMP	L332
L335:
	NEG	EDI
	JMP	L314
L334:
	NEG	ESI
	JMP	L313
