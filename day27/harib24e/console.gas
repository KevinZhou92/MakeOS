	.file	"console.c"
	.text
	.balign 2
.globl _console_task
	.def	_console_task;	.scl	2;	.type	32;	.endef
_console_task:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-44(%ebp), %esi
	subl	$72, %esp
	movl	8(%ebp), %ebx
	call	_task_now
	pushl	$11520
	pushl	$3932160
	movl	%eax, -80(%ebp)
	call	_memman_alloc_4k
	testl	%ebx, %ebx
	movl	%eax, %edi
	movl	%ebx, -44(%ebp)
	movl	-80(%ebp), %eax
	movl	$8, -40(%ebp)
	movl	%esi, 164(%eax)
	popl	%eax
	movl	$28, -36(%ebp)
	movl	$-1, -32(%ebp)
	popl	%edx
	je	L2
	call	_timer_alloc
	movl	-80(%ebp), %edx
	pushl	$1
	addl	$16, %edx
	pushl	%edx
	movl	%eax, -28(%ebp)
	pushl	%eax
	call	_timer_init
	pushl	$50
	pushl	-28(%ebp)
	call	_timer_settime
	addl	$20, %esp
L2:
	pushl	$1049088
	pushl	%edi
	call	_file_readfat
	pushl	$1
	pushl	$62
	pushl	%esi
	call	_cons_putchar
L27:
	addl	$20, %esp
L3:
	call	_io_cli
	movl	-80(%ebp), %ebx
	addl	$16, %ebx
	pushl	%ebx
	call	_fifo32_status
	popl	%esi
	testl	%eax, %eax
	je	L30
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, %esi
	call	_io_sti
	popl	%ecx
	cmpl	$1, %esi
	jle	L31
L8:
	cmpl	$2, %esi
	je	L32
L13:
	cmpl	$3, %esi
	je	L33
L14:
	cmpl	$4, %esi
	je	L34
L16:
	leal	-256(%esi), %ecx
	movl	%ecx, -84(%ebp)
	cmpl	$255, %ecx
	ja	L17
	cmpl	$264, %esi
	je	L35
	cmpl	$266, %esi
	je	L36
	movl	-40(%ebp), %ecx
	cmpl	$239, %ecx
	jg	L17
	movl	%ecx, %eax
	movl	$8, %edx
	movl	%edx, %ebx
	pushl	$1
	cltd
	idivl	%ebx
	movl	%eax, %ecx
	movl	%esi, %eax
	movb	%al, -78(%ebp,%ecx)
	leal	-44(%ebp), %eax
	pushl	-84(%ebp)
	pushl	%eax
L28:
	call	_cons_putchar
L29:
	addl	$12, %esp
L17:
	movl	-44(%ebp), %ebx
	testl	%ebx, %ebx
	je	L3
	cmpl	$0, -32(%ebp)
	js	L26
	movl	-36(%ebp), %ecx
	movl	-40(%ebp), %edx
	leal	15(%ecx), %eax
	pushl	%eax
	leal	7(%edx), %eax
	pushl	%eax
	pushl	%ecx
	pushl	%edx
	movzbl	-32(%ebp), %eax
	pushl	%eax
	pushl	4(%ebx)
	pushl	(%ebx)
	call	_boxfill8
	addl	$28, %esp
L26:
	movl	-36(%ebp), %ecx
	movl	-40(%ebp), %edx
	leal	16(%ecx), %eax
	pushl	%eax
	leal	8(%edx), %eax
	pushl	%eax
	pushl	%ecx
	pushl	%edx
	pushl	-44(%ebp)
	call	_sheet_refresh
	jmp	L27
L36:
	pushl	$0
	leal	-44(%ebp), %ebx
	pushl	$32
	pushl	%ebx
	call	_cons_putchar
	pushl	%ebx
	movl	-40(%ebp), %eax
	movl	$8, %edx
	movl	%edx, %ecx
	cltd
	idivl	%ecx
	movb	$0, -78(%ebp,%eax)
	call	_cons_newline
	leal	-76(%ebp), %eax
	pushl	12(%ebp)
	pushl	%edi
	pushl	%ebx
	pushl	%eax
	call	_cons_runcmd
	addl	$32, %esp
	cmpl	$0, -44(%ebp)
	jne	L22
	pushl	%edi
	pushl	%ebx
	call	_cmd_exit
	popl	%eax
	popl	%edx
L22:
	pushl	$1
	pushl	$62
	pushl	%ebx
	jmp	L28
L35:
	cmpl	$16, -40(%ebp)
	jle	L17
	pushl	$0
	leal	-44(%ebp), %eax
	pushl	$32
	pushl	%eax
	call	_cons_putchar
	subl	$8, -40(%ebp)
	jmp	L29
L34:
	pushl	%edi
	leal	-44(%ebp), %eax
	pushl	%eax
	call	_cmd_exit
	popl	%ecx
	popl	%ebx
	jmp	L16
L33:
	movl	-44(%ebp), %ebx
	testl	%ebx, %ebx
	je	L15
	movl	-36(%ebp), %ecx
	movl	-40(%ebp), %edx
	leal	15(%ecx), %eax
	pushl	%eax
	leal	7(%edx), %eax
	pushl	%eax
	pushl	%ecx
	pushl	%edx
	pushl	$0
	pushl	4(%ebx)
	pushl	(%ebx)
	call	_boxfill8
	addl	$28, %esp
L15:
	movl	$-1, -32(%ebp)
	jmp	L14
L32:
	movl	$7, -32(%ebp)
	jmp	L13
L31:
	cmpl	$0, -44(%ebp)
	je	L8
	testl	%esi, %esi
	je	L9
	pushl	$0
	pushl	%ebx
	pushl	-28(%ebp)
	call	_timer_init
	addl	$12, %esp
	cmpl	$0, -32(%ebp)
	js	L11
	movl	$7, -32(%ebp)
L11:
	pushl	$50
	pushl	-28(%ebp)
	call	_timer_settime
	popl	%eax
	popl	%edx
	jmp	L8
L9:
	pushl	$1
	pushl	%ebx
	pushl	-28(%ebp)
	call	_timer_init
	addl	$12, %esp
	cmpl	$0, -32(%ebp)
	js	L11
	movl	$0, -32(%ebp)
	jmp	L11
L30:
	pushl	-80(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%ebx
	jmp	L3
	.data
LC0:
	.ascii " \0"
	.text
	.balign 2
.globl _cons_putchar
	.def	_cons_putchar;	.scl	2;	.type	32;	.endef
_cons_putchar:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	%eax
	movl	12(%ebp), %eax
	movb	16(%ebp), %dl
	movl	8(%ebp), %ebx
	movb	%dl, -7(%ebp)
	movb	%al, -6(%ebp)
	cmpb	$9, %al
	movb	$0, -5(%ebp)
	je	L39
	cmpb	$10, %al
	je	L53
	cmpb	$13, %al
	je	L37
	movl	(%ebx), %edx
	testl	%edx, %edx
	jne	L54
L50:
	cmpb	$0, -7(%ebp)
	je	L37
	movl	4(%ebx), %eax
	addl	$8, %eax
	movl	%eax, 4(%ebx)
	cmpl	$248, %eax
	je	L53
L37:
	movl	-4(%ebp), %ebx
	leave
	ret
L53:
	pushl	%ebx
	call	_cons_newline
	popl	%ecx
	jmp	L37
L54:
	pushl	$1
	leal	-6(%ebp), %eax
	pushl	%eax
	pushl	$0
	pushl	$7
	pushl	8(%ebx)
	pushl	4(%ebx)
	pushl	%edx
	call	_putfonts8_asc_sht
	addl	$28, %esp
	jmp	L50
L39:
	movl	(%ebx), %eax
	testl	%eax, %eax
	jne	L55
L42:
	movl	4(%ebx), %eax
	addl	$8, %eax
	movl	%eax, 4(%ebx)
	cmpl	$248, %eax
	je	L56
L43:
	movl	4(%ebx), %eax
	subl	$8, %eax
	andl	$31, %eax
	jne	L39
	jmp	L37
L56:
	pushl	%ebx
	call	_cons_newline
	popl	%eax
	jmp	L43
L55:
	pushl	$1
	pushl	$LC0
	pushl	$0
	pushl	$7
	pushl	8(%ebx)
	pushl	4(%ebx)
	pushl	%eax
	call	_putfonts8_asc_sht
	addl	$28, %esp
	jmp	L42
	.balign 2
.globl _cons_newline
	.def	_cons_newline;	.scl	2;	.type	32;	.endef
_cons_newline:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%eax
	movl	8(%ebp), %eax
	movl	8(%ebp), %edx
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	movl	8(%edx), %eax
	cmpl	$139, %eax
	jg	L58
	addl	$16, %eax
	movl	%eax, 8(%edx)
L59:
	movl	8(%ebp), %eax
	movl	$8, 4(%eax)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L58:
	cmpl	$0, -16(%ebp)
	je	L59
	movl	$28, %edi
L70:
	movl	$8, %esi
L69:
	movl	-16(%ebp), %eax
	movl	%edi, %edx
	movl	4(%eax), %ecx
	movl	(%eax), %ebx
	leal	16(%edi), %eax
	imull	%ecx, %eax
	imull	%ecx, %edx
	leal	(%eax,%esi), %eax
	leal	(%edx,%esi), %edx
	incl	%esi
	movb	(%eax,%ebx), %al
	cmpl	$247, %esi
	movb	%al, (%edx,%ebx)
	jle	L69
	incl	%edi
	cmpl	$139, %edi
	jle	L70
	movl	$140, %edi
L80:
	movl	$8, %esi
L79:
	movl	-16(%ebp), %edx
	movl	%edi, %eax
	movl	%edx, %ecx
	imull	4(%edx), %eax
	movl	(%edx), %edx
	leal	(%eax,%esi), %eax
	incl	%esi
	cmpl	$247, %esi
	movb	$0, (%eax,%edx)
	jle	L79
	incl	%edi
	cmpl	$155, %edi
	jle	L80
	pushl	$156
	pushl	$248
	pushl	$28
	pushl	$8
	pushl	%ecx
	call	_sheet_refresh
	addl	$20, %esp
	jmp	L59
	.balign 2
.globl _cons_putstr0
	.def	_cons_putstr0;	.scl	2;	.type	32;	.endef
_cons_putstr0:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	12(%ebp), %ebx
	movl	8(%ebp), %esi
	cmpb	$0, (%ebx)
	jne	L94
L96:
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
L94:
	pushl	$1
	movsbl	(%ebx),%eax
	pushl	%eax
	incl	%ebx
	pushl	%esi
	call	_cons_putchar
	addl	$12, %esp
	cmpb	$0, (%ebx)
	jne	L94
	jmp	L96
	.balign 2
.globl _cons_putstr1
	.def	_cons_putstr1;	.scl	2;	.type	32;	.endef
_cons_putstr1:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	16(%ebp), %esi
	xorl	%ebx, %ebx
	movl	12(%ebp), %edi
	cmpl	%esi, %ebx
	jl	L102
L104:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L102:
	pushl	$1
	movsbl	(%ebx,%edi),%eax
	pushl	%eax
	incl	%ebx
	pushl	8(%ebp)
	call	_cons_putchar
	addl	$12, %esp
	cmpl	%esi, %ebx
	jl	L102
	jmp	L104
	.data
LC1:
	.ascii "mem\0"
LC2:
	.ascii "cls\0"
LC3:
	.ascii "dir\0"
LC4:
	.ascii "type \0"
LC5:
	.ascii "exit\0"
LC6:
	.ascii "start \0"
LC7:
	.ascii "ncst \0"
LC8:
	.ascii "Bad command.\12\12\0"
	.text
	.balign 2
.globl _cons_runcmd
	.def	_cons_runcmd;	.scl	2;	.type	32;	.endef
_cons_runcmd:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$LC1, %edi
	pushl	%ebx
	subl	$12, %esp
	movl	8(%ebp), %eax
	movl	16(%ebp), %ecx
	movl	%eax, -24(%ebp)
	movl	%ecx, -16(%ebp)
	movl	20(%ebp), %eax
	movl	-24(%ebp), %esi
	movl	%eax, -20(%ebp)
	movl	12(%ebp), %ebx
	movl	$4, %eax
	cld
	movl	%eax, %ecx
	repe
	cmpsb
	jne	L106
	cmpl	$0, (%ebx)
	jne	L122
L106:
	movl	$4, %eax
	movl	-24(%ebp), %esi
	cld
	movl	$LC2, %edi
	movl	%eax, %ecx
	repe
	cmpsb
	jne	L108
	cmpl	$0, (%ebx)
	jne	L123
L108:
	movl	$4, %eax
	movl	-24(%ebp), %esi
	cld
	movl	$LC3, %edi
	movl	%eax, %ecx
	repe
	cmpsb
	jne	L110
	cmpl	$0, (%ebx)
	jne	L124
L110:
	movl	$5, %eax
	movl	-24(%ebp), %esi
	cld
	movl	$LC4, %edi
	movl	%eax, %ecx
	repe
	cmpsb
	jne	L112
	cmpl	$0, (%ebx)
	jne	L125
L112:
	movl	$5, %eax
	movl	-24(%ebp), %esi
	cld
	movl	$LC5, %edi
	movl	%eax, %ecx
	repe
	cmpsb
	je	L126
	movl	$6, %eax
	movl	-24(%ebp), %esi
	cld
	movl	$LC6, %edi
	movl	%eax, %ecx
	repe
	cmpsb
	je	L127
	movl	$5, %eax
	movl	-24(%ebp), %esi
	cld
	movl	$LC7, %edi
	movl	%eax, %ecx
	repe
	cmpsb
	je	L128
	movl	-24(%ebp), %eax
	cmpb	$0, (%eax)
	jne	L129
L105:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L129:
	pushl	%eax
	pushl	-16(%ebp)
	pushl	%ebx
	call	_cmd_app
	addl	$12, %esp
	testl	%eax, %eax
	jne	L105
	movl	$LC8, 12(%ebp)
	movl	%ebx, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cons_putstr0
L128:
	movl	-20(%ebp), %eax
	movl	-24(%ebp), %ecx
	movl	%eax, 16(%ebp)
	movl	%ecx, 12(%ebp)
	movl	%ebx, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cmd_ncst
L127:
	movl	-20(%ebp), %eax
	movl	-24(%ebp), %ecx
	movl	%eax, 16(%ebp)
	movl	%ecx, 12(%ebp)
	movl	%ebx, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cmd_start
L126:
	movl	-16(%ebp), %eax
	movl	%ebx, 8(%ebp)
	movl	%eax, 12(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cmd_exit
L125:
	movl	-24(%ebp), %eax
	movl	-16(%ebp), %ecx
	movl	%eax, 16(%ebp)
	movl	%ecx, 12(%ebp)
	movl	%ebx, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cmd_type
L124:
	movl	%ebx, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cmd_dir
L123:
	movl	%ebx, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cmd_cls
L122:
	movl	-20(%ebp), %eax
	movl	%ebx, 8(%ebp)
	movl	%eax, 12(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cmd_mem
	.data
LC9:
	.ascii "total   %dMB\12free %dKB\12\12\0"
	.text
	.balign 2
.globl _cmd_mem
	.def	_cmd_mem;	.scl	2;	.type	32;	.endef
_cmd_mem:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	subl	$64, %esp
	pushl	$3932160
	call	_memman_total
	movl	$1048576, %edx
	shrl	$10, %eax
	movl	%edx, %ebx
	movl	%eax, (%esp)
	movl	12(%ebp), %eax
	cltd
	idivl	%ebx
	pushl	%eax
	leal	-68(%ebp), %ebx
	pushl	$LC9
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	8(%ebp)
	call	_cons_putstr0
	movl	-4(%ebp), %ebx
	leave
	ret
	.balign 2
.globl _cmd_cls
	.def	_cmd_cls;	.scl	2;	.type	32;	.endef
_cmd_cls:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$28, %esi
	movl	8(%ebp), %edi
	pushl	%ebx
	movl	(%edi), %ebx
L141:
	movl	$8, %ecx
L140:
	movl	%esi, %eax
	movl	(%ebx), %edx
	imull	4(%ebx), %eax
	leal	(%eax,%ecx), %eax
	incl	%ecx
	cmpl	$247, %ecx
	movb	$0, (%eax,%edx)
	jle	L140
	incl	%esi
	cmpl	$155, %esi
	jle	L141
	pushl	$156
	pushl	$248
	pushl	$28
	pushl	$8
	pushl	%ebx
	call	_sheet_refresh
	movl	$28, 8(%edi)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC10:
	.ascii "filename.ext   %7d\12\0"
	.text
	.balign 2
.globl _cmd_dir
	.def	_cmd_dir;	.scl	2;	.type	32;	.endef
_cmd_dir:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	xorl	%ebx, %ebx
	subl	$32, %esp
	movl	8(%ebp), %edi
L159:
	movb	1058304(%ebx), %al
	testb	%al, %al
	je	L148
	cmpb	$-27, %al
	je	L149
	testb	$24, 1058315(%ebx)
	je	L163
L149:
	incl	%esi
	addl	$32, %ebx
	cmpl	$223, %esi
	jle	L159
L148:
	pushl	%edi
	call	_cons_newline
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L163:
	pushl	1058332(%ebx)
	pushl	$LC10
	leal	-44(%ebp), %eax
	pushl	%eax
	call	_sprintf
	leal	1058304(%ebx), %edx
	xorl	%ecx, %ecx
	addl	$12, %esp
L158:
	movb	(%edx), %al
	incl	%edx
	movb	%al, -44(%ebp,%ecx)
	incl	%ecx
	cmpl	$7, %ecx
	jle	L158
	movb	1058312(%ebx), %al
	movb	%al, -35(%ebp)
	movb	1058313(%ebx), %al
	movb	%al, -34(%ebp)
	movb	1058314(%ebx), %al
	movb	%al, -33(%ebp)
	leal	-44(%ebp), %eax
	pushl	%eax
	pushl	%edi
	call	_cons_putstr0
	popl	%eax
	popl	%edx
	jmp	L149
	.data
LC11:
	.ascii "File not found.\12\0"
	.text
	.balign 2
.globl _cmd_type
	.def	_cmd_type;	.scl	2;	.type	32;	.endef
_cmd_type:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%esi
	movl	12(%ebp), %eax
	movl	8(%ebp), %edi
	movl	%eax, -16(%ebp)
	pushl	$224
	pushl	$1058304
	movl	16(%ebp), %eax
	addl	$5, %eax
	pushl	%eax
	call	_file_search
	addl	$12, %esp
	movl	%eax, %esi
	testl	%eax, %eax
	je	L165
	pushl	28(%eax)
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$1064448
	pushl	-16(%ebp)
	pushl	%eax
	movl	%eax, %ebx
	pushl	28(%esi)
	movzwl	26(%esi), %eax
	pushl	%eax
	call	_file_loadfile
	pushl	28(%esi)
	pushl	%ebx
	pushl	%edi
	call	_cons_putstr1
	addl	$40, %esp
	pushl	28(%esi)
	pushl	%ebx
	pushl	$3932160
	call	_memman_free_4k
	addl	$12, %esp
L166:
	movl	%edi, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cons_newline
L165:
	pushl	$LC11
	pushl	%edi
	call	_cons_putstr0
	popl	%ecx
	popl	%ebx
	jmp	L166
	.balign 2
.globl _cmd_exit
	.def	_cmd_exit;	.scl	2;	.type	32;	.endef
_cmd_exit:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ebx
	movl	8(%ebp), %ebx
	call	_task_now
	movl	4068, %esi
	movl	4076, %edi
	movl	%eax, -16(%ebp)
	cmpl	$0, (%ebx)
	je	L168
	pushl	16(%ebx)
	call	_timer_cancel
	popl	%ecx
L168:
	pushl	$11520
	pushl	12(%ebp)
	pushl	$3932160
	call	_memman_free_4k
	call	_io_cli
	movl	(%ebx), %eax
	addl	$12, %esp
	testl	%eax, %eax
	je	L169
	subl	%esi, %eax
	subl	$1044, %eax
	sarl	$3, %eax
	imull	$-858993459, %eax, %eax
	addl	$768, %eax
L174:
	pushl	%eax
	pushl	%edi
	call	_fifo32_put
	popl	%eax
	popl	%edx
	call	_io_sti
L171:
	pushl	-16(%ebp)
	call	_task_sleep
	popl	%edi
	jmp	L171
L169:
	movl	-16(%ebp), %eax
	subl	_taskctl, %eax
	subl	$4088, %eax
	sarl	$4, %eax
	imull	$-1171354717, %eax, %eax
	addl	$1024, %eax
	jmp	L174
	.balign 2
.globl _cmd_start
	.def	_cmd_start;	.scl	2;	.type	32;	.endef
_cmd_start:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	%ecx
	movl	8(%ebp), %eax
	movl	12(%ebp), %edi
	movl	4068, %esi
	movl	%eax, -16(%ebp)
	pushl	16(%ebp)
	pushl	%esi
	call	_open_console
	movl	%eax, %ebx
	movl	36(%eax), %eax
	addl	$16, %eax
	movl	%eax, -20(%ebp)
	pushl	$4
	pushl	$32
	pushl	%ebx
	call	_sheet_slide
	pushl	16(%esi)
	pushl	%ebx
	movl	$6, %ebx
	call	_sheet_updown
	addl	$28, %esp
	cmpb	$0, 6(%edi)
	jne	L180
L182:
	pushl	$266
	pushl	-20(%ebp)
	call	_fifo32_put
	movl	-16(%ebp), %eax
	popl	%esi
	popl	%edi
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cons_newline
L180:
	movsbl	(%ebx,%edi),%eax
	addl	$256, %eax
	incl	%ebx
	pushl	%eax
	pushl	-20(%ebp)
	call	_fifo32_put
	cmpb	$0, (%ebx,%edi)
	popl	%eax
	popl	%edx
	jne	L180
	jmp	L182
	.balign 2
.globl _cmd_ncst
	.def	_cmd_ncst;	.scl	2;	.type	32;	.endef
_cmd_ncst:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$5, %esi
	pushl	%ebx
	pushl	%eax
	movl	8(%ebp), %eax
	movl	12(%ebp), %ebx
	movl	%eax, -16(%ebp)
	pushl	16(%ebp)
	pushl	$0
	call	_open_constask
	popl	%ecx
	cmpb	$0, 5(%ebx)
	leal	16(%eax), %edi
	popl	%eax
	jne	L188
L190:
	pushl	$266
	pushl	%edi
	call	_fifo32_put
	movl	-16(%ebp), %eax
	popl	%ebx
	popl	%esi
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_cons_newline
L188:
	movsbl	(%esi,%ebx),%eax
	addl	$256, %eax
	incl	%esi
	pushl	%eax
	pushl	%edi
	call	_fifo32_put
	cmpb	$0, (%esi,%ebx)
	popl	%eax
	popl	%edx
	jne	L188
	jmp	L190
	.data
LC12:
	.ascii "Hari\0"
LC13:
	.ascii ".hrb file format error.\12\0"
	.text
	.balign 2
.globl _cmd_app
	.def	_cmd_app;	.scl	2;	.type	32;	.endef
_cmd_app:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	xorl	%ebx, %ebx
	subl	$56, %esp
	movl	16(%ebp), %esi
	call	_task_now
	movl	%eax, -56(%ebp)
L197:
	movb	(%ebx,%esi), %al
	cmpb	$32, %al
	jle	L193
	movb	%al, -44(%ebp,%ebx)
	incl	%ebx
	cmpl	$12, %ebx
	jle	L197
L193:
	pushl	$224
	leal	-44(%ebp), %esi
	pushl	$1058304
	pushl	%esi
	movb	$0, -44(%ebp,%ebx)
	call	_file_search
	addl	$12, %esp
	testl	%eax, %eax
	movl	%eax, -48(%ebp)
	je	L219
L218:
	movl	-48(%ebp), %eax
	pushl	28(%eax)
	pushl	$3932160
	call	_memman_alloc_4k
	movl	-48(%ebp), %edx
	pushl	$1064448
	pushl	12(%ebp)
	pushl	%eax
	movl	%eax, -68(%ebp)
	pushl	28(%edx)
	movzwl	26(%edx), %eax
	pushl	%eax
	call	_file_loadfile
	movl	-48(%ebp), %edi
	addl	$28, %esp
	cmpl	$35, 28(%edi)
	jbe	L200
	movl	-68(%ebp), %esi
	movl	$LC12, %eax
	cld
	addl	$4, %esi
	movl	$4, %ecx
	movl	%eax, %edi
	repe
	cmpsb
	jne	L200
	movl	-68(%ebp), %eax
	cmpb	$0, (%eax)
	je	L220
L200:
	pushl	$LC13
	pushl	8(%ebp)
	call	_cons_putstr0
	popl	%eax
	popl	%edx
L212:
	movl	-48(%ebp), %edi
	pushl	28(%edi)
	pushl	-68(%ebp)
	pushl	$3932160
	call	_memman_free_4k
	pushl	8(%ebp)
	call	_cons_newline
	movl	$1, %eax
L191:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L220:
	movl	(%eax), %edx
	movl	12(%eax), %edi
	movl	16(%eax), %ebx
	movl	20(%eax), %esi
	pushl	%edx
	movl	%edx, -60(%ebp)
	pushl	$3932160
	movl	%edi, -64(%ebp)
	call	_memman_alloc_4k
	movl	-48(%ebp), %edi
	movl	-56(%ebp), %edx
	movl	%eax, -52(%ebp)
	movl	%eax, 168(%edx)
	pushl	$16634
	pushl	-68(%ebp)
	movl	28(%edi), %eax
	decl	%eax
	pushl	%eax
	movl	%edx, %eax
	addl	$148, %eax
	pushl	%eax
	call	_set_segmdesc
	movl	-60(%ebp), %eax
	pushl	$16626
	decl	%eax
	pushl	-52(%ebp)
	pushl	%eax
	movl	-56(%ebp), %eax
	addl	$156, %eax
	pushl	%eax
	call	_set_segmdesc
	addl	$40, %esp
	testl	%ebx, %ebx
	jle	L215
	movl	-64(%ebp), %ecx
	movl	-68(%ebp), %eax
	addl	-52(%ebp), %ecx
	leal	(%eax,%esi), %edx
L205:
	movb	(%edx), %al
	incl	%edx
	movb	%al, (%ecx)
	incl	%ecx
	decl	%ebx
	jne	L205
L215:
	movl	-56(%ebp), %eax
	movl	$255, %ebx
	addl	$48, %eax
	pushl	%eax
	pushl	$12
	pushl	-64(%ebp)
	pushl	$4
	pushl	$27
	call	_start_app
	movl	4068, %esi
	addl	$20, %esp
	addl	$1044, %esi
L211:
	movl	28(%esi), %eax
	andl	$17, %eax
	cmpl	$17, %eax
	je	L221
L208:
	addl	$40, %esi
	decl	%ebx
	jns	L211
	movl	-56(%ebp), %eax
	addl	$16, %eax
	pushl	%eax
	call	_timer_cancelall
	pushl	-60(%ebp)
	pushl	-52(%ebp)
	pushl	$3932160
	call	_memman_free_4k
	addl	$16, %esp
	jmp	L212
L221:
	movl	-56(%ebp), %edx
	cmpl	%edx, 36(%esi)
	jne	L208
	pushl	%esi
	call	_sheet_free
	popl	%ecx
	jmp	L208
L219:
	cmpb	$46, -45(%ebp,%ebx)
	je	L198
	pushl	$224
	pushl	$1058304
	pushl	%esi
	movb	$46, -44(%ebp,%ebx)
	movb	$72, -43(%ebp,%ebx)
	movb	$82, -42(%ebp,%ebx)
	movb	$66, -41(%ebp,%ebx)
	movb	$0, -40(%ebp,%ebx)
	call	_file_search
	addl	$12, %esp
	movl	%eax, -48(%ebp)
L198:
	cmpl	$0, -48(%ebp)
	jne	L218
	xorl	%eax, %eax
	jmp	L191
	.balign 2
.globl _hrb_api
	.def	_hrb_api;	.scl	2;	.type	32;	.endef
_hrb_api:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	movl	28(%ebp), %ebx
	call	_task_now
	movl	4076, %edx
	cmpl	$1, %ebx
	movl	%eax, -16(%ebp)
	movl	168(%eax), %edi
	movl	164(%eax), %esi
	movl	%edx, -24(%ebp)
	movl	4068, %eax
	movl	%eax, -20(%ebp)
	je	L287
	cmpl	$2, %ebx
	je	L288
	cmpl	$3, %ebx
	je	L289
	cmpl	$4, %ebx
	je	L290
	cmpl	$5, %ebx
	je	L291
	cmpl	$6, %ebx
	je	L292
	cmpl	$7, %ebx
	je	L293
	cmpl	$8, %ebx
	je	L294
	cmpl	$9, %ebx
	je	L295
	cmpl	$10, %ebx
	je	L296
	cmpl	$11, %ebx
	je	L297
	cmpl	$12, %ebx
	je	L298
	cmpl	$13, %ebx
	je	L299
	cmpl	$14, %ebx
	je	L300
	cmpl	$15, %ebx
	je	L256
	cmpl	$16, %ebx
	je	L301
	cmpl	$17, %ebx
	je	L302
	cmpl	$18, %ebx
	je	L303
	cmpl	$19, %ebx
	je	L304
	cmpl	$20, %ebx
	je	L305
L224:
	xorl	%eax, %eax
L222:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L305:
	movl	36(%ebp), %edx
	testl	%edx, %edx
	jne	L277
	pushl	$97
	call	_io_in8
	movl	%eax, %ebx
	andl	$13, %ebx
	pushl	%ebx
	pushl	$97
	call	_io_out8
L279:
	addl	$12, %esp
	jmp	L224
L277:
	movl	$1193180000, %ecx
	movl	%edx, %esi
	movl	%ecx, %eax
	pushl	$182
	cltd
	idivl	%esi
	pushl	$67
	movl	%eax, %ebx
	call	_io_out8
	movzbl	%bl,%eax
	sarl	$8, %ebx
	pushl	%eax
	pushl	$66
	call	_io_out8
	pushl	%ebx
	pushl	$66
	call	_io_out8
	pushl	$97
	call	_io_in8
	movl	%eax, %ebx
	orl	$3, %ebx
	andl	$15, %ebx
	pushl	%ebx
	pushl	$97
	call	_io_out8
	addl	$36, %esp
	jmp	L224
L304:
	pushl	24(%ebp)
	call	_timer_free
L280:
	popl	%ebx
	jmp	L224
L303:
	pushl	36(%ebp)
	pushl	24(%ebp)
	call	_timer_settime
L282:
	popl	%esi
	popl	%edi
	jmp	L224
L302:
	movl	36(%ebp), %eax
	addl	$256, %eax
	pushl	%eax
	movl	-16(%ebp), %eax
	addl	$16, %eax
	pushl	%eax
	pushl	24(%ebp)
	call	_timer_init
	jmp	L279
L301:
	call	_timer_alloc
	movl	%eax, 68(%ebp)
	movb	$1, 9(%eax)
	jmp	L224
L256:
	call	_io_cli
	movl	-16(%ebp), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	jne	L259
	cmpl	$0, 36(%ebp)
	je	L260
	pushl	-16(%ebp)
	call	_task_sleep
	popl	%eax
L259:
	movl	-16(%ebp), %edi
	addl	$16, %edi
	pushl	%edi
	call	_fifo32_get
	movl	%eax, %ebx
	call	_io_sti
	popl	%eax
	cmpl	$1, %ebx
	jle	L306
L262:
	cmpl	$2, %ebx
	je	L307
L263:
	cmpl	$3, %ebx
	je	L308
L264:
	cmpl	$4, %ebx
	je	L309
L265:
	cmpl	$255, %ebx
	jle	L256
	leal	-256(%ebx), %eax
	movl	%eax, 68(%ebp)
	jmp	L224
L309:
	pushl	16(%esi)
	call	_timer_cancel
	call	_io_cli
	movl	(%esi), %eax
	subl	-20(%ebp), %eax
	subl	$1044, %eax
	sarl	$3, %eax
	imull	$-858993459, %eax, %eax
	addl	$2024, %eax
	pushl	%eax
	pushl	-24(%ebp)
	call	_fifo32_put
	movl	$0, (%esi)
	call	_io_sti
	addl	$12, %esp
	jmp	L265
L308:
	movl	$-1, 12(%esi)
	jmp	L264
L307:
	movl	$7, 12(%esi)
	jmp	L263
L306:
	cmpl	$0, (%esi)
	je	L262
	pushl	$1
	pushl	%edi
	pushl	16(%esi)
	call	_timer_init
	pushl	$50
	pushl	16(%esi)
	call	_timer_settime
	addl	$20, %esp
	jmp	L262
L260:
	call	_io_sti
	movl	$-1, 68(%ebp)
	jmp	L224
L300:
	pushl	24(%ebp)
	call	_sheet_free
	jmp	L280
L299:
	pushl	16(%ebp)
	pushl	8(%ebp)
	pushl	12(%ebp)
	pushl	32(%ebp)
	movl	24(%ebp), %esi
	pushl	36(%ebp)
	andl	$-2, %esi
	pushl	%esi
	call	_hrb_api_linewin
	addl	$24, %esp
L286:
	testl	$1, 24(%ebp)
	jne	L224
	movl	8(%ebp), %eax
	incl	%eax
	pushl	%eax
	movl	12(%ebp), %eax
	incl	%eax
	pushl	%eax
	pushl	32(%ebp)
	pushl	36(%ebp)
L284:
	pushl	%esi
L281:
	call	_sheet_refresh
L283:
	addl	$20, %esp
	jmp	L224
L298:
	pushl	8(%ebp)
	pushl	12(%ebp)
	pushl	32(%ebp)
	pushl	36(%ebp)
	pushl	24(%ebp)
	jmp	L281
L297:
	movl	24(%ebp), %esi
	movl	8(%ebp), %eax
	andl	$-2, %esi
	movb	36(%ebp), %dl
	imull	4(%esi), %eax
	addl	12(%ebp), %eax
	movl	(%esi), %ecx
	movb	%dl, (%eax,%ecx)
	testl	$1, 24(%ebp)
	jne	L224
	movl	8(%ebp), %eax
	incl	%eax
	pushl	%eax
	movl	12(%ebp), %eax
	incl	%eax
	pushl	%eax
	pushl	8(%ebp)
	pushl	12(%ebp)
	jmp	L284
L296:
	movl	32(%ebp), %eax
	addl	$15, %eax
	andl	$-16, %eax
	pushl	%eax
	movl	24(%ebp), %eax
	pushl	36(%ebp)
	addl	%edi, %eax
	pushl	%eax
	call	_memman_free
	jmp	L279
L295:
	movl	32(%ebp), %eax
	addl	$15, %eax
	andl	$-16, %eax
	pushl	%eax
	movl	24(%ebp), %eax
	addl	%edi, %eax
	pushl	%eax
	call	_memman_alloc
	movl	%eax, 68(%ebp)
	jmp	L282
L294:
	movl	24(%ebp), %ebx
	addl	%edi, %ebx
	pushl	%ebx
	call	_memman_init
	andl	$-16, 32(%ebp)
	pushl	32(%ebp)
	pushl	36(%ebp)
	pushl	%ebx
	call	_memman_free
	addl	$16, %esp
	jmp	L224
L293:
	pushl	8(%ebp)
	pushl	12(%ebp)
	pushl	32(%ebp)
	movl	24(%ebp), %esi
	pushl	36(%ebp)
	andl	$-2, %esi
	movzbl	16(%ebp), %eax
	pushl	%eax
	pushl	4(%esi)
	pushl	(%esi)
	call	_boxfill8
	addl	$28, %esp
	jmp	L286
L292:
	movl	16(%ebp), %eax
	movl	24(%ebp), %esi
	addl	%edi, %eax
	andl	$-2, %esi
	pushl	%eax
	movsbl	36(%ebp),%eax
	pushl	%eax
	pushl	8(%ebp)
	pushl	12(%ebp)
	pushl	4(%esi)
	pushl	(%esi)
	call	_putfonts8_asc
	addl	$24, %esp
	testl	$1, 24(%ebp)
	jne	L224
	movl	12(%ebp), %ecx
	movl	8(%ebp), %eax
	movl	32(%ebp), %edx
	addl	$16, %eax
	pushl	%eax
	leal	(%ecx,%edx,8), %eax
	pushl	%eax
	pushl	8(%ebp)
	pushl	%ecx
	jmp	L284
L291:
	pushl	-20(%ebp)
	call	_sheet_alloc
	movl	24(%ebp), %ebx
	movl	-16(%ebp), %ecx
	addl	%edi, %ebx
	movl	%ecx, 36(%eax)
	movl	%eax, %esi
	orl	$16, 28(%eax)
	pushl	36(%ebp)
	pushl	8(%ebp)
	pushl	12(%ebp)
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	movl	32(%ebp), %eax
	pushl	$0
	addl	%edi, %eax
	pushl	%eax
	pushl	8(%ebp)
	pushl	12(%ebp)
	pushl	%ebx
	movl	$2, %ebx
	call	_make_window8
	movl	-20(%ebp), %ecx
	movl	-20(%ebp), %edx
	addl	$44, %esp
	movl	12(%edx), %eax
	subl	8(%ebp), %eax
	cltd
	idivl	%ebx
	pushl	%eax
	movl	8(%ecx), %eax
	subl	12(%ebp), %eax
	cltd
	idivl	%ebx
	andl	$-4, %eax
	pushl	%eax
	pushl	%esi
	call	_sheet_slide
	movl	-20(%ebp), %eax
	pushl	16(%eax)
	pushl	%esi
	call	_sheet_updown
	movl	%esi, 68(%ebp)
	jmp	L283
L290:
	movl	-16(%ebp), %eax
	addl	$48, %eax
	jmp	L222
L289:
	movl	24(%ebp), %eax
	pushl	32(%ebp)
	addl	%edi, %eax
	pushl	%eax
	pushl	%esi
	call	_cons_putstr1
	jmp	L279
L288:
	movl	24(%ebp), %eax
	addl	%edi, %eax
	pushl	%eax
	pushl	%esi
	call	_cons_putstr0
	jmp	L282
L287:
	pushl	$1
	movzbl	36(%ebp), %eax
	pushl	%eax
	pushl	%esi
	call	_cons_putchar
	jmp	L279
	.data
LC14:
	.ascii "\12INT 0C :\12 Stack Exception.\12\0"
LC15:
	.ascii "EIP = %08X\12\0"
	.text
	.balign 2
.globl _inthandler0c
	.def	_inthandler0c;	.scl	2;	.type	32;	.endef
_inthandler0c:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-44(%ebp), %ebx
	subl	$32, %esp
	call	_task_now
	movl	%eax, %esi
	movl	164(%eax), %edi
	addl	$48, %esi
	pushl	$LC14
	pushl	%edi
	call	_cons_putstr0
	movl	8(%ebp), %eax
	pushl	44(%eax)
	pushl	$LC15
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	%edi
	call	_cons_putstr0
	leal	-12(%ebp), %esp
	popl	%ebx
	movl	%esi, %eax
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC16:
	.ascii "\12INT 0D :\12 General Protected Exception.\12\0"
	.text
	.balign 2
.globl _inthandler0d
	.def	_inthandler0d;	.scl	2;	.type	32;	.endef
_inthandler0d:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-44(%ebp), %ebx
	subl	$32, %esp
	call	_task_now
	movl	%eax, %esi
	movl	164(%eax), %edi
	addl	$48, %esi
	pushl	$LC16
	pushl	%edi
	call	_cons_putstr0
	movl	8(%ebp), %eax
	pushl	44(%eax)
	pushl	$LC15
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	%edi
	call	_cons_putstr0
	leal	-12(%ebp), %esp
	popl	%ebx
	movl	%esi, %eax
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _hrb_api_linewin
	.def	_hrb_api_linewin;	.scl	2;	.type	32;	.endef
_hrb_api_linewin:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movl	12(%ebp), %ebx
	movl	20(%ebp), %eax
	movl	%ebx, %ecx
	movl	24(%ebp), %edx
	sall	$10, %ecx
	movl	%edx, %edi
	movl	%ecx, -16(%ebp)
	movl	%eax, %esi
	movl	16(%ebp), %ecx
	subl	16(%ebp), %edi
	sall	$10, %ecx
	subl	%ebx, %esi
	movl	%ecx, -20(%ebp)
	js	L334
L313:
	testl	%edi, %edi
	js	L335
L314:
	cmpl	%edi, %esi
	jl	L315
	leal	1(%esi), %ecx
	cmpl	%eax, %ebx
	movl	$-1024, %esi
	jg	L317
	movl	$1024, %esi
L317:
	cmpl	%edx, 16(%ebp)
	jg	L318
	subl	16(%ebp), %edx
	incl	%edx
L333:
	sall	$10, %edx
	movl	%edx, %eax
	cltd
	idivl	%ecx
	movl	%eax, %edi
L320:
	testl	%ecx, %ecx
	jle	L331
	movl	%ecx, %ebx
L329:
	movl	8(%ebp), %edx
	movl	-20(%ebp), %eax
	sarl	$10, %eax
	movl	-16(%ebp), %ecx
	imull	4(%edx), %eax
	sarl	$10, %ecx
	movl	%ecx, -24(%ebp)
	movl	(%edx), %ecx
	addl	-24(%ebp), %eax
	movb	28(%ebp), %dl
	movb	%dl, (%eax,%ecx)
	addl	%esi, -16(%ebp)
	addl	%edi, -20(%ebp)
	decl	%ebx
	jne	L329
L331:
	addl	$12, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L318:
	subl	16(%ebp), %edx
	decl	%edx
	jmp	L333
L315:
	leal	1(%edi), %ecx
	cmpl	%edx, 16(%ebp)
	movl	$-1024, %edi
	jg	L322
	movl	$1024, %edi
L322:
	cmpl	%eax, %ebx
	jg	L323
	subl	%ebx, %eax
	leal	1(%eax), %edx
L332:
	sall	$10, %edx
	movl	%edx, %eax
	cltd
	idivl	%ecx
	movl	%eax, %esi
	jmp	L320
L323:
	subl	%ebx, %eax
	leal	-1(%eax), %edx
	jmp	L332
L335:
	negl	%edi
	jmp	L314
L334:
	negl	%esi
	jmp	L313
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_in8;	.scl	2;	.type	32;	.endef
	.def	_timer_free;	.scl	2;	.type	32;	.endef
	.def	_hrb_api_linewin;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_timer_cancelall;	.scl	2;	.type	32;	.endef
	.def	_sheet_free;	.scl	2;	.type	32;	.endef
	.def	_start_app;	.scl	2;	.type	32;	.endef
	.def	_set_segmdesc;	.scl	2;	.type	32;	.endef
	.def	_open_constask;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_open_console;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_timer_cancel;	.scl	2;	.type	32;	.endef
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_file_loadfile;	.scl	2;	.type	32;	.endef
	.def	_file_search;	.scl	2;	.type	32;	.endef
	.def	_memman_total;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_cmd_app;	.scl	2;	.type	32;	.endef
	.def	_cmd_ncst;	.scl	2;	.type	32;	.endef
	.def	_cmd_start;	.scl	2;	.type	32;	.endef
	.def	_cmd_type;	.scl	2;	.type	32;	.endef
	.def	_cmd_dir;	.scl	2;	.type	32;	.endef
	.def	_cmd_cls;	.scl	2;	.type	32;	.endef
	.def	_cmd_mem;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc_sht;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_cons_runcmd;	.scl	2;	.type	32;	.endef
	.def	_cons_newline;	.scl	2;	.type	32;	.endef
	.def	_cmd_exit;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_cons_putchar;	.scl	2;	.type	32;	.endef
	.def	_file_readfat;	.scl	2;	.type	32;	.endef
	.def	_timer_settime;	.scl	2;	.type	32;	.endef
	.def	_timer_init;	.scl	2;	.type	32;	.endef
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_task_now;	.scl	2;	.type	32;	.endef
