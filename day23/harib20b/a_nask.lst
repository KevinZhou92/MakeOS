     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [BITS 32]
     4 00000000                                 [FILE "a_nask.nas"]
     5 00000000                                 
     6 00000000                                 		GLOBAL	_api_putchar
     7 00000000                                 		GLOBAL	_api_putstr0
     8 00000000                                 		GLOBAL	_api_end
     9 00000000                                 		GLOBAL	_api_openwin
    10 00000000                                 		GLOBAL	_api_putstrwin
    11 00000000                                 		GLOBAL	_api_boxfilwin
    12 00000000                                 		GLOBAL	_api_initmalloc
    13 00000000                                 		GLOBAL	_api_malloc
    14 00000000                                 		GLOBAL	_api_free
    15 00000000                                 		GLOBAL	_api_point
    16 00000000                                 
    17                                          [SECTION .text]
    18 00000000                                 
    19 00000000                                 _api_putchar:	; void api_putchar(int c);
    20 00000000 BA 00000001                     		MOV		EDX,1
    21 00000005 8A 44 24 04                     		MOV		AL,[ESP+4]		; c
    22 00000009 CD 40                           		INT		0x40
    23 0000000B C3                              		RET
    24 0000000C                                 
    25 0000000C                                 _api_putstr0:	; void api_putstr0(char *s);
    26 0000000C 53                              		PUSH	EBX
    27 0000000D BA 00000002                     		MOV		EDX,2
    28 00000012 8B 5C 24 08                     		MOV		EBX,[ESP+8]		; s
    29 00000016 CD 40                           		INT		0x40
    30 00000018 5B                              		POP		EBX
    31 00000019 C3                              		RET
    32 0000001A                                 
    33 0000001A                                 _api_end:	; void api_end(void);
    34 0000001A BA 00000004                     		MOV		EDX,4
    35 0000001F CD 40                           		INT		0x40
    36 00000021                                 
    37 00000021                                 _api_openwin:	; int api_openwin(char *buf, int xsiz, int ysiz, int col_inv, char *title);
    38 00000021 57                              		PUSH	EDI
    39 00000022 56                              		PUSH	ESI
    40 00000023 53                              		PUSH	EBX
    41 00000024 BA 00000005                     		MOV		EDX,5
    42 00000029 8B 5C 24 10                     		MOV		EBX,[ESP+16]	; buf
    43 0000002D 8B 74 24 14                     		MOV		ESI,[ESP+20]	; xsiz
    44 00000031 8B 7C 24 18                     		MOV		EDI,[ESP+24]	; ysiz
    45 00000035 8B 44 24 1C                     		MOV		EAX,[ESP+28]	; col_inv
    46 00000039 8B 4C 24 20                     		MOV		ECX,[ESP+32]	; title
    47 0000003D CD 40                           		INT		0x40
    48 0000003F 5B                              		POP		EBX
    49 00000040 5E                              		POP		ESI
    50 00000041 5F                              		POP		EDI
    51 00000042 C3                              		RET
    52 00000043                                 
    53 00000043                                 _api_putstrwin:	; void api_putstrwin(int win, int x, int y, int col, int len, char *str);
    54 00000043 57                              		PUSH	EDI
    55 00000044 56                              		PUSH	ESI
    56 00000045 55                              		PUSH	EBP
    57 00000046 53                              		PUSH	EBX
    58 00000047 BA 00000006                     		MOV		EDX,6
    59 0000004C 8B 5C 24 14                     		MOV		EBX,[ESP+20]	; win
    60 00000050 8B 74 24 18                     		MOV		ESI,[ESP+24]	; x
    61 00000054 8B 7C 24 1C                     		MOV		EDI,[ESP+28]	; y
    62 00000058 8B 44 24 20                     		MOV		EAX,[ESP+32]	; col
    63 0000005C 8B 4C 24 24                     		MOV		ECX,[ESP+36]	; len
    64 00000060 8B 6C 24 28                     		MOV		EBP,[ESP+40]	; str
    65 00000064 CD 40                           		INT		0x40
    66 00000066 5B                              		POP		EBX
    67 00000067 5D                              		POP		EBP
    68 00000068 5E                              		POP		ESI
    69 00000069 5F                              		POP		EDI
    70 0000006A C3                              		RET
    71 0000006B                                 
    72 0000006B                                 _api_boxfilwin:	; void api_boxfilwin(int win, int x0, int y0, int x1, int y1, int col);
    73 0000006B 57                              		PUSH	EDI
    74 0000006C 56                              		PUSH	ESI
    75 0000006D 55                              		PUSH	EBP
    76 0000006E 53                              		PUSH	EBX
    77 0000006F BA 00000007                     		MOV		EDX,7
    78 00000074 8B 5C 24 14                     		MOV		EBX,[ESP+20]	; win
    79 00000078 8B 44 24 18                     		MOV		EAX,[ESP+24]	; x0
    80 0000007C 8B 4C 24 1C                     		MOV		ECX,[ESP+28]	; y0
    81 00000080 8B 74 24 20                     		MOV		ESI,[ESP+32]	; x1
    82 00000084 8B 7C 24 24                     		MOV		EDI,[ESP+36]	; y1
    83 00000088 8B 6C 24 28                     		MOV		EBP,[ESP+40]	; col
    84 0000008C CD 40                           		INT		0x40
    85 0000008E 5B                              		POP		EBX
    86 0000008F 5D                              		POP		EBP
    87 00000090 5E                              		POP		ESI
    88 00000091 5F                              		POP		EDI
    89 00000092 C3                              		RET
    90 00000093                                 
    91 00000093                                 _api_initmalloc:	; void api_initmalloc(void);
    92 00000093 53                              		PUSH	EBX
    93 00000094 BA 00000008                     		MOV		EDX,8
    94 00000099 2E 8B 1D 00000020               		MOV		EBX,[CS:0x0020]		; malloc領域の番地
    95 000000A0 89 D8                           		MOV		EAX,EBX
    96 000000A2 05 00008000                     		ADD		EAX,32*1024			; 32KBを足す
    97 000000A7 2E 8B 0D 00000000               		MOV		ECX,[CS:0x0000]		; データセグメントの大きさ
    98 000000AE 29 C1                           		SUB		ECX,EAX
    99 000000B0 CD 40                           		INT		0x40
   100 000000B2 5B                              		POP		EBX
   101 000000B3 C3                              		RET
   102 000000B4                                 
   103 000000B4                                 _api_malloc:		; char *api_malloc(int size);
   104 000000B4 53                              		PUSH	EBX
   105 000000B5 BA 00000009                     		MOV		EDX,9
   106 000000BA 2E 8B 1D 00000020               		MOV		EBX,[CS:0x0020]
   107 000000C1 8B 4C 24 08                     		MOV		ECX,[ESP+8]			; size
   108 000000C5 CD 40                           		INT		0x40
   109 000000C7 5B                              		POP		EBX
   110 000000C8 C3                              		RET
   111 000000C9                                 
   112 000000C9                                 _api_free:			; void api_free(char *addr, int size);
   113 000000C9 53                              		PUSH	EBX
   114 000000CA BA 0000000A                     		MOV		EDX,10
   115 000000CF 2E 8B 1D 00000020               		MOV		EBX,[CS:0x0020]
   116 000000D6 8B 44 24 08                     		MOV		EAX,[ESP+ 8]		; addr
   117 000000DA 8B 4C 24 0C                     		MOV		ECX,[ESP+12]		; size
   118 000000DE CD 40                           		INT		0x40
   119 000000E0 5B                              		POP		EBX
   120 000000E1 C3                              		RET
   121 000000E2                                 
   122 000000E2                                 _api_point:		; void api_point(int win, int x, int y, int col);
   123 000000E2 57                              		PUSH	EDI
   124 000000E3 56                              		PUSH	ESI
   125 000000E4 53                              		PUSH	EBX
   126 000000E5 BA 0000000B                     		MOV		EDX,11
   127 000000EA 8B 5C 24 10                     		MOV		EBX,[ESP+16]	; win
   128 000000EE 8B 74 24 14                     		MOV		ESI,[ESP+20]	; x
   129 000000F2 8B 7C 24 18                     		MOV		EDI,[ESP+24]	; y
   130 000000F6 8B 44 24 1C                     		MOV		EAX,[ESP+28]	; col
   131 000000FA CD 40                           		INT		0x40
   132 000000FC 5B                              		POP		EBX
   133 000000FD 5E                              		POP		ESI
   134 000000FE 5F                              		POP		EDI
   135 000000FF C3                              		RET
