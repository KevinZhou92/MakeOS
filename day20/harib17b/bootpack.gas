	.file	"bootpack.c"
	.data
_keytable0.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	0
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	0
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
_keytable1.1:
	.byte	0
	.byte	0
	.byte	33
	.byte	34
	.byte	35
	.byte	36
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	126
	.byte	61
	.byte	126
	.byte	0
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	96
	.byte	123
	.byte	0
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	43
	.byte	42
	.byte	0
	.byte	0
	.byte	125
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	60
	.byte	62
	.byte	63
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	124
	.byte	0
	.byte	0
LC0:
	.ascii "console\0"
LC1:
	.ascii "task_a\0"
LC2:
	.ascii " \0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$1096, %esp
	movl	$0, -1092(%ebp)
	movl	$0, -1096(%ebp)
	movb	4081, %al
	sarb	$4, %al
	movl	%eax, %edx
	andl	$7, %edx
	movl	%edx, -1100(%ebp)
	movl	$-1, -1104(%ebp)
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	leal	-636(%ebp), %eax
	pushl	$0
	pushl	%eax
	leal	-92(%ebp), %eax
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	call	_init_pit
	leal	-92(%ebp), %edx
	pushl	$256
	pushl	%edx
	call	_init_keyboard
	leal	-780(%ebp), %eax
	pushl	%eax
	leal	-92(%ebp), %eax
	pushl	$512
	pushl	%eax
	call	_enable_mouse
	addl	$36, %esp
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	leal	-124(%ebp), %edx
	pushl	$0
	leal	-764(%ebp), %eax
	pushl	%eax
	pushl	$32
	pushl	%edx
	call	_fifo32_init
	addl	$32, %esp
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	$3932160
	movl	%eax, -1056(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	$3932160
	call	_memman_free
	movl	-1056(%ebp), %eax
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	addl	$36, %esp
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	pushl	$3932160
	call	_shtctl_init
	pushl	$3932160
	movl	%eax, %esi
	call	_task_init
	pushl	$2
	pushl	$1
	movl	%eax, -1080(%ebp)
	pushl	%eax
	movl	%eax, -68(%ebp)
	call	_task_run
	addl	$32, %esp
	pushl	%esi
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -1068(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, %ebx
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	pushl	-1068(%ebp)
	call	_sheet_setbuf
	addl	$32, %esp
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	leal	-1036(%ebp), %ebx
	call	_init_screen8
	pushl	%esi
	call	_sheet_alloc
	pushl	$42240
	pushl	$3932160
	movl	%eax, -1076(%ebp)
	call	_memman_alloc_4k
	pushl	$-1
	pushl	$165
	movl	%eax, -1064(%ebp)
	pushl	$256
	pushl	%eax
	pushl	-1076(%ebp)
	call	_sheet_setbuf
	addl	$44, %esp
	pushl	$0
	pushl	$LC0
	pushl	$165
	pushl	$256
	pushl	-1064(%ebp)
	call	_make_window8
	pushl	$0
	pushl	$128
	pushl	$240
	pushl	$28
	pushl	$8
	pushl	-1076(%ebp)
	call	_make_textbox8
	addl	$44, %esp
	call	_task_alloc
	pushl	$65536
	pushl	$3932160
	movl	%eax, -1084(%ebp)
	call	_memman_alloc_4k
	movl	-1084(%ebp), %edx
	addl	$65524, %eax
	movl	%eax, 100(%edx)
	movl	$_console_task, 76(%edx)
	movl	$8, 116(%edx)
	movl	$16, 120(%edx)
	movl	$8, 124(%edx)
	movl	$8, 128(%edx)
	movl	$8, 132(%edx)
	movl	$8, 136(%edx)
	movl	-1076(%ebp), %edx
	movl	%edx, 4(%eax)
	movl	-1084(%ebp), %edx
	movl	100(%edx), %eax
	movl	-1056(%ebp), %edx
	movl	%edx, 8(%eax)
	pushl	$2
	pushl	$2
	pushl	-1084(%ebp)
	call	_task_run
	pushl	%esi
	call	_sheet_alloc
	pushl	$8320
	pushl	$3932160
	movl	%eax, %edi
	call	_memman_alloc_4k
	addl	$32, %esp
	pushl	$-1
	movl	%eax, -1060(%ebp)
	pushl	$52
	pushl	$144
	pushl	%eax
	pushl	%edi
	call	_sheet_setbuf
	pushl	$1
	pushl	$LC1
	pushl	$52
	pushl	$144
	pushl	-1060(%ebp)
	call	_make_window8
	addl	$40, %esp
	pushl	$7
	pushl	$16
	pushl	$128
	pushl	$28
	pushl	$8
	pushl	%edi
	call	_make_textbox8
	movl	$8, -1048(%ebp)
	movl	$7, -1052(%ebp)
	call	_timer_alloc
	pushl	$1
	movl	%eax, -1088(%ebp)
	leal	-92(%ebp), %eax
	pushl	%eax
	pushl	-1088(%ebp)
	call	_timer_init
	addl	$36, %esp
	pushl	$50
	pushl	-1088(%ebp)
	call	_timer_settime
	pushl	%esi
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	pushl	$16
	movl	%eax, -1072(%ebp)
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -1040(%ebp)
	movswl	4086,%eax
	pushl	$0
	leal	-44(%eax), %ecx
	pushl	$0
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	pushl	-1068(%ebp)
	movl	%eax, -1044(%ebp)
	call	_sheet_slide
	pushl	$4
	pushl	$32
	pushl	-1076(%ebp)
	call	_sheet_slide
	addl	$32, %esp
	pushl	$56
	pushl	$64
	pushl	%edi
	call	_sheet_slide
	pushl	-1044(%ebp)
	pushl	-1040(%ebp)
	pushl	-1072(%ebp)
	call	_sheet_slide
	pushl	$0
	pushl	-1068(%ebp)
	call	_sheet_updown
	addl	$32, %esp
	pushl	$1
	pushl	-1076(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	%edi
	call	_sheet_updown
	pushl	$3
	pushl	-1072(%ebp)
	call	_sheet_updown
	leal	-124(%ebp), %edx
	pushl	$237
	pushl	%edx
	call	_fifo32_put
	leal	-124(%ebp), %eax
	addl	$32, %esp
	pushl	-1100(%ebp)
	pushl	%eax
	call	_fifo32_put
	popl	%ecx
	popl	%ebx
L2:
	leal	-124(%ebp), %ebx
	pushl	%ebx
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	jle	L5
	cmpl	$0, -1104(%ebp)
	js	L57
L5:
	leal	-92(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%esi
	testl	%eax, %eax
	je	L58
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, %esi
	call	_io_sti
	popl	%edx
	leal	-256(%esi), %eax
	cmpl	$255, %eax
	jbe	L59
	leal	-512(%esi), %eax
	cmpl	$255, %eax
	jbe	L60
	cmpl	$1, %esi
	jg	L2
	testl	%esi, %esi
	je	L50
	pushl	$0
	pushl	%ebx
	pushl	-1088(%ebp)
	call	_timer_init
	addl	$12, %esp
	cmpl	$0, -1052(%ebp)
	js	L52
	movl	$0, -1052(%ebp)
L52:
	pushl	$50
	pushl	-1088(%ebp)
	call	_timer_settime
	popl	%eax
	popl	%edx
	cmpl	$0, -1052(%ebp)
	js	L2
	movl	-1048(%ebp), %eax
	pushl	$43
	addl	$7, %eax
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	movzbl	-1052(%ebp), %eax
	pushl	%eax
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	movl	-1048(%ebp), %eax
	pushl	$44
	addl	$8, %eax
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	pushl	%edi
	call	_sheet_refresh
	addl	$48, %esp
	jmp	L2
L50:
	pushl	$1
	pushl	%ebx
	pushl	-1088(%ebp)
	call	_timer_init
	addl	$12, %esp
	cmpl	$0, -1052(%ebp)
	js	L52
	movl	$7, -1052(%ebp)
	jmp	L52
L60:
	movl	%esi, %edx
	movzbl	%dl, %eax
	pushl	%eax
	leal	-780(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%ecx
	popl	%ebx
	testl	%eax, %eax
	je	L2
	movl	-772(%ebp), %eax
	movl	-776(%ebp), %edx
	addl	%eax, -1044(%ebp)
	addl	%edx, -1040(%ebp)
	js	L61
L43:
	cmpl	$0, -1044(%ebp)
	js	L62
L44:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, -1040(%ebp)
	jle	L45
	movl	%eax, -1040(%ebp)
L45:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, -1044(%ebp)
	jle	L46
	movl	%eax, -1044(%ebp)
L46:
	pushl	-1044(%ebp)
	pushl	-1040(%ebp)
	pushl	-1072(%ebp)
	call	_sheet_slide
	addl	$12, %esp
	testl	$1, -768(%ebp)
	je	L2
	movl	-1044(%ebp), %eax
	subl	$8, %eax
	pushl	%eax
	movl	-1040(%ebp), %eax
	subl	$80, %eax
	pushl	%eax
	pushl	%edi
	call	_sheet_slide
	addl	$12, %esp
	jmp	L2
L62:
	movl	$0, -1044(%ebp)
	jmp	L44
L61:
	movl	$0, -1040(%ebp)
	jmp	L43
L59:
	cmpl	$383, %esi
	jg	L9
	cmpl	$0, -1096(%ebp)
	jne	L10
	movb	_keytable0.0-256(%esi), %al
L56:
	movb	%al, -60(%ebp)
L12:
	movb	-60(%ebp), %dl
	leal	-65(%edx), %eax
	cmpb	$25, %al
	ja	L13
	testl	$4, -1100(%ebp)
	jne	L55
	cmpl	$0, -1096(%ebp)
	je	L15
L13:
	movb	-60(%ebp), %al
	testb	%al, %al
	je	L17
	cmpl	$0, -1092(%ebp)
	jne	L18
	cmpl	$127, -1048(%ebp)
	jg	L17
	pushl	$1
	leal	-60(%ebp), %eax
	pushl	%eax
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	-1048(%ebp)
	pushl	%edi
	movb	$0, -59(%ebp)
	call	_putfonts8_asc_sht
	addl	$28, %esp
	addl	$8, -1048(%ebp)
L17:
	cmpl	$270, %esi
	je	L63
L21:
	cmpl	$284, %esi
	je	L64
L25:
	cmpl	$271, %esi
	je	L65
L27:
	cmpl	$298, %esi
	je	L66
L30:
	cmpl	$310, %esi
	je	L67
L31:
	cmpl	$426, %esi
	je	L68
L32:
	cmpl	$438, %esi
	je	L69
L33:
	cmpl	$314, %esi
	je	L70
L34:
	cmpl	$325, %esi
	je	L71
L35:
	cmpl	$326, %esi
	je	L72
L36:
	cmpl	$506, %esi
	je	L73
L37:
	cmpl	$510, %esi
	je	L74
L38:
	cmpl	$0, -1052(%ebp)
	js	L39
	movl	-1048(%ebp), %eax
	pushl	$43
	addl	$7, %eax
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	movzbl	-1052(%ebp), %eax
	pushl	%eax
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	addl	$28, %esp
L39:
	movl	-1048(%ebp), %eax
	pushl	$44
	addl	$8, %eax
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	pushl	%edi
	call	_sheet_refresh
	addl	$20, %esp
	jmp	L2
L74:
	call	_wait_KBC_sendready
	pushl	-1104(%ebp)
	pushl	$96
	call	_io_out8
	popl	%esi
	popl	%eax
	jmp	L38
L73:
	movl	$-1, -1104(%ebp)
	jmp	L37
L72:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$1, -1100(%ebp)
	call	_fifo32_put
	pushl	-1100(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L36
L71:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$2, -1100(%ebp)
	call	_fifo32_put
	pushl	-1100(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L35
L70:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$4, -1100(%ebp)
	call	_fifo32_put
	pushl	-1100(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L34
L69:
	andl	$-3, -1096(%ebp)
	jmp	L33
L68:
	andl	$-2, -1096(%ebp)
	jmp	L32
L67:
	orl	$2, -1096(%ebp)
	jmp	L31
L66:
	orl	$1, -1096(%ebp)
	jmp	L30
L65:
	cmpl	$0, -1092(%ebp)
	jne	L28
	pushl	$0
	pushl	$LC1
	pushl	4(%edi)
	pushl	-1060(%ebp)
	movl	$1, -1092(%ebp)
	call	_make_wtitle8
	movl	-1076(%ebp), %edx
	pushl	$1
	pushl	$LC0
	pushl	4(%edx)
	pushl	-1064(%ebp)
	call	_make_wtitle8
	movl	-1048(%ebp), %eax
	addl	$32, %esp
	addl	$7, %eax
	movl	$-1, -1052(%ebp)
	pushl	$43
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	pushl	$7
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	movl	-1084(%ebp), %eax
	pushl	$2
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	addl	$36, %esp
L29:
	pushl	$21
	pushl	4(%edi)
	pushl	$0
	pushl	$0
	pushl	%edi
	call	_sheet_refresh
	movl	-1076(%ebp), %edx
	pushl	$21
	pushl	4(%edx)
	pushl	$0
	pushl	$0
	pushl	%edx
	call	_sheet_refresh
	addl	$40, %esp
	jmp	L27
L28:
	pushl	$1
	pushl	$LC1
	pushl	4(%edi)
	pushl	-1060(%ebp)
	movl	$0, -1092(%ebp)
	call	_make_wtitle8
	movl	-1076(%ebp), %eax
	pushl	$0
	pushl	$LC0
	pushl	4(%eax)
	pushl	-1064(%ebp)
	call	_make_wtitle8
	movl	-1084(%ebp), %eax
	addl	$32, %esp
	addl	$16, %eax
	movl	$0, -1052(%ebp)
	pushl	$3
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L29
L64:
	cmpl	$0, -1092(%ebp)
	je	L25
	movl	-1084(%ebp), %eax
	pushl	$266
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%ecx
	popl	%ebx
	jmp	L25
L63:
	cmpl	$0, -1092(%ebp)
	jne	L22
	cmpl	$8, -1048(%ebp)
	jle	L21
	pushl	$1
	pushl	$LC2
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	-1048(%ebp)
	pushl	%edi
	call	_putfonts8_asc_sht
	addl	$28, %esp
	subl	$8, -1048(%ebp)
	jmp	L21
L22:
	movl	-1084(%ebp), %eax
	pushl	$264
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L21
L18:
	movsbl	%al,%eax
	addl	$256, %eax
	pushl	%eax
	movl	-1084(%ebp), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%ecx
	popl	%ebx
	jmp	L17
L15:
	leal	32(%edx), %eax
	movb	%al, -60(%ebp)
	jmp	L13
L55:
	cmpl	$0, -1096(%ebp)
	je	L13
	jmp	L15
L10:
	movb	_keytable1.1-256(%esi), %al
	jmp	L56
L9:
	movb	$0, -60(%ebp)
	jmp	L12
L58:
	pushl	-1080(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%ecx
	jmp	L2
L57:
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1104(%ebp)
	call	_wait_KBC_sendready
	pushl	-1104(%ebp)
	pushl	$96
	call	_io_out8
	addl	$12, %esp
	jmp	L5
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_make_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc_sht;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_wait_KBC_sendready;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_timer_settime;	.scl	2;	.type	32;	.endef
	.def	_timer_init;	.scl	2;	.type	32;	.endef
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
	.def	_console_task;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
